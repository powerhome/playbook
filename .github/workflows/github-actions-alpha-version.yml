name: Alpha Version
run-name: ${{ github.actor }} is creating an Alpha Version ðŸš€
on:
  pull_request:
    types: [ labeled ]
jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  setup:
    needs: checkout
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./playbook
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Ruby Setup
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Python Setup
        uses: actions/setup-python@v4 
        with: 
          python-version: '2.7'
      - name: Set Git Config
        run: |
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"

  grab-version:
    needs: checkout
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./playbook
    env:
      BRANCH_NAME: ${{ github.head_ref }}
    steps:
      - name: Grab Current Version
        run: |
          playbook_version=$(node -pe "require('./package.json').version")
          echo "playbook_version=${playbook_version}" >> $GITHUB_ENV
      - name: Set New Alpha Version
        id: grab-package-version
        run: |
          alpha_version="${{ env.playbook_version }}-alpha.${{ env.BRANCH_NAME }}${{ github.run_number }}"
          echo "new_alpha_version=${alpha_version}" >> $GITHUB_ENV

  publish:
    needs: [checkout, grab-version, setup]
    if: github.event.label.name == 'alpha'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./playbook
    env:
      FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
      NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Version Up, Distribute and Publish
        run: |
          yarn install
          yarn version --new-version ${{ env.new_alpha_version }}
          bundle
          yarn release
          npm pack
          npm publish playbook-ui-${{ env.new_alpha_version }}.tgz --tag alpha
