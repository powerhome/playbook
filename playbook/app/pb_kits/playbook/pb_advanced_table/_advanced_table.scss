@import "../tokens/colors";
@import "../tokens/opacity";
@import "../tokens/border_radius";
@import "../tokens/spacing";
@import "./scss_partials/loading";
@import "./scss_partials/pseudo_states";
@import "./scss_partials/chrome_styles";
@import "../tokens/screen_sizes";
@import "../tokens/shadows";
@import "../tokens/positioning";
@import "./scss_partials/advanced_table_sticky_mixin";

.pb_advanced_table {
  $border-color: 1px solid $border_light;

  // Base vertical border color variable setup
  --column-border-color: #{$border_light};

  // Define color tokens once
  $border_color_options: (
    "text_lt_default": $text_lt_default,
    "text_lt_light": $text_lt_light,
    "text_lt_lighter": $text_lt_lighter,
    "text_dk_default": $text_dk_default,
    "text_dk_light": $text_dk_light,
    "text_dk_lighter": $text_dk_lighter
  );

  // Generate classes for each color option
  @each $color_name, $color_value in $border_color_options {
    &.column-group-border-#{$color_name} {
      --column-border-color: #{$color_value};
    }
  }

  @mixin scrollbar-styling {
     &::-webkit-scrollbar {
        width: 8px;
      }

      -ms-overflow-style: none !important;
      scrollbar-width: thin;
      scrollbar-color: #00000033 transparent !important;
  }

  [id$="-span"] {
    word-wrap: normal;
  }

  .bg-silver {
    background-color: lighten($silver, $opacity_7);
  }

  .bg-white {
    background-color: $white;
  }

  .bg-row-selection {
    background-color: #E5EEFA;
  }

  .full-width {
    width: 100%;
  }

  // Virtualized Table and Rows for Infinite Scroll
  scrollbar-gutter: stable right-edges;
  .virtualized-header-row-header {
    width: 100% !important;
    .table-header-cells:first-child {
      min-width: 180px;
    }
  }

  .virtualized-footer {
    width: 100% !important;
    td {
      border-bottom-left-radius: 4px !important;
      border-bottom-right-radius: 4px !important;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  .virtualized-table-row {
    display: table !important;
    table-layout: fixed !important;
    box-sizing: border-box !important;

    td {
      display: table-cell !important;
      box-sizing: border-box !important;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    // Ensure the first column has proper width
    td:first-child {
      min-width: 180px;
    }

    // First column (typically the checkbox column)
    td:first-child.checkbox-cell {
      width: 40px !important; // Set a fixed width that matches header
      min-width: 40px !important;
      box-sizing: border-box !important;
      text-align: center;
    }

    // Ensure the first data column has proper alignment with header
    td:first-of-type:not(.checkbox-cell) {
      min-width: 180px;
      text-align: left;
    }
  }

  &.advanced-table-hide-scrollbar {
      &::-webkit-scrollbar {
        display: none !important;
      }

      -ms-overflow-style: none !important;
      scrollbar-width: none !important;
  }

  // When action bar is hidden, ensure proper border radius for header corners
  &.hidden-action-bar {
    .pb_advanced_table_header {
      > tr:first-child {
        th:first-child {
          border-top-left-radius: 4px !important;
        }
        th:last-child {
          border-top-right-radius: 4px !important;
        }
      }
    }

    // Also handle the case when there are multiple header rows
    .pb_advanced_table_header {
      > tr:first-child {
        th:first-child,
        .table-header-cells:first-child,
        .table-header-cells-custom:first-child {
          border-top-left-radius: 4px !important;
        }
        th:last-child,
        .table-header-cells:last-child,
        .table-header-cells-custom:last-child {
          border-top-right-radius: 4px !important;
        }
      }
    }
  }

  // When action bar is shown, remove border radius from header
  .row-selection-actions-card.is-visible ~ * .pb_advanced_table_header,
  .row-selection-actions-card.show-action-card ~ * .pb_advanced_table_header {
    > tr:first-child {
      th:first-child,
      th:last-child,
      .table-header-cells:first-child,
      .table-header-cells:last-child,
      .table-header-cells-custom:first-child,
      .table-header-cells-custom:last-child {
        border-top-left-radius: 0 !important;
        border-top-right-radius: 0 !important;
      }
    }
  }


  .row-selection-actions-card {
    border-bottom-right-radius: 0px !important;
    border-bottom-left-radius: 0px !important;
    border-bottom-color: transparent;
    transition: height 300ms ease;

    &.is-visible,
    &.show-action-card {
      border-top-left-radius: 4px !important;
      border-top-right-radius: 4px !important;
    }
  }
  .table-header-cells:first-child {
    min-width: 180px;
  }

  .pb_advanced_table_header {
    > tr:not(:first-child) {
      .last-header-cell {
        border-right: 1px solid $border_light !important;
      }
      th {
        border-radius: 0px !important;
        border-width: 0 0 1px 0 !important;
      }
      th:first-child {
        border-left-width: 1px !important;
      }
    }
    th[colspan]:not([colspan="1"]) {
      border-right: 1px solid $border_light !important;
    }
    .table-header-cells-custom {
      text-align: center;
      [class^="pb_checkbox_kit"] .pb_checkbox_label {
        padding-left: 0px;
      }
    }
    .header-cells-with-actions {
      border-top-left-radius: 0px !important;
      border-top-right-radius: 0px !important;
    }
    // Right align header content of first data column in selectable row no subrow setup
    &.selectable-rows-enabled {
      tr {
        th:nth-child(2),
        .pb_flex_kit_orientation_row_justify_content_start_align_items_center_spacing_none.gap_none {
          justify-content: flex-end;
        }
      }
    }

    // Set fixed width for header cells to match table body
    th {
      box-sizing: border-box !important;
      // Apply min-width to ensure consistent sizing
      &.table-header-cells:first-child,
      &.table-header-cells-custom:first-child {
        min-width: 180px;
      }

      // Set fixed width for checkbox column
      &.table-header-cells-custom,
      &.checkbox-cell.checkbox-cell-header {
        width: 40px !important;
        min-width: 40px !important;
        box-sizing: border-box !important;
      }
    }
    // Fixes for tooltip picking up th styling from Table kit
    .pb_tooltip_kit {
      font-weight: unset;
      text-transform: unset;
    }
  }

  .pb_advanced_table_body {
    .last-cell {
      border-right: 1px solid $border_light !important;
    }
    tr td:first-child {
      padding-left: 8px !important;
    }
    tr .pb_table_td:last-child {
      padding-right: 8px !important;
    }

    .checkbox-cell {
      display: flex;
      justify-content: center;
      [class^="pb_checkbox_kit"] .pb_checkbox_label {
        padding-left: 0px;
      }
    }

    // Fix virtualized row borders
    tr.virtualized-table-row {

      &.bg-silver {
        td:first-child {
          background-color: lighten($silver, $opacity_7);
        }
      }

      &.bg-white {
        td:first-child {
          background-color: $white;
        }
      }

      &.bg-row-selection {
        td:first-child {
          background-color: #E5EEFA;
        }
      }
    }
    td {
      [class^="pb_text_input_kit"] .text_input_wrapper input {
        padding: 0 $space_xxs;
        font-size: 14px;
        text-align: right;
      }
    }
    // Right align row content of first data column in selectable row no subrow setup
    &.selectable-rows-enabled {
      tr {
        td:nth-child(2),
        .pb_flex_kit_orientation_row_justify_content_start_align_items_center_spacing_none {
          justify-content: end;
        }
      }
    }
  }

  .table-header-cells-active:first-child {
    color: $primary !important;
  }

  // Sticky Header
  .sticky-header {
    thead {
      z-index: 3 !important;
    }
  }

  // Max height overflow - the below prevents expansion from overflowing container at full screen for responsive and nonresponsive tables
  &.advanced-table-max-height-xs {
    max-height: 320px;
    overflow-y: auto;
    @include scrollbar-styling;
  }
  &.advanced-table-max-height-sm {
    max-height: 480px;
    overflow-y: auto;
    @include scrollbar-styling;
  }
  &.advanced-table-max-height-md {
    max-height: 768px;
    overflow-y: auto;
    @include scrollbar-styling;
  }
  &.advanced-table-max-height-lg {
    max-height: 1024px;
    overflow-y: auto;
    @include scrollbar-styling;
  }
  &.advanced-table-max-height-xl {
    max-height: 1280px;
    overflow-y: auto;
    @include scrollbar-styling;
  }
  &.advanced-table-max-height-xxl {
    max-height: 1440px;
    overflow-y: auto;
    @include scrollbar-styling;
  }
  &.advanced-table-max-height-xxxl {
    max-height: 1920px;
    overflow-y: auto;
    @include scrollbar-styling;
  }

  // Fullscreen
  &.advanced-table-allow-fullscreen {
    transition: all 0.3s ease;
  }

  &.advanced-table-fullscreen {
    background-color: $bg_light;
    box-sizing: border-box;
    height: 100vh;
    left: 0;
    overflow: auto;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: $z_10;

    .pb_table {
      th,
      td,
      div,
      button {
        font-size: calc(100%);
      }
      box-sizing: border-box;
      margin: $space_lg;
      max-width: calc(100% - 64px);
      width: calc(100% - 64px);
    }

    .pb_table.sticky-header {
      thead,
      .pb_advanced_table_header {
        position: sticky !important;
        top: 44px !important;
        z-index: $z_10;
      }
    }
  }

  .advanced-table-fullscreen-header {
    background-color: $white;
    height: 44px;
    padding: 13px 20px;
    position: sticky;
    top: 0;
    width: 100%;
    z-index: $z_10;
  }

  // Icons
  .button-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    background: none;
    border: none;
  }

  .gray-icon {
    color: $text_lt_light;
    @extend %primary-color-pseudo;
  }

  .sort-button-icon {
    @extend .button-icon;
    padding: 2px;
  }

  .header-sort-secondary-columns {
    color: $primary !important;

    &:hover {
      background-color: rgba($primary, 0.03);
      border-radius: $border_radius_md;
    }
  }

  .toggle-all-icon {
    @extend .button-icon;
    @extend %primary-color-pseudo;
    padding: 2px 0;

    &:focus-visible {
      border-radius: $border_rad_lighter;
    }
  }

  .expand-toggle-icon {
    @extend .button-icon;
    @extend %primary-color-pseudo;
    position: relative;
    bottom: 1px;
    width: 18px;
    height: 18px;
    border-radius: 50%;
  }

  .header-sort-button {
    @extend %primary-color-pseudo;
    width: 100%;

    &:focus-visible {
      border-radius: $border_rad_heavier;
    }
  }

  .fullscreen-icon {
    @extend .button-icon;
    @extend %primary-color-pseudo;
    padding: 2px 0;

    &:focus-visible {
      border-radius: $border_rad_lighter;
    }
  }

  // First column separator/border
  .table-header-cells:first-child,
  .table-header-cells-custom:first-child,
  td:first-child,
  .pb_table_td:first-child,
  .checkbox-cell.checkbox-cell-header:first-child {
    box-shadow: 1px 0px 0px 0px var(--column-border-color) !important;
  }

  .pb_table_td:nth-child(2) {
    box-shadow: inset 1px 0px 0px 0px var(--column-border-color) !important;
  }

  // Color for collapsible trail
  .collapsible-trail {
    background-color: $border_light !important;
    position: absolute;
    top: 0;
    bottom: 0;
    width: 2px;
  }

  // Make sure all horizontal borders use the default border color
  tr, th, td {
    border-bottom-color: $border_light !important;
  }

  // Apply border colors when columnGroupBorderColor is set
  &[class*="column-group-border-"] {
    // For top-level column groups
    .pb_advanced_table_header {
      // The main column group headers
      > tr:first-child {
        th[colspan]:not([colspan="1"]):not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }
      }

      // Subgroup headers
      > tr:nth-child(2) {
        th[colspan]:not([colspan="1"]):not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }

        // Last cell in each subgroup
        th.last-header-cell:not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }
      }

      // Individual column headers at subgroup boundaries
      > tr:last-child {
        // Last cell in each subgroup
        th.last-header-cell:not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }
      }
    }

    // For data cells at column group boundaries
    .pb_advanced_table_body {
      // Apply to cells that are at column group boundaries
      td.last-cell:not(:last-child),
      .pb_table_td.last-cell:not(:last-child) {
        border-right: 1px solid var(--column-border-color) !important;
      }

      // Virtualized row cells at column group boundaries
      tr.virtualized-table-row {
        td.last-cell:not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }
      }
    }

    // Sub-row headers
    .toggle-content {
      td {
        border-bottom: 1px solid $border_light !important;
      }
    }
  }

  // Restore vertical border styling when verticalBorder is true
  .pb_table[data-vertical-border="true"] {
    .pb_advanced_table_header {
      > tr:not(:first-child) {
        th:not(:last-child) {
          border-right: 1px solid $border_light !important;
        }
      }
    }

    .pb_advanced_table_body {
      td:not(:last-child),
      .pb_table_td:not(:last-child) {
        border-right: 1px solid $border_light !important;
      }
    }

    tr.virtualized-table-row {
      td:not(:last-child) {
        border-right: 1px solid $border_light !important;
      }
    }

    // When both verticalBorder AND columnGroupBorderColor are set,
    // override the default border-light with the custom color
    &.pb_advanced_table[class*="column-group-border-"] {
      .pb_advanced_table_header {
        > tr:not(:first-child) {
          th:not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }
        }
      }

      .pb_advanced_table_body {
        td:not(:last-child),
        .pb_table_td:not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }
      }

      tr.virtualized-table-row {
        td:not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }
      }
    }
  }

  @include chrome_styles($border-color);

  tr:hover {
    position: relative;
  }

  .toggle-content {
    display: none !important;
    height: 0;
    padding-bottom: 0 !important;
    padding-top: 0 !important;
    overflow: hidden;
    transition: height 300ms, padding 300ms ease-in-out;
  }

  .toggle-content.is-visible {
    display: table-row !important;
    height: auto;
  }

  // Mixin to apply sticky column styles for different color modes and themes
  @mixin apply-sticky-colors($theme) {
    @each $color_name, $color_value in $border_color_options {
      &.column-group-border-#{$color_name} {
        @if $theme == "light" {
          @include advanced-table-sticky-mixin(
            $color_value,
            $white,
            lighten($silver, $opacity_7)
          );
        } @else if $theme == "dark" {
          @include advanced-table-sticky-mixin(
            $color_value,
            $bg_dark_card,
            $bg_dark
          );
        }
      }
    }
  }

  // Sticky Left Columns Styling
  &[class*="advanced-table-sticky-left-columns"] {
    overflow-x: scroll;
    @include scrollbar-styling;
    .sticky-left {
      position: sticky !important;
      z-index: 2;
      background-color: $white;
      box-shadow: $shadow_deep;
    }

    @include advanced-table-sticky-mixin(
      $border_light,
      $white,
      lighten($silver, $opacity_7)
    );
  }

  // Responsive Styles
  @media only screen and (max-width: $screen-xl-min) {
    &[class*="advanced-table-responsive-scroll"] {
      overflow-x: auto;
      width: 100%;
      @include scrollbar-styling;

      // These are the responsive borders that should NOT inherit the custom color
      @include advanced-table-sticky-mixin(
        $border_light,
        $white,
        lighten($silver, $opacity_7)
      );

      // Override any columnGroupBorderColor inheritance for responsive borders
      .sticky-left {
        box-shadow: $shadow_deep !important;
      }

      .pb_table_td:nth-child(2) {
        box-shadow: 0 0 0 0 !important;
      }

      .pb_advanced_table_header,
      .pb_advanced_table_body {
        th.sticky-left,
        td.sticky-left {
          border-right: 1px solid $border_light !important;
        }
        // Virtualized Table in Responsive Styles
        .virtualized-header,
        .virtualized-header-row-header,
        .virtualized-table-row,
        .virtualized-footer {
          border-right: 1px solid $border_light !important;
          .table-header-cells:first-child {
            box-shadow: 0 0 10px 0 rgba($shadow, 0.16) !important;
          }
        }
      }
    }
  }

  @media only screen and (min-width: $screen-xl-min) {
    &[class*="advanced-table-responsive-scroll"] {
      overflow-x: visible;
    }
  }

  // Row Pinning - additional inline styles in RegularTableView.tsx
  .pinned-row {
    box-shadow: 0 4px 10px 0 rgba($shadow, 0.16) !important;
  }

  // For Rails, we can't target the &:last-child since collapsed rows are display: none;
  // With JS, we add a .last-visible-row class and add rounded corners to bottom row
  .last-visible-row {
    td, .pb_table_td {
      border-width: 0 0 1px 0;

      &:first-child {
        border-radius: 0 0 0 4px;
        border-width: 0 0 1px 1px;
      }
      &:last-child {
        border-radius: 0 0 4px 0;
        border-width: 0 1px 1px 0;
      }
    }
  }

  &.dark {
    // Override default border color for dark mode
    --column-border-color: #{$border_dark};

    // Dark mode default border colors for trails and horizontal borders
    .collapsible-trail {
      background-color: $border_dark !important;
    }

    // Make sure all horizontal borders use the default border color in dark mode
    tr, th, td {
      border-bottom-color: $border_dark !important;
    }

    .bg-white {
      background: $bg_dark_card;
    }

    .bg-silver {
      background: $bg_dark;
    }

    // Dark mode virtualized rows
    .virtualized-table-row {
      &.bg-white {
        background: $bg_dark_card !important;

        td:first-child {
          background: $bg_dark_card !important;
        }
      }

      &.bg-silver {
        background: $bg_dark;

        td:first-child {
          background: $bg_dark;
        }
      }
    }

    .table-header-cells:first-child,
    .table-header-cells-custom:first-child,
    td:first-child,
    .pb_table_td:first-child,
    .checkbox-cell.checkbox-cell-header:first-child {
      box-shadow: 1px 0px 0px 0px var(--column-border-color) !important;
    }

    // Apply border colors in dark mode
    &[class*="column-group-border-"] {
      // For top-level column groups (ENROLLMENT DATA, PERFORMANCE DATA)
      .pb_advanced_table_header {
        // The main column group headers - NOT the last column
        > tr:first-child {
          th[colspan]:not([colspan="1"]):not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }
        }

        // Subgroup headers
        > tr:nth-child(2) {
          th[colspan]:not([colspan="1"]):not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }

          // Last cell in each subgroup
          th.last-header-cell:not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }
        }

        // Individual column headers at subgroup boundaries
        > tr:last-child {
          // Last cell in each subgroup
          th.last-header-cell:not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }
        }
      }

      // For data cells at column group boundaries in dark mode
      .pb_advanced_table_body {
        // Apply to cells that are at column group boundaries
        td.last-cell:not(:last-child),
        .pb_table_td.last-cell:not(:last-child) {
          border-right: 1px solid var(--column-border-color) !important;
        }

        // Virtualized row cells at column group boundaries
        tr.virtualized-table-row {
          td.last-cell:not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }
        }
      }

      // Sub-row headers
      .toggle-content {
        td {
          border-bottom: 1px solid $border_dark !important;
        }
      }
    }

    // Restore vertical border styling in dark mode when verticalBorder is true
    .pb_table[data-vertical-border="true"] {
      .pb_advanced_table_header {
        > tr:not(:first-child) {
          th:not(:last-child) {
            border-right: 1px solid $border_dark !important;
          }
        }
      }

      .pb_advanced_table_body {
        td:not(:last-child),
        .pb_table_td:not(:last-child) {
          border-right: 1px solid $border_dark !important;
        }
      }

      // When both verticalBorder AND columnGroupBorderColor are set in dark mode,
      // override the default border-dark with the custom color
      &.pb_advanced_table[class*="column-group-border-"] {
        .pb_advanced_table_header {
          > tr:not(:first-child) {
            th:not(:last-child) {
              border-right: 1px solid var(--column-border-color) !important;
            }
          }
        }

        .pb_advanced_table_body {
          td:not(:last-child),
          .pb_table_td:not(:last-child) {
            border-right: 1px solid var(--column-border-color) !important;
          }
        }
      }
    }

    .sort-button-icon,
    .header-sort-button > div,
    .pb_th_link {
      color: $white !important;
    }

    .gray-icon {
      color: $text_dk_light !important;
    }

    .sticky-header {
      background-color: $bg_dark_card;
    }

    .loading-toggle-icon,
    .loading-cell {
      &::after {
        background-color: $bg_dark !important;
        background-image: linear-gradient(
          to left,
          $bg_dark 0%,
          lighten($bg_dark, 1%) 50%,
          lighten($bg_dark, 2%) 60%,
          $bg_dark 80%,
          $bg_dark 100%
        ) !important;
      }
    }

    // Fullscreen
    &.advanced-table-fullscreen {
      background: $bg_dark;
    }

    .advanced-table-fullscreen-header {
      background-color: $bg_dark_card;
      position: sticky;
      top: 0;
      z-index: $z_10;
    }

    &[class*="advanced-table-sticky-left-columns"] {
      .sticky-left {
        background-color: $bg_dark;
      }
      @include advanced-table-sticky-mixin(
        $border_dark,
        $bg_dark_card,
        $bg_dark
      );
    }

    // Dark Mode Responsive Styles
    @media only screen and (max-width: $screen-xl-min) {
      &[class*="advanced-table-responsive-scroll"] {
        .sticky-header {
          thead {
            th:first-child {
              background: $bg_dark_card;
            }
          }
        }

        // These are the responsive borders that should NOT inherit the custom color
        @include advanced-table-sticky-mixin(
          $border_dark,
          $bg_dark_card,
          $bg_dark
        );

        // Override any columnGroupBorderColor inheritance for responsive borders in dark mode
        .sticky-left {
          box-shadow: $shadow_deep !important;
        }

        .pb_advanced_table_header,
        .pb_advanced_table_body {
          th.sticky-left,
          td.sticky-left {
            border-right: 1px solid $border_dark !important;
          }
        }
      }
    }
    .bg-row-selection {
      background-color: #202850;
    }
    .pb_advanced_table_body {
      tr.virtualized-table-row {
        &.bg-row-selection {
          td:first-child {
            background-color: #202850;
          }
        }
      }
    }
  }

  // Firefox-specific fix for last-header-cell and last-cell vertical borders
  @-moz-document url-prefix() {
    .pb_advanced_table_header {
      .last-header-cell {
        border-right: none !important;
        box-shadow: 1px 0 0 0 $border_light !important;
      }
    }

    .pb_advanced_table_body {
      .last-cell {
        border-right: none !important;
        box-shadow: 1px 0 0 0 $border_light !important;
      }
    }

    // Dark mode Firefox fixes
    &.dark {
      .pb_advanced_table_header {
        .last-header-cell {
          border-right: none !important;
          box-shadow: 1px 0 0 0 $border_dark !important;
        }
      }

      .pb_advanced_table_body {
        .last-cell {
          border-right: none !important;
          box-shadow: 1px 0 0 0 $border_dark !important;
        }
      }
    }
  }
}

// Outside of the pb_advanced_table class for popover
.pb-advanced-table-popover-option:hover {
  background-color: $bg_light;
}

// Removes borders when Wrapped inside the Card Kit
.pb_card_kit > .pb_advanced_table {
  // Remove right border only from the actual last column
  .pb_advanced_table_body tr td:last-child,
  .pb_advanced_table_header tr th:last-child {
    box-shadow: none !important; // prevents double up of borders on Firefox when in Card Kit
    border-right: none !important;
  }

  // Without vertical border, remove all last-cell borders
  .pb_table:not(.vertical-border) {
    .pb_advanced_table_body .last-cell,
    .pb_advanced_table_header .last-header-cell {
      box-shadow: none !important;
      border-right: none !important;
    }
  }

  // For tables WITH vertical borders, only remove border from actual last column
  .pb_table.vertical-border {
    .pb_advanced_table_body .last-cell:not(:last-child),
    .pb_advanced_table_header .last-header-cell:not(:last-child) {
      box-shadow: none !important;
      border-right: 1px solid $border_light !important;
    }

    // Dark mode
    &.dark {
      .pb_advanced_table_body .last-cell:not(:last-child),
      .pb_advanced_table_header .last-header-cell:not(:last-child) {
        box-shadow: none !important;
        border-right: 1px solid $border_dark !important;
      }
    }

    // Support border colors
    &.pb_advanced_table[class*="column-group-border-"] {
      .pb_advanced_table_body .last-cell:not(:last-child),
      .pb_advanced_table_header .last-header-cell:not(:last-child) {
        box-shadow: none !important;
        border-right: 1px solid var(--column-border-color) !important;
      }
    }
  }
}

//  Removes borders when Wrapped inside the Card Kit
.pb_card_kit > .pb_advanced_table tr:last-child,
.pb_card_kit > .pb_advanced_table .last-row-cell {
  td {
    border-bottom: none !important;
  }
}
