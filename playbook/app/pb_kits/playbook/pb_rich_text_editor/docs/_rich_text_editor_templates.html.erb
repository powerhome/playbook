<% changelog = "<div>
    <strong>Changelog:<br></strong>
    [INSERT LINK]<br><br>
    You can test the normal spots of Playbook rails and react on
    dev docs plus the following:
  </div>
  <div>
    <br>
  </div>" %>

<% release = "<div>
    <div>
      <strong>Story Background</strong>
    </div>
    <div>
      Follow the{' '}
      <a href='https://github.com/powerhome/playbook/wiki/Release-Team-Guide'>
        release process
      </a>{' '}
      to create a new version, create a gem, and package. Create a Ninja testing
      plan, then update Nitro with the new version.
    </div>
    <div>
      <br />
    </div>
    <div>
      <strong>Timeline / Due Date</strong>
    </div>
    <div>
      <em>Release End of business Thursday</em>
    </div>
    <div>
      <em>Testing on Nitro End of business Friday</em>
    </div>
    <div>
      <br />
    </div>
    <div>
      <strong>Definition of done</strong>
    </div>
    <ol>
      <li>Merge all PRâ€™s</li>
      <li>Update the final CHANGELOG</li>
      <li>Version up and generate NPM, and RubyGem</li>
      <li>Create next version branch and milestone</li>
      <li>Update default branch and branch protection rules&nbsp;</li>
      <li>Notify Everyone of new version</li>
      <li>
        Generate testing plan and pages to test for Ninjas (update runway
        ticket)
      </li>
      <li>Update version on Nitro and get on Demo</li>
      <li>Send Ninjas demo and runway ticket for testing</li>
      <li>Ninja Approved + PR Approved</li>
    </ol>
    <div>
      <br />
    </div>
    <div>
      <strong>Stakeholders / Sign-off</strong>
    </div>
    <ul>
      <li>Code Owners</li>
    </ul>
    <div>
      <br />
      <strong>Cadence</strong>
      <br />
      Jason, Jon, Stephen, Jasper, Brendan, Cole
    </div>
  </div>" %>

<%= pb_rails("select", props: {
  id: "rails-select-dropdown",
  label: "",
  name: "",
  blank_selection: "Select a template",
  options: [
    {
      value: release,
      value_text: "Playbook Release",
    },
    {
      value: changelog,
      value_text: "Changelog",
    },
  ]
}) %>





<%= pb_rails("rich_text_editor", props: {classname: 'template-test', id: "template", template: '' }) %>


<script>
  const updateContent = (template) => {
    const trix   = document.querySelector('.template-test trix-editor');
    const editor = trix.editor;
    console.log(editor)
    editor.loadHTML("")
    editor.setSelectedRange([0, 0])
    editor.insertHTML(template)
  }

  window.addEventListener('DOMContentLoaded', () => {
    const editor = document.querySelector("#rails-select-dropdown")
    editor.addEventListener('change', function() {
        console.log('You selected: ', this.value);
        const template = this.value
        updateContent(template);
    });
  });
</script>