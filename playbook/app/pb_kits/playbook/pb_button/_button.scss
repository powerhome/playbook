@import "./button_mixins";
@import "../tokens/colors";
@import "../tokens/border_radius";
@import "../tokens/colors";
@import "../tokens/spacing";
@import "../tokens/typography";

$pb_button_sizes: (
  "sm":   $font_smaller,
  "md":   $font_small,
  "lg":   ($font_large - 2px),
);

.pb_button_kit{
  @include pb_button;
  // Size =================
  @each $name, $size in $pb_button_sizes {
    &[class*=size_#{$name}] {
      font-size: $size;
      padding: $size / 2 $size * 2.42;
      @if $name == "sm" {
        min-height: 0;
      }
    }
  }

  // Variants =================
  &._primary  {
    @include pb_button_primary;
  }
  &._secondary  {
    @include pb_button_secondary;
  }
  &._link  {
    @include pb_button_link;
  }
  &._reaction {
    background-color: $card_light;
    min-width: 40px;
    border-radius: $border_radius_rounded;
    border: 1px solid $border_light;
    color: $text_lt_light;
    padding: ($space_xxs - 3) $space_xs;
    min-height: $space_md + 4;

    .pb_icon_kit_emoji, .pb_icon_kit {
      font-size: $font_small;
    }
    &:hover {
      background-color: $bg_light;
    }
    &.active {
      border-color:transparent;
      box-shadow: 0px 0px 0 2px $primary_action;
      &:hover {
        background-color: rgba($primary, 0.03);
      }
    }
  }

  &.reaction_default {
    padding: ($space_xxs + 1) ($space_sm - 4);
    color: $text_lt_lighter;
  }

  // Block ====================
  &._block  {
    @include pb_button_block;
  }

  // Loading ==================
  &._loading  {
    @include pb_button_loading(true);
  }

  // Danger ===================
  &._danger {
    @include pb_button_danger;
  }

  // Disabled =================
  &._disabled  {
    @include pb_button_disabled;
  }

  // Dark Variants =============
  &.dark  {
    &._primary  {
      @include pb_button_primary_dark;
    }
    &._secondary  {
      @include pb_button_secondary_dark;
    }
    &._link  {
      @include pb_button_link_dark;
    }
    &._disabled  {
      @include pb_button_disabled_dark;
    }
  }
}
