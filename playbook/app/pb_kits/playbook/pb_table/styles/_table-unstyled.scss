@import "../tokens/colors";
@import "../tokens/spacing";
@import "../tokens/border_radius";

// remove all outward facing borders from header
.header-borderless > thead,
.header-borderless > thead > tr,
.header-borderless > thead > tr > th,
.header-borderless > .pb_table_thead,
.header-borderless > .pb_table_thead > .pb_table_tr,
.header-borderless > .pb_table_thead .pb_table_th {
  border-top: none !important;
  border-left: none !important;
  border-right: none !important;
  background: transparent !important;
}

// remove bottom border (internal to table) on header cells
.header-borderless > thead > tr:last-child > th,
.header-borderless > .pb_table_thead > .pb_table_tr:last-child > .pb_table_th {
  border-bottom: none !important;
}

// ?preserves top rounded corners to header - might not be necessary but also could help with color investigation?
.header-borderless > thead > tr:first-child > th:first-child,
.header-borderless > .pb_table_thead > .pb_table_tr:first-child > .pb_table_th:first-child {
  border-top-left-radius: $border_radius_md !important;
}

.header-borderless > thead > tr:first-child > th:last-child,
.header-borderless > .pb_table_thead > .pb_table_tr:first-child > .pb_table_th:last-child {
  border-top-right-radius: $border_radius_md !important;
}

// ensures top border is from first row of body to prevent double borders
.header-borderless > tbody > tr:first-child > td,
.header-borderless > .pb_table_tbody > .pb_table_tr:first-child > .pb_table_td {
  border-top: 1px solid $border_light !important;
}

// curves top corners to ONLY the first and last cells of first body row
.header-borderless > tbody > tr:first-child > td:first-child,
.header-borderless > .pb_table_tbody > .pb_table_tr:first-child > .pb_table_td:first-child {
  border-top-left-radius: $border_radius_md !important;
}

.header-borderless > tbody > tr:first-child > td:last-child,
.header-borderless > .pb_table_tbody > .pb_table_tr:first-child > .pb_table_td:last-child {
  border-top-right-radius: $border_radius_md !important;
}


// color stuff - mixin typically would be in a diff file
// $pb_table_header_colors: map-merge(map-merge(map-merge($product_colors, $additional_colors), $category_colors), $status_colors);

// @mixin pb_table_header_color($header_color) {
//   background: $header_color;
// }

// @each $color_name, $color_value in $pb_table_header_colors {
//   .pb_table_thead_color_#{$color_name} {
//     > tr > th {
//       @include pb_table_header_color($color_value);
//       color: lightenText($color_value);
//     }
//   }
  
//   // For div version
//   &.pb_table_thead_color_#{$color_name} {
//     > .pb_table_tr > .pb_table_th {
//       @include pb_table_header_color($color_value);
//       color: lightenText($color_value);
//     }
//   }
// }

// // Generate classes for TableHeader component
// @each $color_name, $color_value in $pb_table_header_colors {
//   .pb_table_th_color_#{$color_name} {
//     @include pb_table_header_color($color_value);
//     color: lightenText($color_value);
//   }
// }

// // Handle subtle colors separately if needed
// @each $color_name, $color_value in $pb_table_header_colors {
//   @if str-index($color_name, '_subtle') != null {
//     .pb_table_thead_color_#{$color_name} {
//       > tr > th {
//         @include pb_table_header_color($color_value);
//         color: lightenText($color_value);
//       }
//     }
    
//     .pb_table_th_color_#{$color_name} {
//       @include pb_table_header_color($color_value);
//       color: lightenText($color_value);
//     }
//   }
// }

// .pb_table_thead_color_#{$color_name} {
//   > tr > th {
//     @include pb_table_header_color($color_value);
//     color: lightenText($color_value);
//   }
// }

// // Generate classes for TableHeader component
// .pb_table_th_color_#{$color_name} {
//   @include pb_table_header_color($color_value);
//   color: lightenText($color_value);
// }

// @each $color_name, $color_value in $pb_table_header_colors {
//   .header-color-#{$color_name} {
//     > tr > th {
//       @include pb_table_header_color($color_value);
//       color: lightenText($color_value);
//     }
//   }

//   // For div version (if needed)
//   &.header-color-#{$color_name} {
//     > .pb_table_tr > .pb_table_th {
//       @include pb_table_header_color($color_value);
//       color: lightenText($color_value);
//     }
//   }
// }