@import "../tokens/colors";
@import "../tokens/line_height";
@import "../tokens/typography";

$pb_link_colors: (
  default:        $primary,
  body:           $text_lt_default,
  muted:          $text_lt_light,
  destructive:    $error,
);

// Match regular colors. Need to Update.
$pb_dark_link_colors: (
  default:        $primary,
  body:           $text_lt_default,
  muted:          $text_lt_light,
  destructive:    $error,
);

@mixin pb_link($color: $primary) {
  line-height: $lh_tight;
  color: $color;
  font-size: $text_default;
  font-weight: $regular;
  font-family: $font-family-base;
}

[class^=pb_link_kit]{
  @include pb_link($primary);
  @each $color_name, $color_value in $pb_link_colors {
    &[class*=_#{"" + $color_name}] {
      @include pb_link($color_value);
    }
  }
  @each $dark_color_name, $dark_color_value in $pb_dark_link_colors{
    &[class*=_#{$dark_color_name}][class*=dark]{
      @include pb_link($dark_color_value);
    }
  }
  b, strong {
    font-weight: $bold;
  }

  a {
    color: $primary;
    &:hover {
      color: $text_lt_default;
    }
  }

  em, i {
    font-style: italic;
  }

  small {
    font-size: $font_smaller;
    letter-spacing: $lspace_loose;
  }

  &[class*=dark] {
    a {
      color: $active_dark;
    }
    @include pb_body_dark();
    @each $dark_color_name, $dark_color_value in $pb_dark_link_colors{
      &[class*=_#{$dark_color_name}][class*=dark]{
        @include pb_link($dark_color_value);
      }
    }
  }

  &[class*=_underlined] {
    text-decoration: underline;
  }

}
