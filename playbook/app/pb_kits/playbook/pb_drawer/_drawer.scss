@import "../tokens/positioning";
@import "../tokens/colors";
@import "../pb_card/card_mixin";
@import "../tokens/shadows";
@import "../tokens/border_radius";
@import "../tokens/spacing";
@import "../tokens/animation-curves";
@import "../tokens/positioning";

$gutter: $space_lg;
$xsmall: 64px;
$small: 200px;
$medium: 250px;
$large: 300px;
$xlarge: 365px;
$animation-duration: .25s;
$z-index: $z_7;

@keyframes modalFadeInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes modalFadeOutLeft {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

@keyframes modalFadeInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes modalFadeOutRight {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(100%);
  }
}

@keyframes modalFadeIn {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes modalFadeOut {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

@keyframes overlayFade {
  from {
    opacity: 0;
    transform: translateY(0);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes overlayFadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes modalFadeDownIn {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes modalFadeDownOut {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100%);
  }
}

@keyframes modalFadeUpIn {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes modalFadeUpOut {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(100%);
  }
}

body.PBDrawer__Body--open {
  transition: margin-left $animation-duration ease-in, margin-right $animation-duration ease-in;
}

body.PBDrawer__Body--close {
  transition: margin-left $animation-duration ease-out, margin-right $animation-duration ease-out;
}

.pb_drawer.pb_drawer_after_open {
  pointer-events: auto;
  transform: translate3d(0, 0, 0);
}

// Drawer Styles
.pb_drawer {
  background-color: $white;
  z-index: $z-index;
  border: 0;
  height: 100%;
  overflow: auto;
  animation-duration: $animation-duration;
  outline: none;

 &.pb_drawer_within_element {
    position: relative;
    width: 100%;
    display: block;
    background-color: $white;
    overflow: hidden;

    // Use max-height for a smooth accordion-like animation
    max-height: 0;
    transition: max-height $animation-duration ease-in-out;
    z-index: 1;

    // This class name is up to you â€” just be consistent in JS
    &.open {
      // Option 1: Use a large fixed max-height to accommodate content
      // max-height: 1000px; 
      // Option 2: Let JavaScript set the exact scrollHeight 
      // so it grows exactly to the content size
      max-height: 1000px;
    }

    // Remove the old height-based approach:
    // height: var(--drawer-height);
    // &.pb_drawer_before_close { height: 0; }

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: inherit;
      z-index: -1;
    }
  }

  .toggle-content.is-visible {
    display: block;
    height: auto;
  }

  .drawer {
    position: sticky;
    will-change: transform;
    top: 0;
    background-color: $white;
    z-index: $z_9;
  }

  &[class*="_left"] {
    animation-name: modalFadeInLeft;
  }

  &[class*="_left"][class*="_before_close"] {
    animation-name: modalFadeOutLeft;
    animation-duration: $animation-duration;
    transform: translateX(-100%);
  }

  &[class*="_right"] {
    animation-name: modalFadeInRight;
    justify-content: flex-end;
  }

  &[class*="_right"][class*="_before_close"] {
    animation-name: modalFadeOutRight;
    animation-duration: $animation-duration;
    transform: translateX(100%);
  }

  &[class*="_bottom"] {
    animation: none;
    transform: none;
  }

  &[class*="_bottom"][class*="_before_close"] {
    animation: none;
    transform: none;
  }

  &[class*="_top"] {
    animation-name: modalFadeUpIn;
  }

  &[class*="_top"][class*="_before_close"] {
    animation-name: modalFadeUpOut;
    animation-duration: $animation-duration;
  }


  &[class*="_xs_"] {
    width: $xsmall;
    max-width: $xsmall;
  }

  &[class*="_sm_"] {
    width: $small;
    max-width: $small;
  }

  &[class*="_md_"] {
    width: $medium;
    max-width: $medium;
  }

  &[class*="_lg_"] {
    width: $large;
    max-width: $large; 
  }

  &[class*="_xl_"] {
    width: $xlarge;
    max-width: $xlarge; 
  }

  &[class*="_full_"] {
    width: 100%;
    max-width: 100%; 
  }

  &.drawer_border-full {
    box-shadow: none;
    border: 2px solid #f3f7fb;
  }

  &.drawer_border-right {
    border-right: 2px solid #f3f7fb;
  }

  &.drawer_border-left {
    border-left: 2px solid #f3f7fb;
  }

  &.no-background {
    background-color: transparent; 
  }

  &_close_icon {
    cursor: pointer;
  }

  &_overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    background-color: rgba($bg_dark, $opacity_4);
    z-index: $z-index;
    opacity: 0;
    animation: overlayFade $animation-duration ease-in-out forwards;
    
    &[class*="_left"]{
      justify-content: flex-start;
    }

    &[class*="_center"]{
      justify-content: center;
    }

    &[class*="_right"]{
      justify-content: flex-end;
    }
    
    &_before_close {
      animation: overlayFadeOut $animation-duration ease-in-out forwards;
      opacity: 0;
      // height: 0;
    }
  }

  &_no_overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: $z-index;
    opacity: 1;
    pointer-events: none;

    & .pb_drawer {
      pointer-events: auto;
    }

    &_before_close {
      height: 0;
    }
  }


  &.pb_drawer_before_close {
    transform: translateX(-100%);
  }
}
