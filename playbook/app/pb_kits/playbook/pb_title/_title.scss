@import "../tokens/titles";
@import "../tokens/colors";
@import "../tokens/typography";
@import "../tokens/screen_sizes";
@import './title_mixin';

.pb_title_kit {
  // Base title styles - default to title 3 styling
  @include pb_title_3;
  
  // Size-based styles (these will override the base)
  &.pb_title_1 {
    @include pb_title_1;
    @include pb_title_bold;
  }

  &.pb_title_2 {
    @include pb_title_2;
    @include pb_title_bold;
  }

  &.pb_title_3 {
    @include pb_title_3;
    @include pb_title_bold;
  }

  &.pb_title_4 {
    @include pb_title_4;
  }

  &.pb_title_thin {
    @include pb_title_thin;
  }

  // Color classes
  @include title_colors;

  // Display sizes
  &.pb_title_display {
    font-size: clamp(24px, calc(1.25vw + 5.3vw), 128px);
    font-weight: $bold;
  }

  // Dynamic sizes
  &.pb_title_dynamic_xs {
    font-size: min(2vw, 80vw / 16); 
  }

  &.pb_title_dynamic_sm {
    font-size: min(2.5vw, 96vw / 16); 
  }

  &.pb_title_dynamic_md {
    font-size: min(4vw, 160vw / 16);
  }

  &.pb_title_dynamic_lg {
    font-size: min(5vw, 192vw / 16);
  }

  &.pb_title_dynamic_xl {
    font-size: min(6vw, 224vw / 16);
  }

  &.pb_title_dynamic_xxl {
    font-size: min(8vw, 256vw / 16);
  }

  // Responsive breakpoint classes
  @each $size, $size_value in $breakpoints_grid {
    @for $title_size_value from 1 through 4 {
      $min_size: map-get($size_value, "min");
      $max_size: map-get($size_value, "max");
      &.pb_title_#{$size}_#{$title_size_value} {
        @include break_on($min_size, $max_size) {
          @if $title_size_value == 1 { @include pb_title_1; }
          @else if $title_size_value == 2 { @include pb_title_2; }
          @else if $title_size_value == 3 { @include pb_title_3; }
          @else if $title_size_value == 4 { @include pb_title_4; }
          @include title_colors;
          @if $title_size_value != 4 { @include pb_title_bold; }
        }
      }
    }
  }

  &.dark {
    @include title_dark;
    @each $name, $color in $pb_dark_title_colors {
      &.pb_title_#{$name} {
        color: $color;
      }
    }
  }
}