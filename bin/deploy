#!/bin/bash

environment=$1
revision=$2
tag=$3
cluster=$4

environmentDbValuesFile=""
if [ -e /app/config/deploy/$environment/values.db.yaml ]; then
    environmentDbValuesFile="-f /app/config/deploy/$environment/values.db.yaml"
fi

# deploy postgresql with helm
sops --decrypt /app/config/deploy/${environment}/secrets.db.yaml > /app/config/deploy/${environment}/secrets.db.dec.yaml
helm upgrade --install --wait --timeout 600 \
    playbook-db-${environment} stable/postgresql --version 3.9.1 \
    --namespace playbook-${environment} --kube-context=${cluster} --tiller-namespace=app-tiller \
    -f /app/config/deploy/${environment}/secrets.db.dec.yaml \
    -f /app/config/deploy/values.db.yaml \
    ${environmentDbValuesFile}

helm_exit=$?
rm /app/config/deploy/${environment}/secrets.db.dec.yaml

if [ $helm_exit != 0 ]; then
  echo "helm deploy failed"
  exit $helm_exit
fi

sops --decrypt /app/config/deploy/${environment}/secrets.yaml > /app/config/deploy/${environment}/secrets.dec.yaml
REVISION=${revision} kubernetes-deploy \
    --selector='app=playbook' \
    --template-dir=/app/config/deploy/templates \
    --bindings='@/app/config/deploy/values.yaml' \
    --bindings="@/app/config/deploy/${environment}/values.yaml" \
    --bindings="@/app/config/deploy/${environment}/secrets.dec.yaml" \
    --bindings="image_tag=${tag}" \
    --bindings="environment=${environment}" \
    playbook-${environment} ${cluster}

deploy_exit=$?
rm /app/config/deploy/${environment}/secrets.dec.yaml

exit $deploy_exit
