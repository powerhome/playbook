@import "button-variables";
@import "button-mixins";

@import "ghost-buttons";
@import "choice-buttons";
@import "solid-buttons";
@import "link-buttons";

@import "button-groups";
@import "dropdowns";
@import "close";
@import "button-capping";
@import "circle-buttons";
//------------------------
// General Button Classes
//------------------------

.btn {
  @include button-base;
  @include btn-styles;
  @include btn-chains;
  @include solid-button-colors($power-colors);
  &-default {
    @include ghost-button($border-color);
    background: $white;
  }
  &-primary {
    @include solid-button($power-royal);
  }
  &-success {
    @include solid-button($power-green);
  }
  &-info {
    @include solid-button($power-blue);
  }
  &-warning {
    @include solid-button($power-gold);
  }
  &-danger {
    @include solid-button($power-red);
  }
  &-white {
    @include solid-button($white);
  }
  &-select {
    @include select;
    border-color: $sky;
  }
}

a.btn {
  &.disabled, fieldset[disabled] & {
    pointer-events: none;
  }
}

.btn-ghost {
  @include ghost-button-colors($power-colors);
  &-white {
    @include ghost-button($white);
    color: $white;
  }
}

.btn-link {
  @include link-button($power-royal);
  @include link-button-colors($power-colors);
  &-white {
    @include link-button($white);
  }
}

.btn-choice {
  @include choice-button-colors($power-colors);
}

// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
