@mixin muiti-focus-fix-index {
  &:focus {
    position: relative;
    z-index: 1;
    & ~ label {
      z-index: 1;
    }
  }
}

$selectors: (
  '.btn',
  'input[type="submit"]',
  'input[type="reset"]',
  'input[type="button"]',
  'select',
  'input[type="text"]',
  'input[type="password"]',
  'input[type="datetime"]',
  'input[type="datetime-local"]',
  'input[type="date"]',
  'input[type="month"]',
  'input[type="time"]',
  'input[type="week"]',
  'input[type="number"]',
  'input[type="email"]',
  'input[type="url"]',
  'input[type="search"]',
  'input[type="tel"]',
  'input[type="color"]'
);

// Place labels after input if inside
.multi-input-group {
  display: flex;
  align-items: stretch;
  &-item {
    display: flex;
    width: auto;
    flex-direction: column;
    &.form-control {
      display: flex;
      width: auto;
    }
    .input-group-addon, &.input-group-addon {
      &:not(.multi) {
        width: auto;
        display: block;
        vertical-align: -webkit-baseline-middle;
        padding-top: 9px;
      }
    }
    // Everything but the last
    &:not(:last-child)  {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      @each $class in $selectors {
        #{$class} {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
          @include muiti-focus-fix-index;
        }
      }
    }
    // Everything but first
    &:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      margin-left: -$input-border-size;
      @each $class in $selectors {
        #{$class} {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }
      }
    }
  }
  &.full {
    width: 100%;
    .multi-input-group-item {
      flex-grow: 1;
      flex-shrink: 1;
      flex-basis: auto;
    }
    .auto, .input-group-addon.auto, .multi-input-group-item.auto {
      width: auto;
    }
  }
}
