<div class="pb--kit-show <%=@kit%>-kit">
  <div class="pb--page--dark-mode-toggle-desktop">
    <%= react_component("DarkModeToggle", initMode: cookies[:dark_mode] )%>
  </div>
  <%= pb_rails("title", props: { text: pb_kit_title(@kit), tag: "h1", size: 1, margin_top: "xl" }) %>
  <div class="markdown <%= cookies[:dark_mode] == "true" ? 'dark' : '' %>">
    <%= render_markdown(pb_doc_kit_description(@kit)) %>
  </div>
</div>
<div class="kit-show-wrapper">
  <div class="pb--kit-type-nav">

    <% if get_samples(@kit).size > 0 %>
      <div class="sample-ui-link-wrapper mb_xl">
      <%= pb_rails("flex", props: { id: 'kits-used' }) do %>
        <%= pb_rails("title", props: {
          text: "See this kit in action in our sample UI",
          size: 4,
          tag: "h4",
          variant: "link"
        }) %>
        <%= pb_rails("icon", props: { classname: "dropdown-icon", icon: "angle-down", fixed_width: true }) %>
      <% end %>
      <%= pb_rails("popover", props: { min_width: "275px", trigger_element_id: "kits-used", tooltip_id: "kits-used-tooltip", position: "bottom", padding: "none" }) do %>
        <%= pb_rails("nav", props: {}) do %>
          <% get_samples(@kit).each do |sample| %>
            <%= pb_rails("nav/item", props: { icon_right: "angle-right", link: "/samples/#{sample}/#{@type}", text: sample.titleize}) %>
          <% end %>
        <% end %>
      <% end %>
      </div>
    <% end %>

    <%= pb_rails("nav", props: { orientation: "horizontal" }) do %>
      <% if pb_doc_has_kit_type?(@kit, "rails") %>
        <%= pb_rails("nav/item", props: { text: "Rails", link: kit_show_rails_path(@kit), active: action_name == 'kit_show_rails' }) %>
      <% end %>
      <% if pb_doc_has_kit_type?(@kit, "react") %>
        <%= pb_rails("nav/item", props: { text: "React", link: kit_show_reacts_path(@kit), active: action_name == 'kit_show_react' }) %>
      <% end %>
      <% if Rails.env.development? %>
          <%= pb_rails("nav/item", props: { text: "Swift", link: kit_show_swift_path(@kit), active: action_name == 'kit_show_swift' }) %>
      <% end %>
    <% end %>

    <%= pb_rails("section_separator") %>
  </div>
  <% if (action_name == "kit_show_rails") %>
    <%= pb_kit(kit: @kit, dark_mode: dark_mode?) %>
  <% elsif (action_name == "kit_show_react") %>
    <%= pb_kit(kit: @kit, type: "react", dark_mode: dark_mode?) %>
  <% elsif (action_name == "kit_show_swift") %>
    <%= pb_kit(kit: @kit, type: "swift", dark_mode: dark_mode?, show_code: false) %>
  <% end %>

  <% unless (action_name == "kit_show_swift") %>
    <div class="markdown <%= cookies[:dark_mode] == "true" ? 'dark' : '' %>">
      <br>
      <%= render_markdown(pb_doc_kit_footer(@kit)) %>
    </div>
  <% end %>

    <% if get_samples(@kit).size > 0 %>
      <%= pb_rails("flex", props: { classname: "flex-container", wrap: true }) do %>
        <%= pb_rails("icon", props: { icon: "palette", margin_right: "sm", size: "2x" }) %>
        <%= pb_rails("title", props: {
          margin_bottom: "xs",
          text: "UI Samples using #{@kit.titleize} Kit",
          tag: "h3",
          size: 3
        }) %>
      <% end %>
      <%= pb_rails("body", props: {
        margin_bottom: "sm",
        text: "Get the full picture. See how this kit is used in our samples."
      }) %>

      <%= pb_rails("layout", props: {layout: "collection"}) do %>
        <%= pb_rails("layout/body", props: { classname: "sample-card-grid-override" }) do %>
          <% get_samples(@kit).each do |sample| %>
            <a href=<%="/samples/#{sample}/#{@type}"%>>
              <%= pb_rails("card", props: { classname: "ui-sample-card", padding: "md" }) do %>
                <%= pb_rails("flex", props: { classname: "flex-container", spacing: "between", vertical: "center" }) do %>
                  <%= pb_rails("title", props: {
                    id: 'kits-used',
                    text: sample.titleize,
                    tag: "h4",
                    size: 4,
                    variant: "link"
                  }) %>
                  <%= pb_rails("icon_circle", props: {
                    icon: "angle-right",
                    size: "sm",
                    variant: "royal"
                  }) %>
                <% end %>
              <% end %>
            </a>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <% if (action_name == "kit_show_rails") %>
      <br>
      <%= pb_rails("docs/kit_api", props: { kit: @kit, dark: dark_mode? }) %>
    <% elsif (action_name == "kit_show_react") %>
      <div data-action="toggle" data-togglable="prop_example" class="pb--propsTable">
        <%= pb_rails("title", props: { text: "Available Props", size: 3, margin_bottom: "sm", margin_top: "sm" }) %>
        <%= react_component("AvailableProps",
          source: Playbook::PbDocs::KitExample.new(kit: @kit, example_title: "Default", example_key: @kit, type: "react").tsx_source )
        %>
      </div>
    <% end %>
</div>
