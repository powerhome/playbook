br
= pb_rails("title", props: { text: title, tag: "h4", size: 4 })

= pb_rails("body", props: { margin_top: "sm", text: "Available in every kit. These are added globally as they are most flexible when developing." }) 

- if defined?(usage) && usage.present?
  = pb_rails("body", props: {"tag": "p"})
    usage

br
= pb_rails("card", props: { text: "visual guide", max_width: "xl" })
    = pb_rails("caption", props: {text: "Visual Guide", margin_bottom: "sm" })
    = pb_rails("table", props: { size: "md", margin_bottom: "md" })
      tr
        td = pb_rails("caption", props: {text: "normal" })
        td = pb_rails("caption", props: {text: "tabular"})
      tr
        td = pb_rails("body", props: {text: "$1,231,123,123.00" })
        td = pb_rails("body", props: {text: "$1,231,123,123.00", number_spacing: "tabular" })
      tr
        td = pb_rails("body", props: {text: "$7,444,112,512.00" })
        td = pb_rails("body", props: {text: "$7,444,112,512.00", number_spacing: "tabular"})

    = pb_rails("section_separator", props: { orientation: "horizontal" })
    = pb_rails("flex", props: {classname: "flex-container", vertical: "stretch", padding_x: "sm", padding_bottom: "md" })
        = pb_rails("flex/flex_item", props: {flex: "1" }) do
                = pb_rails("caption", props: {text: "Props", margin_bottom: "sm", margin_top: "sm" })
                = pb_rails("pill", props: { text: "numberSpacing", variant: "neutral" })
                
        
        = pb_rails("section_separator", props: { orientation: "vertical", margin_top: "sm" })
        = pb_rails("flex/flex_item", props: {flex: "1" }) do
            = pb_rails("caption", props: {text: "Values", margin_bottom: "sm", margin_top: "sm" })
            = pb_rails("pill", props: {text: "tabular", variant: "warning"})
        end
    end

- react_contents = Rails.root.join("app/views/pages/code_snippets/number_spacing_jsx.txt").read
= pb_rails("background", props: { background_color: "dark", padding: "xs", id: "code-wrapper", max_width: "xl" }) do
  .pb--codeCopy[data-action="toggle" data-toggleable="code-example"]
    pre.highlight
      = raw rouge(react_contents, "react")