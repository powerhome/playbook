<br/>
<%= pb_rails("title", props: {text: "Spacing", size: 1 }) %>
<br/>

<%= pb_rails("title", props: {text: "Global Props", size: 4, margin_bottom: "sm" }) %>
<%= pb_rails("body", props: {text: "Available in every kit. These are added globally as they are most flexible when developing. React props should be camelCase.", margin_bottom: "sm" }) %>
      <%= pb_rails("card", props: {shadow: "deep", margin_bottom: "xl", padding: "none", padding_top: "md" }) do %>
        <%= pb_rails("flex", props: {classname: "flex-container", vertical: "stretch", padding_x: "md", padding_bottom: "sm" }) do %>
          <%= pb_rails("flex/flex_item", props: {flex: "1"}) do %>
            <%= pb_rails("caption", props: {text: "Props for Rails", margin_bottom: "sm"}) %>
                  <%= pb_rails("pill", props: { text: "margin", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "margin_bottom", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "margin_left", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "margin_right", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "margin_top", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "margin_x", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "margin_y", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding_bottom", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding_left", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding_right", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding_top", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding_x", variant: "neutral" }) %> <br/>
                  <%= pb_rails("pill", props: { text: "padding_y", variant: "neutral" }) %> <br/>
          <% end %>
          <%= pb_rails("section_separator", props: { orientation: "vertical" }) %>
          <%= pb_rails("flex", props: {classname: "flex-container", vertical: "stretch", padding_x: "md", padding_bottom: "sm" }) do %>
          <%= pb_rails("flex/flex_item", props: {flex: "1"}) do %>
            <%= pb_rails("caption", props: {text: "Props for React", margin_bottom: "sm"}) %>
                  <%= pb_rails("pill", props: { text: "margin", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "marginBottom", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "marginLeft", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "marginRight", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "marginTop", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "marginX", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "marginY", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "padding", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "paddingBottom", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "paddingLeft", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "paddingRight", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "paddingTop", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "paddingX", variant: "neutral" }) %><br/>
                  <%= pb_rails("pill", props: { text: "paddingY", variant: "neutral" }) %><br/>
              <% end %>
          <% end %>
          <%= pb_rails("section_separator", props: { orientation: "vertical" }) %>
          <%= pb_rails("flex/flex_item", props: {flex: "1"}) do %>
              <%= pb_rails("caption", props: {text: "Values", margin_bottom: "sm"}) %>
                <%= pb_rails("pill", props: {text: "none", variant: "warning"}) %> 
                <%= pb_rails("pill", props: {text: "xs", variant: "warning"}) %>
                <%= pb_rails("pill", props: {text: "sm", variant: "warning"}) %>
                <%= pb_rails("pill", props: {text: "md", variant: "warning"}) %>
                <%= pb_rails("pill", props: {text: "lg", variant: "warning"}) %>
                <%= pb_rails("pill", props: {text: "xl", variant: "warning"}) %>
          <% end %>
        <% end %>
      
        <% react_contents = Rails.root.join("app/views/pages/code_snippets/spacing_global_props_jsx.txt").read %>

        <%= pb_rails("background", props: { background_color: "dark", padding: "xs", id: "code-wrapper" }) do %>
            <div class="pb--codeCopy" data-action="toggle" data-togglable="code_example">
              <pre class="highlight"><%= raw rouge(react_contents, "react") %></pre>
            </div>        
        <% end %>      
      <% end %>
      
<%= pb_rails("title", props: { text: "Tokens", tag: "h4", size: 4 })%>
<% if defined?(usage) && usage.present? %>
  <%= pb_rails("body", props: {"tag": "p"})%>
    <%=usage%>
  <% end %>

  <ul class="pb--tokens-spacing">
    <% sizes.each do |item|%>
      <% variable = (defined?(item[:variable]) && !item[:variable].nil?) ? "$#{item[:variable]}" : ""%>
      <% item[:dark] ||= false %>
      <% item[:class] ||= item[:variable] %>
    <li  
      <% if item[:dark] %> 
        class= "dark"
      <% end %>>
        <div>
          <div class=<%= "pb--spacing_#{item[:class]}" %>></div>
        </div>  
        <%= "#{item[:name]}" %>  
      <br/>
        <%= "#{variable}"%>   
     </li>    
  <% end %> 
</ul> 
    <% react_contents = Rails.root.join("app/views/pages/code_snippets/spacing_tokens_jsx.txt").read%>
      <%= pb_rails("background", props: { background_color: "dark", id: "code-wrapper" }) do %>
        <div class="pb--codeCopy" data-action="toggle" data-toggleable="code-example">
          <pre class="highlight">
            <%= raw rouge(react_contents, "react") %>
        <% end %>
    </pre>
  </div>