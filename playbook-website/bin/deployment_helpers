#!/bin/bash

set -eo pipefail

: ${baseline:="review"}

function setup_colors() {
    if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
        NOFORMAT='\033[0m'
        RED='\033[0;31m'
        GREEN='\033[0;32m'
        ORANGE='\033[0;33m'
        BLUE='\033[0;34m'
        PURPLE='\033[0;35m'
        CYAN='\033[0;36m'
        YELLOW='\033[1;33m'
    else
        NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
    fi
}
export -f setup_colors
setup_colors

function begin {
    local message=$1

    echo "\

=======================================
BEGIN: $message
=======================================
"
}
export -f begin

function succeed {
    local message=$1

    echo -e "\
${GREEN}
=======================================
SUCCESS: $message
=======================================
${NOFORMAT}"
}
export -f succeed

function fail {
    local message=$1

    echo -e "\
#{RED}
=======================================
ERROR: $message
=======================================
#{NOFORMAT}"
    exit 1
}
export -f fail

function instance_name {
    local inst=$environment
    echo "$inst"
}
export -f instance_name

function log() {
    echo >&2 -e "[$cluster][$namespace][$task_name] ${1-}"
}

log "BEGIN: $task_name"
trap 'log "${RED:-}ERROR: $task_name - $cluster / $namespace${NOFORMAT:-}"' ERR

function decrypt() {
    local encrypted_file_path=
    encrypted_file_path="$1"

    local decrypted_file_path=
    decrypted_file_path="$2"

    secrets="$(sops --decrypt "$encrypted_file_path")"
    if [ ! -e "$decrypted_file_path" ]
    then
        log "writing decrypted secrets for: $encrypted_file_path"
        echo -n "$secrets" > "$decrypted_file_path"
    fi
}
