{"version":3,"file":"CodeSandboxEditorFS.js","sourceRoot":"","sources":["../../../src/backend/CodeSandboxEditorFS.ts"],"names":[],"mappings":"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","sourcesContent":["import { ApiError, ErrorCode } from '../core/api_error';\nimport { File } from '../core/file';\nimport { FileFlag } from '../core/file_flag';\n/* eslint-disable */\nimport {\n  BFSCallback,\n  BFSOneArgCallback,\n  FileSystem,\n  FileSystemOptions,\n  SynchronousFileSystem,\n} from '../core/file_system';\nimport { FileType, default as Stats } from '../core/node_fs_stats';\nimport PreloadFile from '../generic/preload_file';\n\nfunction blobToBuffer(blob: Blob, cb: (err: any | undefined | null, result?: Buffer) => void) {\n  if (typeof Blob === 'undefined' || !(blob instanceof Blob)) {\n    throw new Error('first argument must be a Blob');\n  }\n  if (typeof cb !== 'function') {\n    throw new Error('second argument must be a function');\n  }\n\n  const reader = new FileReader();\n\n  function onLoadEnd(e: any) {\n    reader.removeEventListener('loadend', onLoadEnd, false);\n    if (e.error) {\n      cb(e.error);\n    } else {\n      // @ts-ignore\n      cb(null, Buffer.from(reader.result));\n    }\n  }\n\n  reader.addEventListener('loadend', onLoadEnd, false);\n  reader.readAsArrayBuffer(blob);\n}\n\nexport interface IModule {\n  path: string;\n  updatedAt: string;\n  insertedAt: string;\n}\n\nexport type IFile = IModule & {\n  code: string | undefined;\n  savedCode: string | null;\n  isBinary: boolean;\n  type: 'file';\n}\n\nexport type IDirectory = IModule & {\n  type: 'directory';\n}\n\nexport interface IManager {\n  getSandboxFs: () => {\n    [path: string]: IFile | IDirectory;\n  };\n  getJwt: () => string;\n}\n\n\nfunction getCode(savedCode: string | null | undefined, code: string | undefined) {\n  if (savedCode === null) {\n    return code || '';\n  }\n\n  return savedCode || '';\n}\n\nclass CodeSandboxFile extends PreloadFile<CodeSandboxEditorFS> implements File {\n  constructor(\n    _fs: CodeSandboxEditorFS,\n    _path: string,\n    _flag: FileFlag,\n    _stat: Stats,\n    contents?: Buffer\n  ) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n\n  public sync(cb: BFSOneArgCallback): void {\n    if (this.isDirty()) {\n      const buffer = this.getBuffer();\n\n      this._fs._sync(\n        this.getPath(),\n        buffer,\n        (e: ApiError | undefined | null, stat?: Stats) => {\n          if (!e) {\n            this.resetDirty();\n          }\n          cb(e);\n        }\n      );\n    } else {\n      cb();\n    }\n  }\n\n  public close(cb: BFSOneArgCallback): void {\n    this.sync(cb);\n  }\n\n  public syncSync(): void {\n    if (this.isDirty()) {\n      this._fs._syncSync(this.getPath(), this.getBuffer());\n      this.resetDirty();\n    }\n  }\n\n  public closeSync(): void {\n    this.syncSync();\n  }\n}\n\nexport interface ICodeSandboxFileSystemOptions {\n  api: IManager;\n}\n\nexport default class CodeSandboxEditorFS extends SynchronousFileSystem\n  implements FileSystem {\n  public static readonly Name = 'CodeSandboxEditorFS';\n  public static readonly Options: FileSystemOptions = {\n    api: {\n      type: 'object',\n      description: 'The CodeSandbox Editor',\n      validator: (opt: IManager, cb: BFSOneArgCallback): void => {\n        if (opt) {\n          cb();\n        } else {\n          cb(new ApiError(ErrorCode.EINVAL, 'Manager is invalid'));\n        }\n      },\n    },\n  };\n\n  /**\n   * Creates an InMemoryFileSystem instance.\n   */\n  public static Create(\n    options: ICodeSandboxFileSystemOptions,\n    cb: BFSCallback<CodeSandboxEditorFS>\n  ): void {\n    cb(null, new CodeSandboxEditorFS(options.api));\n  }\n\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  private api: IManager;\n\n  constructor(api: IManager) {\n    super();\n\n    this.api = api;\n  }\n\n  public getName(): string {\n    return 'CodeSandboxEditorFS';\n  }\n\n  public isReadOnly(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return true;\n  }\n\n  public empty(mainCb: BFSOneArgCallback): void {\n    throw new Error('Empty not supported');\n  }\n\n  public renameSync(oldPath: string, newPath: string) {\n    throw new Error('Rename not supported');\n  }\n\n  public statSync(p: string, isLstate: boolean): Stats {\n    const modules = this.api.getSandboxFs();\n    const moduleInfo = modules[p];\n\n    if (!moduleInfo) {\n      const modulesStartingWithPath = Object.keys(modules).filter(\n        (pa: string) => pa.startsWith(p.endsWith('/') ? p : p + '/') || pa === p\n      );\n\n      if (modulesStartingWithPath.length > 0) {\n        return new Stats(FileType.DIRECTORY, 0);\n      } else {\n        throw ApiError.FileError(ErrorCode.ENOENT, p);\n      }\n    }\n\n    if (moduleInfo.type === 'directory') {\n      return new Stats(\n        FileType.DIRECTORY,\n        4096,\n        undefined,\n        +new Date(),\n        +new Date(moduleInfo.updatedAt),\n        +new Date(moduleInfo.insertedAt)\n      );\n    } else {\n      return new Stats(\n        FileType.FILE,\n        getCode(moduleInfo.savedCode, moduleInfo.code).length,\n        undefined,\n        +new Date(),\n        +new Date(moduleInfo.updatedAt),\n        +new Date(moduleInfo.insertedAt)\n      );\n    }\n  }\n\n  public createFileSync(p: string, flag: FileFlag, mode: number): File {\n    throw new Error('Create file not supported');\n  }\n\n  public open(p: string, flag: FileFlag, mode: number, cb: BFSCallback<File>): void {\n    const moduleInfo = this.api.getSandboxFs()[p];\n\n    if (!moduleInfo) {\n      cb(ApiError.ENOENT(p));\n      return;\n    }\n\n    if (moduleInfo.type === 'directory') {\n      const stats = new Stats(FileType.DIRECTORY, 4096, undefined, +new Date(), +new Date(moduleInfo.updatedAt), +new Date(moduleInfo.insertedAt));\n      cb(null, new CodeSandboxFile(this, p, flag, stats));\n    } else {\n      const { isBinary, savedCode, code } = moduleInfo;\n\n      if (isBinary) {\n        const url = getCode(savedCode, code);\n        const jwt = this.api.getJwt && this.api.getJwt();\n        const sendAuth = jwt && new URL(url).origin === document.location.origin;\n        const headers: {} | {\n          Authorization: string\n        } = sendAuth ? { \n          Authorization: `Bearer ${this.api.getJwt && this.api.getJwt()}` \n        } : {};\n\n        fetch(url, { headers }).then(x => x.blob()).then(blob => {\n          const stats = new Stats(FileType.FILE, blob.size, undefined, +new Date(), +new Date(moduleInfo.updatedAt), +new Date(moduleInfo.insertedAt));\n\n          blobToBuffer(blob, (err, r) => {\n            if (err) {\n              cb(err);\n              return;\n            }\n\n            cb(undefined, new CodeSandboxFile(this, p, flag, stats, r));\n          });\n        });\n        return;\n      }\n\n      const buffer = Buffer.from(getCode(savedCode, code));\n      const stats = new Stats(FileType.FILE, buffer.length, undefined, +new Date(), +new Date(moduleInfo.updatedAt), +new Date(moduleInfo.insertedAt));\n\n      cb(null, new CodeSandboxFile(this, p, flag, stats, buffer));\n    }\n  }\n\n  public openFileSync(p: string, flag: FileFlag, mode: number): File {\n    const moduleInfo = this.api.getSandboxFs()[p];\n\n    if (!moduleInfo) {\n      throw ApiError.ENOENT(p);\n    }\n\n    if (moduleInfo.type === 'directory') {\n      const stats = new Stats(FileType.DIRECTORY, 4096, undefined, +new Date(), +new Date(moduleInfo.updatedAt), +new Date(moduleInfo.insertedAt));\n\n      return new CodeSandboxFile(this, p, flag, stats);\n    } else {\n      const { savedCode, code } = moduleInfo;\n      const buffer = Buffer.from(getCode(savedCode, code));\n      const stats = new Stats(FileType.FILE, buffer.length, undefined, +new Date(), +new Date(moduleInfo.updatedAt), +new Date(moduleInfo.insertedAt));\n\n      return new CodeSandboxFile(this, p, flag, stats, buffer);\n    }\n  }\n\n  public writeFileSync() {\n    // Stubbed\n  }\n\n  public rmdirSync(p: string) {\n    // Stubbed\n  }\n\n  public mkdirSync(p: string) {\n    // Stubbed\n  }\n\n  public unlinkSync(p: string) {\n    // Stubbed\n  }\n\n  public readdirSync(path: string): string[] {\n    const paths = Object.keys(this.api.getSandboxFs());\n\n    const p = path.endsWith('/') ? path : path + '/';\n\n    const pathsInDir = paths.filter((secondP: string) => secondP.startsWith(p));\n\n    if (pathsInDir.length === 0) {\n      return [];\n    }\n\n    const directChildren: Set<string> = new Set();\n    const currentPathLength = p.split('/').length;\n\n    pathsInDir\n      .filter((np: string) => np.split('/').length >= currentPathLength)\n      .forEach((np: string) => {\n        const parts = np.split('/');\n\n        parts.length = currentPathLength;\n        directChildren.add(parts.join('/'));\n      });\n\n    const pathArray = Array.from(directChildren).map(pa => pa.replace(p, ''));\n\n    return pathArray;\n  }\n\n  public _sync(p: string, data: Buffer, cb: BFSCallback<Stats>): void {\n    // Stubbed\n\n    cb(null, undefined);\n  }\n\n  public _syncSync(p: string, data: Buffer): void {\n    // Stubbed\n  }\n}\n"]}