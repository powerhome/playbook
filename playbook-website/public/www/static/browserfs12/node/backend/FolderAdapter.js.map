{"version":3,"file":"FolderAdapter.js","sourceRoot":"","sources":["../../../src/backend/FolderAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseFileSystem, FileSystem, BFSCallback, FileSystemOptions} from '../core/file_system';\nimport * as path from 'path';\nimport {ApiError} from '../core/api_error';\n\n/**\n * Configuration options for a FolderAdapter file system.\n */\nexport interface FolderAdapterOptions {\n  // The folder to use as the root directory.\n  folder: string;\n  // The file system to wrap.\n  wrapped: FileSystem;\n}\n\n/**\n * The FolderAdapter file system wraps a file system, and scopes all interactions to a subfolder of that file system.\n *\n * Example: Given a file system `foo` with folder `bar` and file `bar/baz`...\n *\n * ```javascript\n * BrowserFS.configure({\n *   fs: \"FolderAdapter\",\n *   options: {\n *     folder: \"bar\",\n *     wrapped: foo\n *   }\n * }, function(e) {\n *   var fs = BrowserFS.BFSRequire('fs');\n *   fs.readdirSync('/'); // ['baz']\n * });\n * ```\n */\nexport default class FolderAdapter extends BaseFileSystem implements FileSystem {\n  public static readonly Name = \"FolderAdapter\";\n\n  public static readonly Options: FileSystemOptions = {\n    folder: {\n      type: \"string\",\n      description: \"The folder to use as the root directory\"\n    },\n    wrapped: {\n      type: \"object\",\n      description: \"The file system to wrap\"\n    }\n  };\n\n  /**\n   * Creates a FolderAdapter instance with the given options.\n   */\n  public static Create(opts: FolderAdapterOptions, cb: BFSCallback<FolderAdapter>): void {\n    const fa = new FolderAdapter(opts.folder, opts.wrapped);\n    fa._initialize(function(e?) {\n      if (e) {\n        cb(e);\n      } else {\n        cb(null, fa);\n      }\n    });\n  }\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  public _wrapped: FileSystem;\n  public _folder: string;\n\n  private constructor(folder: string, wrapped: FileSystem) {\n    super();\n    this._folder = folder;\n    this._wrapped = wrapped;\n  }\n\n  public getName(): string { return this._wrapped.getName(); }\n  public isReadOnly(): boolean { return this._wrapped.isReadOnly(); }\n  public supportsProps(): boolean { return this._wrapped.supportsProps(); }\n  public supportsSynch(): boolean { return this._wrapped.supportsSynch(); }\n  public supportsLinks(): boolean { return false; }\n\n  /**\n   * Initialize the file system. Ensures that the wrapped file system\n   * has the given folder.\n   */\n  private _initialize(cb: (e?: ApiError) => void) {\n    this._wrapped.exists(this._folder, (exists: boolean) => {\n      if (exists) {\n        cb();\n      } else if (this._wrapped.isReadOnly()) {\n        cb(ApiError.ENOENT(this._folder));\n      } else {\n        this._wrapped.mkdir(this._folder, 0x1ff, cb);\n      }\n    });\n  }\n}\n\n/**\n * @hidden\n */\nfunction translateError(folder: string, e: any): any {\n  if (e !== null && typeof e === 'object') {\n    const err = <ApiError> e;\n    let p = err.path;\n    if (p) {\n      p = '/' + path.relative(folder, p);\n      err.message = err.message.replace(err.path!, p);\n      err.path = p;\n    }\n  }\n  return e;\n}\n\n/**\n * @hidden\n */\nfunction wrapCallback(folder: string, cb: any): any {\n  if (typeof cb === 'function') {\n    return function(err: ApiError) {\n      if (arguments.length > 0) {\n        arguments[0] = translateError(folder, err);\n      }\n      (<Function> cb).apply(null, arguments);\n    };\n  } else {\n    return cb;\n  }\n}\n\n/**\n * @hidden\n */\nfunction wrapFunction(name: string, wrapFirst: boolean, wrapSecond: boolean): Function {\n  if (name.slice(name.length - 4) !== 'Sync') {\n    // Async function. Translate error in callback.\n    return function(this: FolderAdapter) {\n      if (arguments.length > 0) {\n        if (wrapFirst) {\n          arguments[0] = path.join(this._folder, arguments[0]);\n        }\n        if (wrapSecond) {\n          arguments[1] = path.join(this._folder, arguments[1]);\n        }\n        arguments[arguments.length - 1] = wrapCallback(this._folder, arguments[arguments.length - 1]);\n      }\n      return (<any> this._wrapped)[name].apply(this._wrapped, arguments);\n    };\n  } else {\n    // Sync function. Translate error in catch.\n    return function(this: FolderAdapter) {\n      try {\n        if (wrapFirst) {\n          arguments[0] = path.join(this._folder, arguments[0]);\n        }\n        if (wrapSecond) {\n          arguments[1] = path.join(this._folder, arguments[1]);\n        }\n        return (<any> this._wrapped)[name].apply(this._wrapped, arguments);\n      } catch (e) {\n        throw translateError(this._folder, e);\n      }\n    };\n  }\n}\n\n// First argument is a path.\n['diskSpace', 'stat', 'statSync', 'open', 'openSync', 'unlink', 'unlinkSync',\n 'rmdir', 'rmdirSync', 'mkdir', 'mkdirSync', 'readdir', 'readdirSync', 'exists',\n 'existsSync', 'realpath', 'realpathSync', 'truncate', 'truncateSync', 'readFile',\n 'readFileSync', 'writeFile', 'writeFileSync', 'appendFile', 'appendFileSync',\n 'chmod', 'chmodSync', 'chown', 'chownSync', 'utimes', 'utimesSync', 'readlink',\n 'readlinkSync'].forEach((name: string) => {\n  (<any> FolderAdapter.prototype)[name] = wrapFunction(name, true, false);\n});\n\n// First and second arguments are paths.\n['rename', 'renameSync', 'link', 'linkSync', 'symlink', 'symlinkSync'].forEach((name: string) => {\n  (<any> FolderAdapter.prototype)[name] = wrapFunction(name, true, true);\n});\n"]}