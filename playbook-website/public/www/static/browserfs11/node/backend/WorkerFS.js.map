{"version":3,"file":"WorkerFS.js","sourceRoot":"","sources":["../../../src/backend/WorkerFS.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseFileSystem, FileSystem, BFSOneArgCallback, BFSCallback, FileSystemOptions} from '../core/file_system';\nimport {ApiError, ErrorCode} from '../core/api_error';\nimport {FileFlag} from '../core/file_flag';\nimport {buffer2ArrayBuffer, arrayBuffer2Buffer, emptyBuffer} from '../core/util';\nimport {File, BaseFile} from '../core/file';\nimport {default as Stats} from '../core/node_fs_stats';\nimport PreloadFile from '../generic/preload_file';\nimport global from '../core/global';\nimport fs from '../core/node_fs';\n\n/**\n * @hidden\n */\ndeclare const importScripts: Function;\n\n/**\n * @hidden\n */\ninterface IBrowserFSMessage {\n  browserfsMessage: boolean;\n}\n\n/**\n * @hidden\n */\nenum SpecialArgType {\n  // Callback\n  CB,\n  // File descriptor\n  FD,\n  // API error\n  API_ERROR,\n  // Stats object\n  STATS,\n  // Initial probe for file system information.\n  PROBE,\n  // FileFlag object.\n  FILEFLAG,\n  // Buffer object.\n  BUFFER,\n  // Generic Error object.\n  ERROR\n}\n\n/**\n * @hidden\n */\ninterface ISpecialArgument {\n  type: SpecialArgType;\n}\n\n/**\n * @hidden\n */\ninterface IProbeResponse extends ISpecialArgument {\n  isReadOnly: boolean;\n  supportsLinks: boolean;\n  supportsProps: boolean;\n}\n\n/**\n * @hidden\n */\ninterface ICallbackArgument extends ISpecialArgument {\n  // The callback ID.\n  id: number;\n}\n\n/**\n * Converts callback arguments into ICallbackArgument objects, and back\n * again.\n * @hidden\n */\nclass CallbackArgumentConverter {\n  private _callbacks: { [id: number]: Function } = {};\n  private _nextId: number = 0;\n\n  public toRemoteArg(cb: Function): ICallbackArgument {\n    const id = this._nextId++;\n    this._callbacks[id] = cb;\n    return {\n      type: SpecialArgType.CB,\n      id: id\n    };\n  }\n\n  public toLocalArg(id: number): Function {\n    const cb = this._callbacks[id];\n    delete this._callbacks[id];\n    return cb;\n  }\n}\n\n/**\n * @hidden\n */\ninterface IFileDescriptorArgument extends ISpecialArgument {\n  // The file descriptor's id on the remote side.\n  id: number;\n  // The entire file's data, as an array buffer.\n  data: ArrayBuffer | SharedArrayBuffer;\n  // The file's stat object, as an array buffer.\n  stat: ArrayBuffer | SharedArrayBuffer;\n  // The path to the file.\n  path: string;\n  // The flag of the open file descriptor.\n  flag: string;\n}\n\n/**\n * @hidden\n */\nclass FileDescriptorArgumentConverter {\n  private _fileDescriptors: { [id: number]: File } = {};\n  private _nextId: number = 0;\n\n  public toRemoteArg(fd: File, p: string, flag: FileFlag, cb: BFSCallback<IFileDescriptorArgument>): void {\n    const id = this._nextId++;\n    let data: ArrayBuffer | SharedArrayBuffer;\n    let stat: ArrayBuffer | SharedArrayBuffer;\n    this._fileDescriptors[id] = fd;\n\n    // Extract needed information asynchronously.\n    fd.stat((err, stats) => {\n      if (err) {\n        cb(err);\n      } else {\n        stat = bufferToTransferrableObject(stats!.toBuffer());\n        // If it's a readable flag, we need to grab contents.\n        if (flag.isReadable()) {\n          fd.read(Buffer.alloc(stats!.size), 0, stats!.size, 0, (err?: ApiError | null, bytesRead?: number, buff?: Buffer) => {\n            if (err) {\n              cb(err);\n            } else {\n              data = bufferToTransferrableObject(buff!);\n              cb(null, {\n                type: SpecialArgType.FD,\n                id: id,\n                data: data,\n                stat: stat,\n                path: p,\n                flag: flag.getFlagString()\n              });\n            }\n          });\n        } else {\n          // File is not readable, which means writing to it will append or\n          // truncate/replace existing contents. Return an empty arraybuffer.\n          cb(null, {\n            type: SpecialArgType.FD,\n            id: id,\n            data: new ArrayBuffer(0),\n            stat: stat,\n            path: p,\n            flag: flag.getFlagString()\n          });\n        }\n      }\n    });\n  }\n\n  public applyFdAPIRequest(request: IAPIRequest, cb: BFSOneArgCallback): void {\n    const fdArg = <IFileDescriptorArgument> request.args[0];\n    this._applyFdChanges(fdArg, (err, fd?) => {\n      if (err) {\n        cb(err);\n      } else {\n        // Apply method on now-changed file descriptor.\n        (<any> fd)[request.method]((e?: ApiError) => {\n          if (request.method === 'close') {\n            delete this._fileDescriptors[fdArg.id];\n          }\n          cb(e);\n        });\n      }\n    });\n  }\n\n  private _applyFdChanges(remoteFd: IFileDescriptorArgument, cb: BFSCallback<File>): void {\n    const fd = this._fileDescriptors[remoteFd.id],\n      data = transferrableObjectToBuffer(remoteFd.data),\n      remoteStats = Stats.fromBuffer(transferrableObjectToBuffer(remoteFd.stat));\n\n    // Write data if the file is writable.\n    const flag = FileFlag.getFileFlag(remoteFd.flag);\n    if (flag.isWriteable()) {\n      // Appendable: Write to end of file.\n      // Writeable: Replace entire contents of file.\n      fd.write(data, 0, data.length, flag.isAppendable() ? fd.getPos()! : 0, (e?: ApiError | null) => {\n        function applyStatChanges() {\n          // Check if mode changed.\n          fd.stat((e, stats?) => {\n            if (e) {\n              cb(e);\n            } else {\n              if (stats!.mode !== remoteStats.mode) {\n                fd.chmod(remoteStats.mode, (e: any) => {\n                  cb(e, fd);\n                });\n              } else {\n                cb(e, fd);\n              }\n            }\n          });\n        }\n        if (e) {\n          cb(e);\n        } else {\n          // If writeable & not appendable, we need to ensure file contents are\n          // identical to those from the remote FD. Thus, we truncate to the\n          // length of the remote file.\n          if (!flag.isAppendable()) {\n            fd.truncate(data.length, () => {\n              applyStatChanges();\n            });\n          } else {\n            applyStatChanges();\n          }\n        }\n      });\n    } else {\n      cb(null, fd);\n    }\n  }\n}\n\n/**\n * @hidden\n */\ninterface IAPIErrorArgument extends ISpecialArgument {\n  // The error object, as an array buffer.\n  errorData: ArrayBuffer | SharedArrayBuffer;\n}\n\n/**\n * @hidden\n */\nfunction apiErrorLocal2Remote(e: ApiError): IAPIErrorArgument {\n  return {\n    type: SpecialArgType.API_ERROR,\n    errorData: bufferToTransferrableObject(e.writeToBuffer())\n  };\n}\n\n/**\n * @hidden\n */\nfunction apiErrorRemote2Local(e: IAPIErrorArgument): ApiError {\n  return ApiError.fromBuffer(transferrableObjectToBuffer(e.errorData));\n}\n\n/**\n * @hidden\n */\ninterface IErrorArgument extends ISpecialArgument {\n  // The name of the error (e.g. 'TypeError').\n  name: string;\n  // The message associated with the error.\n  message: string;\n  // The stack associated with the error.\n  stack: string;\n}\n\n/**\n * @hidden\n */\nfunction errorLocal2Remote(e: Error): IErrorArgument {\n  return {\n    type: SpecialArgType.ERROR,\n    name: e.name,\n    message: e.message,\n    stack: e.stack!\n  };\n}\n\n/**\n * @hidden\n */\nfunction errorRemote2Local(e: IErrorArgument): Error {\n  let cnstr: {\n    new (msg: string): Error;\n  } = global[e.name];\n  if (typeof(cnstr) !== 'function') {\n    cnstr = Error;\n  }\n  const err = new cnstr(e.message);\n  err.stack = e.stack;\n  return err;\n}\n\n/**\n * @hidden\n */\ninterface IStatsArgument extends ISpecialArgument {\n  // The stats object as an array buffer.\n  statsData: ArrayBuffer | SharedArrayBuffer;\n}\n\n/**\n * @hidden\n */\nfunction statsLocal2Remote(stats: Stats): IStatsArgument {\n  return {\n    type: SpecialArgType.STATS,\n    statsData: bufferToTransferrableObject(stats.toBuffer())\n  };\n}\n\n/**\n * @hidden\n */\nfunction statsRemote2Local(stats: IStatsArgument): Stats {\n  return Stats.fromBuffer(transferrableObjectToBuffer(stats.statsData));\n}\n\n/**\n * @hidden\n */\ninterface IFileFlagArgument extends ISpecialArgument {\n  flagStr: string;\n}\n\n/**\n * @hidden\n */\nfunction fileFlagLocal2Remote(flag: FileFlag): IFileFlagArgument {\n  return {\n    type: SpecialArgType.FILEFLAG,\n    flagStr: flag.getFlagString()\n  };\n}\n\n/**\n * @hidden\n */\nfunction fileFlagRemote2Local(remoteFlag: IFileFlagArgument): FileFlag {\n  return FileFlag.getFileFlag(remoteFlag.flagStr);\n}\n\n/**\n * @hidden\n */\ninterface IBufferArgument extends ISpecialArgument {\n  data: ArrayBuffer | SharedArrayBuffer;\n}\n\n/**\n * @hidden\n */\nfunction bufferToTransferrableObject(buff: Buffer): ArrayBuffer | SharedArrayBuffer {\n  return buffer2ArrayBuffer(buff);\n}\n\n/**\n * @hidden\n */\nfunction transferrableObjectToBuffer(buff: ArrayBuffer | SharedArrayBuffer): Buffer {\n  return arrayBuffer2Buffer(buff);\n}\n\n/**\n * @hidden\n */\nfunction bufferLocal2Remote(buff: Buffer): IBufferArgument {\n  return {\n    type: SpecialArgType.BUFFER,\n    data: bufferToTransferrableObject(buff)\n  };\n}\n\n/**\n * @hidden\n */\nfunction bufferRemote2Local(buffArg: IBufferArgument): Buffer {\n  return transferrableObjectToBuffer(buffArg.data);\n}\n\n/**\n * @hidden\n */\ninterface IAPIRequest extends IBrowserFSMessage {\n  method: string;\n  args: Array<number | string | ISpecialArgument>;\n}\n\n/**\n * @hidden\n */\nfunction isAPIRequest(data: any): data is IAPIRequest {\n  return data && typeof data === 'object' && data.hasOwnProperty('browserfsMessage') && data['browserfsMessage'];\n}\n\n/**\n * @hidden\n */\ninterface IAPIResponse extends IBrowserFSMessage {\n  cbId: number;\n  args: Array<number | string | ISpecialArgument>;\n}\n\n/**\n * @hidden\n */\nfunction isAPIResponse(data: any): data is IAPIResponse {\n  return data && typeof data === 'object' && data.hasOwnProperty('browserfsMessage') && data['browserfsMessage'];\n}\n\n/**\n * Represents a remote file in a different worker/thread.\n */\nclass WorkerFile extends PreloadFile<WorkerFS> {\n  private _remoteFdId: number;\n\n  constructor(_fs: WorkerFS, _path: string, _flag: FileFlag, _stat: Stats, remoteFdId: number, contents?: Buffer) {\n    super(_fs, _path, _flag, _stat, contents);\n    this._remoteFdId = remoteFdId;\n  }\n\n  public getRemoteFdId() {\n    return this._remoteFdId;\n  }\n\n  /**\n   * @hidden\n   */\n  public toRemoteArg(): IFileDescriptorArgument {\n    return {\n      type: SpecialArgType.FD,\n      id: this._remoteFdId,\n      data: bufferToTransferrableObject(this.getBuffer()),\n      stat: bufferToTransferrableObject(this.getStats().toBuffer()),\n      path: this.getPath(),\n      flag: this.getFlag().getFlagString()\n    };\n  }\n\n  public sync(cb: BFSOneArgCallback): void {\n    this._syncClose('sync', cb);\n  }\n\n  public close(cb: BFSOneArgCallback): void {\n    this._syncClose('close', cb);\n  }\n\n  private _syncClose(type: string, cb: BFSOneArgCallback): void {\n    if (this.isDirty()) {\n      (<WorkerFS> this._fs).syncClose(type, this, (e?: ApiError) => {\n        if (!e) {\n          this.resetDirty();\n        }\n        cb(e);\n      });\n    } else {\n      cb();\n    }\n  }\n}\n\nexport interface WorkerFSOptions {\n  // The target worker that you want to connect to, or the current worker if in a worker context.\n  worker: Worker;\n}\n\n/**\n * WorkerFS lets you access a BrowserFS instance that is running in a different\n * JavaScript context (e.g. access BrowserFS in one of your WebWorkers, or\n * access BrowserFS running on the main page from a WebWorker).\n *\n * For example, to have a WebWorker access files in the main browser thread,\n * do the following:\n *\n * MAIN BROWSER THREAD:\n *\n * ```javascript\n *   // Listen for remote file system requests.\n *   BrowserFS.FileSystem.WorkerFS.attachRemoteListener(webWorkerObject);\n * ```\n *\n * WEBWORKER THREAD:\n *\n * ```javascript\n *   // Set the remote file system as the root file system.\n *   BrowserFS.configure({ fs: \"WorkerFS\", options: { worker: self }}, function(e) {\n *     // Ready!\n *   });\n * ```\n *\n * Note that synchronous operations are not permitted on the WorkerFS, regardless\n * of the configuration option of the remote FS.\n */\nexport default class WorkerFS extends BaseFileSystem implements FileSystem {\n  public static readonly Name = \"WorkerFS\";\n\n  public static readonly Options: FileSystemOptions = {\n    worker: {\n      type: \"object\",\n      description: \"The target worker that you want to connect to, or the current worker if in a worker context.\",\n      validator: function(v: object, cb: BFSOneArgCallback): void {\n        // Check for a `postMessage` function.\n        if ((<any> v)['postMessage']) {\n          cb();\n        } else {\n          cb(new ApiError(ErrorCode.EINVAL, `option must be a Web Worker instance.`));\n        }\n      }\n    }\n  };\n\n  public static Create(opts: WorkerFSOptions, cb: BFSCallback<WorkerFS>): void {\n    const fs = new WorkerFS(opts.worker);\n    fs._initialize(() => {\n      cb(null, fs);\n    });\n  }\n  public static isAvailable(): boolean {\n    return typeof(importScripts) !== 'undefined' || typeof(Worker) !== 'undefined';\n  }\n\n  /**\n   * Attaches a listener to the remote worker for file system requests.\n   */\n  public static attachRemoteListener(worker: Worker) {\n    const fdConverter = new FileDescriptorArgumentConverter();\n\n    function argLocal2Remote(arg: any, requestArgs: any[], cb: BFSCallback<any>): void {\n      switch (typeof arg) {\n        case 'object':\n          if (arg instanceof Stats) {\n            cb(null, statsLocal2Remote(arg));\n          } else if (arg instanceof ApiError) {\n            cb(null, apiErrorLocal2Remote(arg));\n          } else if (arg instanceof BaseFile) {\n            // Pass in p and flags from original request.\n            cb(null, fdConverter.toRemoteArg(<File> arg, requestArgs[0], requestArgs[1], cb));\n          } else if (arg instanceof FileFlag) {\n            cb(null, fileFlagLocal2Remote(arg));\n          } else if (arg instanceof Buffer) {\n            cb(null, bufferLocal2Remote(arg));\n          } else if (arg instanceof Error) {\n            cb(null, errorLocal2Remote(arg));\n          } else {\n            cb(null, arg);\n          }\n          break;\n        default:\n          cb(null, arg);\n          break;\n      }\n    }\n\n    function argRemote2Local(arg: any, fixedRequestArgs: any[]): any {\n      if (!arg) {\n        return arg;\n      }\n      switch (typeof arg) {\n        case 'object':\n          if (typeof arg['type'] === 'number') {\n            const specialArg = <ISpecialArgument> arg;\n            switch (specialArg.type) {\n              case SpecialArgType.CB:\n                const cbId = (<ICallbackArgument> arg).id;\n                return function() {\n                  let i: number;\n                  const fixedArgs = new Array(arguments.length);\n                  let message: IAPIResponse,\n                    countdown = arguments.length;\n\n                  function abortAndSendError(err: ApiError) {\n                    if (countdown > 0) {\n                      countdown = -1;\n                      message = {\n                        browserfsMessage: true,\n                        cbId: cbId,\n                        args: [apiErrorLocal2Remote(err)]\n                      };\n                      worker.postMessage(message);\n                    }\n                  }\n\n                  for (i = 0; i < arguments.length; i++) {\n                    // Capture i and argument.\n                    ((i: number, arg: any) => {\n                      argLocal2Remote(arg, fixedRequestArgs, (err, fixedArg?) => {\n                        fixedArgs[i] = fixedArg;\n                        if (err) {\n                          abortAndSendError(err);\n                        } else if (--countdown === 0) {\n                          message = {\n                            browserfsMessage: true,\n                            cbId: cbId,\n                            args: fixedArgs\n                          };\n                          worker.postMessage(message);\n                        }\n                      });\n                    })(i, arguments[i]);\n                  }\n\n                  if (arguments.length === 0) {\n                    message = {\n                      browserfsMessage: true,\n                      cbId: cbId,\n                      args: fixedArgs\n                    };\n                    worker.postMessage(message);\n                  }\n\n                };\n              case SpecialArgType.API_ERROR:\n                return apiErrorRemote2Local(<IAPIErrorArgument> specialArg);\n              case SpecialArgType.STATS:\n                return statsRemote2Local(<IStatsArgument> specialArg);\n              case SpecialArgType.FILEFLAG:\n                return fileFlagRemote2Local(<IFileFlagArgument> specialArg);\n              case SpecialArgType.BUFFER:\n                return bufferRemote2Local(<IBufferArgument> specialArg);\n              case SpecialArgType.ERROR:\n                return errorRemote2Local(<IErrorArgument> specialArg);\n              default:\n                // No idea what this is.\n                return arg;\n            }\n          } else {\n            return arg;\n          }\n        default:\n          return arg;\n      }\n    }\n\n    worker.addEventListener('message', (e: MessageEvent) => {\n      const request: object = e.data;\n      if (isAPIRequest(request)) {\n        const args = request.args,\n          fixedArgs = new Array<any>(args.length);\n\n        switch (request.method) {\n          case 'close':\n          case 'sync':\n            (() => {\n              // File descriptor-relative methods.\n              const remoteCb = <ICallbackArgument> args[1];\n              fdConverter.applyFdAPIRequest(request, (err?: ApiError) => {\n                // Send response.\n                const response: IAPIResponse = {\n                  browserfsMessage: true,\n                  cbId: remoteCb.id,\n                  args: err ? [apiErrorLocal2Remote(err)] : []\n                };\n                worker.postMessage(response);\n              });\n            })();\n            break;\n          case 'probe':\n            (() => {\n              const rootFs = <FileSystem> fs.getRootFS(),\n                remoteCb = <ICallbackArgument> args[1],\n                probeResponse: IProbeResponse = {\n                  type: SpecialArgType.PROBE,\n                  isReadOnly: rootFs.isReadOnly(),\n                  supportsLinks: rootFs.supportsLinks(),\n                  supportsProps: rootFs.supportsProps()\n                },\n                response: IAPIResponse = {\n                  browserfsMessage: true,\n                  cbId: remoteCb.id,\n                  args: [probeResponse]\n                };\n\n              worker.postMessage(response);\n            })();\n            break;\n          default:\n            // File system methods.\n            for (let i = 0; i < args.length; i++) {\n              fixedArgs[i] = argRemote2Local(args[i], fixedArgs);\n            }\n            const rootFS = fs.getRootFS();\n            (<Function> (<any> rootFS)[request.method]).apply(rootFS, fixedArgs);\n            break;\n        }\n      }\n    });\n  }\n\n  private _worker: Worker;\n  private _callbackConverter = new CallbackArgumentConverter();\n\n  private _isInitialized: boolean = false;\n  private _isReadOnly: boolean = false;\n  private _supportLinks: boolean = false;\n  private _supportProps: boolean = false;\n\n  /**\n   * Constructs a new WorkerFS instance that connects with BrowserFS running on\n   * the specified worker.\n   */\n  private constructor(worker: Worker) {\n    super();\n    this._worker = worker;\n    this._worker.addEventListener('message', (e: MessageEvent) => {\n      const resp: object = e.data;\n      if (isAPIResponse(resp)) {\n        let i: number;\n        const args = resp.args;\n        const fixedArgs = new Array(args.length);\n        // Dispatch event to correct id.\n        for (i = 0; i < fixedArgs.length; i++) {\n          fixedArgs[i] = this._argRemote2Local(args[i]);\n        }\n        this._callbackConverter.toLocalArg(resp.cbId).apply(null, fixedArgs);\n      }\n    });\n  }\n\n  public getName(): string {\n    return WorkerFS.Name;\n  }\n\n  public isReadOnly(): boolean { return this._isReadOnly; }\n  public supportsSynch(): boolean { return false; }\n  public supportsLinks(): boolean { return this._supportLinks; }\n  public supportsProps(): boolean { return this._supportProps; }\n\n  public rename(oldPath: string, newPath: string, cb: BFSOneArgCallback): void {\n    this._rpc('rename', arguments);\n  }\n  public stat(p: string, isLstat: boolean, cb: BFSCallback<Stats>): void {\n    this._rpc('stat', arguments);\n  }\n  public open(p: string, flag: FileFlag, mode: number, cb: BFSCallback<File>): void {\n    this._rpc('open', arguments);\n  }\n  public unlink(p: string, cb: Function): void {\n    this._rpc('unlink', arguments);\n  }\n  public rmdir(p: string, cb: Function): void {\n    this._rpc('rmdir', arguments);\n  }\n  public mkdir(p: string, mode: number, cb: Function): void {\n    this._rpc('mkdir', arguments);\n  }\n  public readdir(p: string, cb: BFSCallback<string[]>): void {\n    this._rpc('readdir', arguments);\n  }\n  public exists(p: string, cb: (exists: boolean) => void): void {\n    this._rpc('exists', arguments);\n  }\n  public realpath(p: string, cache: { [path: string]: string }, cb: BFSCallback<string>): void {\n    this._rpc('realpath', arguments);\n  }\n  public truncate(p: string, len: number, cb: Function): void {\n    this._rpc('truncate', arguments);\n  }\n  public readFile(fname: string, encoding: string, flag: FileFlag, cb: BFSCallback<any>): void {\n    this._rpc('readFile', arguments);\n  }\n  public writeFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: BFSOneArgCallback): void {\n    this._rpc('writeFile', arguments);\n  }\n  public appendFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cb: BFSOneArgCallback): void {\n    this._rpc('appendFile', arguments);\n  }\n  public chmod(p: string, isLchmod: boolean, mode: number, cb: Function): void {\n    this._rpc('chmod', arguments);\n  }\n  public chown(p: string, isLchown: boolean, uid: number, gid: number, cb: Function): void {\n    this._rpc('chown', arguments);\n  }\n  public utimes(p: string, atime: Date, mtime: Date, cb: Function): void {\n    this._rpc('utimes', arguments);\n  }\n  public link(srcpath: string, dstpath: string, cb: Function): void {\n    this._rpc('link', arguments);\n  }\n  public symlink(srcpath: string, dstpath: string, type: string, cb: Function): void {\n    this._rpc('symlink', arguments);\n  }\n  public readlink(p: string, cb: Function): void {\n    this._rpc('readlink', arguments);\n  }\n\n  public syncClose(method: string, fd: File, cb: BFSOneArgCallback): void {\n    this._worker.postMessage({\n      browserfsMessage: true,\n      method: method,\n      args: [(<WorkerFile> fd).toRemoteArg(), this._callbackConverter.toRemoteArg(cb)]\n    });\n  }\n\n  /**\n   * Called once both local and remote sides are set up.\n   */\n  private _initialize(cb: () => void): void {\n    if (!this._isInitialized) {\n      const message: IAPIRequest = {\n        browserfsMessage: true,\n        method: 'probe',\n        args: [this._argLocal2Remote(emptyBuffer()), this._callbackConverter.toRemoteArg((probeResponse: IProbeResponse) => {\n          this._isInitialized = true;\n          this._isReadOnly = probeResponse.isReadOnly;\n          this._supportLinks = probeResponse.supportsLinks;\n          this._supportProps = probeResponse.supportsProps;\n          cb();\n        })]\n      };\n      this._worker.postMessage(message);\n    } else {\n      cb();\n    }\n  }\n\n  private _argRemote2Local(arg: any): any {\n    if (!arg) {\n      return arg;\n    }\n    switch (typeof arg) {\n      case 'object':\n        if (typeof arg['type'] === 'number') {\n          const specialArg = <ISpecialArgument> arg;\n          switch (specialArg.type) {\n            case SpecialArgType.API_ERROR:\n              return apiErrorRemote2Local(<IAPIErrorArgument> specialArg);\n            case SpecialArgType.FD:\n              const fdArg = <IFileDescriptorArgument> specialArg;\n              return new WorkerFile(this, fdArg.path, FileFlag.getFileFlag(fdArg.flag), Stats.fromBuffer(transferrableObjectToBuffer(fdArg.stat)), fdArg.id, transferrableObjectToBuffer(fdArg.data));\n            case SpecialArgType.STATS:\n              return statsRemote2Local(<IStatsArgument> specialArg);\n            case SpecialArgType.FILEFLAG:\n              return fileFlagRemote2Local(<IFileFlagArgument> specialArg);\n            case SpecialArgType.BUFFER:\n              return bufferRemote2Local(<IBufferArgument> specialArg);\n            case SpecialArgType.ERROR:\n              return errorRemote2Local(<IErrorArgument> specialArg);\n            default:\n              return arg;\n          }\n        } else {\n          return arg;\n        }\n      default:\n        return arg;\n    }\n  }\n\n  private _rpc(methodName: string, args: IArguments) {\n    const fixedArgs = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      fixedArgs[i] = this._argLocal2Remote(args[i]);\n    }\n    const message: IAPIRequest = {\n      browserfsMessage: true,\n      method: methodName,\n      args: fixedArgs\n    };\n    this._worker.postMessage(message);\n  }\n\n  /**\n   * Converts a local argument into a remote argument. Public so WorkerFile objects can call it.\n   */\n  private _argLocal2Remote(arg: any): any {\n    if (!arg) {\n      return arg;\n    }\n    switch (typeof arg) {\n      case \"object\":\n        if (arg instanceof Stats) {\n          return statsLocal2Remote(arg);\n        } else if (arg instanceof ApiError) {\n          return apiErrorLocal2Remote(arg);\n        } else if (arg instanceof WorkerFile) {\n          return (<WorkerFile> arg).toRemoteArg();\n        } else if (arg instanceof FileFlag) {\n          return fileFlagLocal2Remote(arg);\n        } else if (arg instanceof Buffer) {\n          return bufferLocal2Remote(arg);\n        } else if (arg instanceof Error) {\n          return errorLocal2Remote(arg);\n        } else {\n          return \"Unknown argument\";\n        }\n      case \"function\":\n        return this._callbackConverter.toRemoteArg(arg);\n      default:\n        return arg;\n    }\n  }\n}\n"]}