{"version":3,"sources":["webpack:////Users/jasper.furniss/codesandbox-client/node_modules/path-parse/index.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/picocolors/picocolors.browser.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/pify/index.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/index.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/lib/join-media.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/lib/load-content.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/lib/parse-statements.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/lib/process-content.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/lib/resolve-id.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/node_modules/postcss-value-parser/lib/index.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/node_modules/postcss-value-parser/lib/parse.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/node_modules/postcss-value-parser/lib/stringify.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/node_modules/postcss-value-parser/lib/unit.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss-import/node_modules/postcss-value-parser/lib/walk.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/at-rule.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/comment.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/container.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/css-syntax-error.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/declaration.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/input.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/lazy-result.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/list.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/map-generator.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/node.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/parse.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/parser.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/postcss.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/previous-map.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/processor.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/result.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/root.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/rule.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/stringifier.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/stringify.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/tokenize.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/vendor.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/warn-once.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/postcss/lib/warning.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/read-cache/index.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/index.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/async.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/caller.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/core.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/is-core.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/node-modules-paths.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/normalize-options.js","webpack:////Users/jasper.furniss/codesandbox-client/node_modules/resolve/lib/sync.js","webpack:///./node_modules/nanoid/non-secure/index.js","webpack:///./node_modules/postcss/lib/at-rule.js","webpack:///./node_modules/postcss/lib/comment.js","webpack:///./node_modules/postcss/lib/container.js","webpack:///./node_modules/postcss/lib/css-syntax-error.js","webpack:///./node_modules/postcss/lib/declaration.js","webpack:///./node_modules/postcss/lib/document.js","webpack:///./node_modules/postcss/lib/fromJSON.js","webpack:///./node_modules/postcss/lib/input.js","webpack:///./node_modules/postcss/lib/lazy-result.js","webpack:///./node_modules/postcss/lib/list.js","webpack:///./node_modules/postcss/lib/map-generator.js","webpack:///./node_modules/postcss/lib/no-work-result.js","webpack:///./node_modules/postcss/lib/node.js","webpack:///./node_modules/postcss/lib/parse.js","webpack:///./node_modules/postcss/lib/parser.js","webpack:///./node_modules/postcss/lib/postcss.js","webpack:///./node_modules/postcss/lib/previous-map.js","webpack:///./node_modules/postcss/lib/processor.js","webpack:///./node_modules/postcss/lib/result.js","webpack:///./node_modules/postcss/lib/root.js","webpack:///./node_modules/postcss/lib/rule.js","webpack:///./node_modules/postcss/lib/stringifier.js","webpack:///./node_modules/postcss/lib/stringify.js","webpack:///./node_modules/postcss/lib/symbols.js","webpack:///./node_modules/postcss/lib/tokenize.js","webpack:///./node_modules/postcss/lib/warn-once.js","webpack:///./node_modules/postcss/lib/warning.js"],"names":["isWindows","process","platform","splitWindowsRe","win32","parse","pathString","TypeError","filename","allParts","exec","slice","length","root","dir","base","ext","name","splitPathRe","posix","module","exports","x","String","create","isColorSupported","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","createColors","processFn","fn","P","opts","that","this","args","Array","arguments","i","resolve","reject","push","err","result","multiArgs","results","apply","pify","obj","Promise","exclude","ret","excludeMain","Object","keys","reduce","key","match","pattern","test","include","some","filter","all","path","postcss","joinMedia","resolveId","loadContent","processContent","parseStatements","parseStyles","styles","options","state","media","statements","then","stmts","promise","stmt","type","uri","atRule","node","sourceFile","source","input","file","dirname","paths","isArray","map","isAbsolute","resolved","forEach","messages","plugin","parent","skipDuplicates","importedFiles","load","content","trim","hashFiles","importedResult","concat","child","warn","loadImportContent","children","resolveImportId","imports","bundle","index","assign","cwd","plugins","addModulesDirectories","p","Error","before","raws","nodes","applyRaws","params","fullUri","join","mediaNode","insertBefore","undefined","append","applyMedia","applyStyles","parentMedia","childMedia","parentItem","childItem","readCache","valueParser","stringify","split","start","list","last","item","value","getPrev","prev","each","toString","parseImport","parseMedia","sugarss","runPostcss","parsers","from","parser","catch","parserList","extname","e","syntax","moduleDirectories","resolveModule","id","res","rej","resolveOpts","basedir","moduleDirectory","extensions","packageFilter","pkg","style","main","preserveSymlinks","indexOf","unshift","walk","ValueParser","prototype","cb","bubble","unit","openParentheses","charCodeAt","closeParentheses","singleQuote","doubleQuote","backslash","slash","comma","colon","star","next","quote","token","escape","escapePos","whitespacePos","tokens","pos","code","max","stack","balanced","after","sourceIndex","unclosed","pop","stringifyNode","custom","buf","customResult","minus","plus","dot","exp","EXP","dotted","sciPos","containsNumber","number","__esModule","default","_default","_Container","subClass","superClass","AtRule","defaults","_this","call","constructor","__proto__","_proto","_Container$prototype$","_len","_key","prepend","_Container$prototype$2","_len2","_key2","_Node","Comment","_declaration","_interopRequireDefault","_comment","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","n","_unsupportedIterableToArray","done","bind","arr","len","arr2","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Container","Constructor","protoProps","staticProps","callback","lastEach","indexes","postcssNode","s","replace","line","column","walkDecls","prop","RegExp","walkRules","selector","walkAtRules","walkComments","_i","_children","_step","normalize","_iterator","_step2","_iterator2","reverse","_step3","first","_iterator3","cleanRaws","keepBetween","_step4","_iterator4","exist","add","_step5","_iterator5","splice","insertAfter","_step6","_iterator6","removeChild","removeAll","_step7","_iterator7","replaceValues","decl","fast","every","condition","sample","cleanSource","_step8","_iterator8","_step9","_iterator9","_i2","text","get","_supportsColor","_chalk","_terminalHighlight","_wrapNativeSuper","Class","_cache","Map","Function","has","set","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","a","instance","sham","Proxy","Date","setPrototypeOf","getPrototypeOf","_Error","CssSyntaxError","message","reason","setMessage","captureStackTrace","self","ReferenceError","_assertThisInitialized","showSourceCode","color","_this2","css","stdout","lines","Math","end","min","maxWidth","mark","aside","gutter","spacing","Declaration","_path","_cssSyntaxError","_previousMap","sequence","Input","hasBOM","consumer","mapResolve","error","origin","originalPositionFor","sourceContentFor","sourceRoot","_mapGenerator","_stringify2","_result","_parse","isPromise","LazyResult","processor","stringified","processed","inline","warnings","sync","onFulfilled","onRejected","async","finally","onFinally","handleError","postcssVersion","postcssPlugin","console","asyncTick","run","processing","lastPlugin","str","stringifier","data","generate","string","separators","array","current","func","letter","space","_sourceMap","MapGenerator","mapOpts","isMap","previous","previousMaps","isInline","annotation","isSourcesContent","sourcesContent","withContent","clearAnnotation","setSourcesContent","already","relative","setSourceContent","applyPrevMaps","SourceMapConsumer","applySourceMap","isAnnotation","toBase64","Buffer","window","btoa","unescape","encodeURIComponent","addAnnotation","outputFile","eol","to","generateMap","generateString","sep","sourcePath","_this3","SourceMapGenerator","addMapping","generated","original","lastIndexOf","semicolon","_stringifier","_stringify","Node","positionBy","remove","clone","overrides","cloned","cloneNode","hasOwnProperty","j","cloneBefore","cloneAfter","replaceWith","_nodes","toJSON","fixed","raw","defaultType","between","positionInside","word","_parser","_input","_tokenize","_atRule","_root","_rule","Parser","spaces","createTokenizer","tokenizer","endOfFile","nextToken","freeSemicolon","comment","atrule","emptyRule","other","endFile","init","left","right","bracket","brackets","rule","back","unclosedBracket","unknownWord","spacesAndCommentsFromEnd","shift","spacesAndCommentsFromStart","precheckMissedSemicolon","toLowerCase","important","stringFrom","spacesFromEnd","cache","_type","checkMissedSemicolon","unnamedAtrule","open","afterName","unexpectedClose","unclosedBlock","ownSemicolon","clean","lastTokenType","doubleColon","founded","_processor","_vendor","_list","initializer","creator","transformer","version","processOpts","pluginOpts","vendor","_fs","PreviousMap","loadAnnotation","startWith","loadMap","consumerCache","substr","getAnnotationURL","sourceMapString","annotations","lastAnnotation","decodeInline","decodeURIComponent","lastMatch","atob","encoding","prevPath","existsSync","readFileSync","fromSourceMap","JSON","mappings","_mappings","_lazyResult","Processor","use","_process","_x","normalized","_warning","Result","warning","Root","ignore","toResult","_container","Rule","values","DEFAULT_RAW","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","emptyBody","commentLeft","commentRight","Stringifier","builder","body","rawValue","block","own","detect","rawCache","beforeAfter","method","toUpperCase","rawSemicolon","rawEmptyBody","rawIndent","parts","rawBeforeComment","rawBeforeDecl","rawBeforeRule","rawBeforeClose","rawBeforeOpen","rawColon","depth","step","nextLine","nextOffset","escaped","currentToken","valueOf","ignoreErrors","offset","buffer","returned","what","ignoreUnclosed","NEWLINE","FEED","CR","SPACE","TAB","OPEN_SQUARE","CLOSE_SQUARE","OPEN_CURLY","CLOSE_CURLY","COLON","SEMICOLON","CLOSE_PARENTHESES","controlChar","fromCharCode","OPEN_PARENTHESES","SINGLE_QUOTE","DOUBLE_QUOTE","BACKSLASH","RE_BAD_BRACKET","AT","RE_AT_END","lastIndex","SLASH","RE_HEX_ESCAPE","charAt","ASTERISK","RE_WORD_END","position","prefix","unprefixed","printed","Warning","opt","stat","fs","readFile","convert","isEncoding","stats","mtime","getTime","statSync","clear","core","isCore","caller","nodeModulesPaths","normalizeOptions","realpathFS","realpath","native","defaultIsFile","isFile","isFIFO","defaultIsDir","isDirectory","defaultRealpath","realpathErr","realPath","maybeRealpath","nextTick","packageIterator","absoluteStart","onfile","m","loadAsDirectory","d","realD","moduleError","loadAsFile","thePackage","loadAsFilePackage","exts","loadPackage","onpkg","loadpkg","unwrapErr","pkgdir","pkgfile","ex","jsonErr","pkg_","pathFilter","rfile","rel","r","onex","loadAsDirectoryPackage","fpkg","package","mainError","realStart","thunk","dirs","getPackageCandidates","processDirs","isdir","ondir","loadNodeModules","realN","origPrepareStackTrace","prepareStackTrace","_","getFileName","specifierIncluded","specifier","op","versionParts","cur","Number","ver","matchesRange","range","specifiers","versionIncluded","specifierValue","mod","getNodeModulesDirs","modules","parsed","aPath","moduleDir","request","realpathSync","defaultRealpathSync","maybeRealpathSync","loadAsFileSync","loadAsDirectorySync","loadNodeModulesSync","customAlphabet","alphabet","defaultSize","size","random","nanoid","super","proxyOf","registerAtRule","isClean","my","markDirty","getIterator","startsWith","toProxy","existIndex","rebuild","markDirtyUp","includes","addToError","registerParse","dependant","registerRule","registerRoot","pico","terminalHighlight","endLine","endColumn","Document","registerLazyResult","registerProcessor","fromJSON","json","inputs","ownInputs","inputHydrated","inputId","fileURLToPath","pathToFileURL","fromOffsetCache","sourceMapAvailable","Boolean","pathAvailable","fromOffset","col","url","lastLine","lineToIndex","prevIndex","l","mid","fromUrl","URL","mapFile","protocol","registerInput","TYPE_TO_CLASS_NAME","document","PLUGIN_PROPS","AtRuleExit","CommentExit","DeclarationExit","DocumentExit","Once","OnceExit","prepare","RootExit","RuleExit","NOT_VISITORS","getEvents","toStack","events","eventIndex","visitorIndex","visitors","cleanMarks","helpers","runAsync","listeners","event","hasListener","runOnRoot","prepareVisitors","visitTick","visitor","roots","subRoot","getAsyncError","walkSync","visitSync","visit","toStringTag","registerPostcss","inQuote","prevQuote","cssString","usesFileUrls","absolute","memoizedFileURLs","memoizedPaths","memoizedURLs","toUrl","mapping","cached","toFileUrl","fileURL","encodeURI","NoWorkResult","_css","_opts","_map","generatedCSS","generatedMap","rangeBy","stringRepresentation","endIndex","bookmark","foundSelf","emitInputs","inputsNextIndex","proxyCache","getProxyProcessor","SAFE_COMMENT_NEIGHBOR","empty","customProperty","getPosition","element","entries","findLastWithPosition","firstSpaces","warningPrinted","env","LANG","sections","comments","substring","loadFile"],"mappings":"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","file":"static/js/vendors~postcss-compiler~vue-style-compiler.49745dd34.chunk.js","sourcesContent":["'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","'use strict';\n\nvar processFn = function (fn, P, opts) {\n\treturn function () {\n\t\tvar that = this;\n\t\tvar args = new Array(arguments.length);\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\treturn new P(function (resolve, reject) {\n\t\t\targs.push(function (err, result) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else if (opts.multiArgs) {\n\t\t\t\t\tvar results = new Array(arguments.length - 1);\n\n\t\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\tresults[i - 1] = arguments[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(results);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfn.apply(that, args);\n\t\t});\n\t};\n};\n\nvar pify = module.exports = function (obj, P, opts) {\n\tif (typeof P !== 'function') {\n\t\topts = P;\n\t\tP = Promise;\n\t}\n\n\topts = opts || {};\n\topts.exclude = opts.exclude || [/.+Sync$/];\n\n\tvar filter = function (key) {\n\t\tvar match = function (pattern) {\n\t\t\treturn typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\t\t};\n\n\t\treturn opts.include ? opts.include.some(match) : !opts.exclude.some(match);\n\t};\n\n\tvar ret = typeof obj === 'function' ? function () {\n\t\tif (opts.excludeMain) {\n\t\t\treturn obj.apply(this, arguments);\n\t\t}\n\n\t\treturn processFn(obj, P, opts).apply(this, arguments);\n\t} : {};\n\n\treturn Object.keys(obj).reduce(function (ret, key) {\n\t\tvar x = obj[key];\n\n\t\tret[key] = typeof x === 'function' && filter(key) ? processFn(x, P, opts) : x;\n\n\t\treturn ret;\n\t}, ret);\n};\n\npify.all = pify;\n","\"use strict\"\n// builtin tooling\nconst path = require(\"path\")\n\n// external tooling\nconst postcss = require(\"postcss\")\n\n// internal tooling\nconst joinMedia = require(\"./lib/join-media\")\nconst resolveId = require(\"./lib/resolve-id\")\nconst loadContent = require(\"./lib/load-content\")\nconst processContent = require(\"./lib/process-content\")\nconst parseStatements = require(\"./lib/parse-statements\")\n\nfunction AtImport(options) {\n  options = Object.assign(\n    {\n      root: process.cwd(),\n      path: [],\n      skipDuplicates: true,\n      resolve: resolveId,\n      load: loadContent,\n      plugins: [],\n      addModulesDirectories: [],\n    },\n    options\n  )\n\n  options.root = path.resolve(options.root)\n\n  // convert string to an array of a single element\n  if (typeof options.path === \"string\") options.path = [options.path]\n\n  if (!Array.isArray(options.path)) options.path = []\n\n  options.path = options.path.map(p => path.resolve(options.root, p))\n\n  return function(styles, result) {\n    const state = {\n      importedFiles: {},\n      hashFiles: {},\n    }\n\n    if (styles.source && styles.source.input && styles.source.input.file) {\n      state.importedFiles[styles.source.input.file] = {}\n    }\n\n    if (options.plugins && !Array.isArray(options.plugins)) {\n      throw new Error(\"plugins option must be an array\")\n    }\n\n    return parseStyles(result, styles, options, state, []).then(bundle => {\n      applyRaws(bundle)\n      applyMedia(bundle)\n      applyStyles(bundle, styles)\n    })\n  }\n}\n\nfunction applyRaws(bundle) {\n  bundle.forEach((stmt, index) => {\n    if (index === 0) return\n\n    if (stmt.parent) {\n      const before = stmt.parent.node.raws.before\n      if (stmt.type === \"nodes\") stmt.nodes[0].raws.before = before\n      else stmt.node.raws.before = before\n    } else if (stmt.type === \"nodes\") {\n      stmt.nodes[0].raws.before = stmt.nodes[0].raws.before || \"\\n\"\n    }\n  })\n}\n\nfunction applyMedia(bundle) {\n  bundle.forEach(stmt => {\n    if (!stmt.media.length) return\n    if (stmt.type === \"import\") {\n      stmt.node.params = `${stmt.fullUri} ${stmt.media.join(\", \")}`\n    } else if (stmt.type === \"media\") stmt.node.params = stmt.media.join(\", \")\n    else {\n      const nodes = stmt.nodes\n      const parent = nodes[0].parent\n      const mediaNode = postcss.atRule({\n        name: \"media\",\n        params: stmt.media.join(\", \"),\n        source: parent.source,\n      })\n\n      parent.insertBefore(nodes[0], mediaNode)\n\n      // remove nodes\n      nodes.forEach(node => {\n        node.parent = undefined\n      })\n\n      // better output\n      nodes[0].raws.before = nodes[0].raws.before || \"\\n\"\n\n      // wrap new rules with media query\n      mediaNode.append(nodes)\n\n      stmt.type = \"media\"\n      stmt.node = mediaNode\n      delete stmt.nodes\n    }\n  })\n}\n\nfunction applyStyles(bundle, styles) {\n  styles.nodes = []\n\n  // Strip additional statements.\n  bundle.forEach(stmt => {\n    if (stmt.type === \"import\") {\n      stmt.node.parent = undefined\n      styles.append(stmt.node)\n    } else if (stmt.type === \"media\") {\n      stmt.node.parent = undefined\n      styles.append(stmt.node)\n    } else if (stmt.type === \"nodes\") {\n      stmt.nodes.forEach(node => {\n        node.parent = undefined\n        styles.append(node)\n      })\n    }\n  })\n}\n\nfunction parseStyles(result, styles, options, state, media) {\n  const statements = parseStatements(result, styles)\n\n  return Promise.resolve(statements)\n    .then(stmts => {\n      // process each statement in series\n      return stmts.reduce((promise, stmt) => {\n        return promise.then(() => {\n          stmt.media = joinMedia(media, stmt.media || [])\n\n          // skip protocol base uri (protocol://url) or protocol-relative\n          if (stmt.type !== \"import\" || /^(?:[a-z]+:)?\\/\\//i.test(stmt.uri)) {\n            return\n          }\n\n          if (options.filter && !options.filter(stmt.uri)) {\n            // rejected by filter\n            return\n          }\n\n          return resolveImportId(result, stmt, options, state)\n        })\n      }, Promise.resolve())\n    })\n    .then(() => {\n      const imports = []\n      const bundle = []\n\n      // squash statements and their children\n      statements.forEach(stmt => {\n        if (stmt.type === \"import\") {\n          if (stmt.children) {\n            stmt.children.forEach((child, index) => {\n              if (child.type === \"import\") imports.push(child)\n              else bundle.push(child)\n              // For better output\n              if (index === 0) child.parent = stmt\n            })\n          } else imports.push(stmt)\n        } else if (stmt.type === \"media\" || stmt.type === \"nodes\") {\n          bundle.push(stmt)\n        }\n      })\n\n      return imports.concat(bundle)\n    })\n}\n\nfunction resolveImportId(result, stmt, options, state) {\n  const atRule = stmt.node\n  let sourceFile\n  if (atRule.source && atRule.source.input && atRule.source.input.file) {\n    sourceFile = atRule.source.input.file\n  }\n  const base = sourceFile\n    ? path.dirname(atRule.source.input.file)\n    : options.root\n\n  return Promise.resolve(options.resolve(stmt.uri, base, options))\n    .then(paths => {\n      if (!Array.isArray(paths)) paths = [paths]\n      // Ensure that each path is absolute:\n      return Promise.all(\n        paths.map(file => {\n          return !path.isAbsolute(file) ? resolveId(file, base, options) : file\n        })\n      )\n    })\n    .then(resolved => {\n      // Add dependency messages:\n      resolved.forEach(file => {\n        result.messages.push({\n          type: \"dependency\",\n          plugin: \"postcss-import\",\n          file: file,\n          parent: sourceFile,\n        })\n      })\n\n      return Promise.all(\n        resolved.map(file => {\n          return loadImportContent(result, stmt, file, options, state)\n        })\n      )\n    })\n    .then(result => {\n      // Merge loaded statements\n      stmt.children = result.reduce((result, statements) => {\n        return statements ? result.concat(statements) : result\n      }, [])\n    })\n}\n\nfunction loadImportContent(result, stmt, filename, options, state) {\n  const atRule = stmt.node\n  const media = stmt.media\n  if (options.skipDuplicates) {\n    // skip files already imported at the same scope\n    if (state.importedFiles[filename] && state.importedFiles[filename][media]) {\n      return\n    }\n\n    // save imported files to skip them next time\n    if (!state.importedFiles[filename]) state.importedFiles[filename] = {}\n    state.importedFiles[filename][media] = true\n  }\n\n  return Promise.resolve(options.load(filename, options)).then(content => {\n    if (content.trim() === \"\") {\n      result.warn(`${filename} is empty`, { node: atRule })\n      return\n    }\n\n    // skip previous imported files not containing @import rules\n    if (state.hashFiles[content] && state.hashFiles[content][media]) return\n\n    return processContent(result, content, filename, options).then(\n      importedResult => {\n        const styles = importedResult.root\n        result.messages = result.messages.concat(importedResult.messages)\n\n        if (options.skipDuplicates) {\n          const hasImport = styles.some(child => {\n            return child.type === \"atrule\" && child.name === \"import\"\n          })\n          if (!hasImport) {\n            // save hash files to skip them next time\n            if (!state.hashFiles[content]) state.hashFiles[content] = {}\n            state.hashFiles[content][media] = true\n          }\n        }\n\n        // recursion: import @import from imported file\n        return parseStyles(result, styles, options, state, media)\n      }\n    )\n  })\n}\n\nmodule.exports = postcss.plugin(\"postcss-import\", AtImport)\n","\"use strict\"\n\nmodule.exports = function(parentMedia, childMedia) {\n  if (!parentMedia.length && childMedia.length) return childMedia\n  if (parentMedia.length && !childMedia.length) return parentMedia\n  if (!parentMedia.length && !childMedia.length) return []\n\n  const media = []\n\n  parentMedia.forEach(parentItem => {\n    childMedia.forEach(childItem => {\n      if (parentItem !== childItem) media.push(`${parentItem} and ${childItem}`)\n    })\n  })\n\n  return media\n}\n","\"use strict\"\n\nconst readCache = require(\"read-cache\")\n\nmodule.exports = filename => readCache(filename, \"utf-8\")\n","\"use strict\"\n\n// external tooling\nconst valueParser = require(\"postcss-value-parser\")\n\n// extended tooling\nconst stringify = valueParser.stringify\n\nfunction split(params, start) {\n  const list = []\n  const last = params.reduce((item, node, index) => {\n    if (index < start) return \"\"\n    if (node.type === \"div\" && node.value === \",\") {\n      list.push(item)\n      return \"\"\n    }\n    return item + stringify(node)\n  }, \"\")\n  list.push(last)\n  return list\n}\n\nmodule.exports = function(result, styles) {\n  const statements = []\n  let nodes = []\n\n  styles.each(node => {\n    let stmt\n    if (node.type === \"atrule\") {\n      if (node.name === \"import\") stmt = parseImport(result, node)\n      else if (node.name === \"media\") stmt = parseMedia(result, node)\n    }\n\n    if (stmt) {\n      if (nodes.length) {\n        statements.push({\n          type: \"nodes\",\n          nodes: nodes,\n          media: [],\n        })\n        nodes = []\n      }\n      statements.push(stmt)\n    } else nodes.push(node)\n  })\n\n  if (nodes.length) {\n    statements.push({\n      type: \"nodes\",\n      nodes: nodes,\n      media: [],\n    })\n  }\n\n  return statements\n}\n\nfunction parseMedia(result, atRule) {\n  const params = valueParser(atRule.params).nodes\n  return {\n    type: \"media\",\n    node: atRule,\n    media: split(params, 0),\n  }\n}\n\nfunction parseImport(result, atRule) {\n  let prev = getPrev(atRule)\n  if (prev) {\n    do {\n      if (\n        prev.type !== \"atrule\" ||\n        (prev.name !== \"import\" && prev.name !== \"charset\")\n      ) {\n        return result.warn(\n          \"@import must precede all other statements (besides @charset)\",\n          { node: atRule }\n        )\n      } else prev = getPrev(prev)\n    } while (prev)\n  }\n\n  if (atRule.nodes) {\n    return result.warn(\n      \"It looks like you didn't end your @import statement correctly. \" +\n        \"Child nodes are attached to it.\",\n      { node: atRule }\n    )\n  }\n\n  const params = valueParser(atRule.params).nodes\n  const stmt = {\n    type: \"import\",\n    node: atRule,\n    media: [],\n  }\n\n  // prettier-ignore\n  if (\n    !params.length ||\n    (\n      params[0].type !== \"string\" ||\n      !params[0].value\n    ) &&\n    (\n      params[0].type !== \"function\" ||\n      params[0].value !== \"url\" ||\n      !params[0].nodes.length ||\n      !params[0].nodes[0].value\n    )\n  ) {\n    return result.warn(`Unable to find uri in '${  atRule.toString()  }'`, {\n      node: atRule,\n    })\n  }\n\n  if (params[0].type === \"string\") stmt.uri = params[0].value\n  else stmt.uri = params[0].nodes[0].value\n  stmt.fullUri = stringify(params[0])\n\n  if (params.length > 2) {\n    if (params[1].type !== \"space\") {\n      return result.warn(\"Invalid import media statement\", { node: atRule })\n    }\n    stmt.media = split(params, 2)\n  }\n\n  return stmt\n}\n\nfunction getPrev(item) {\n  let prev = item.prev()\n  while (prev && prev.type === \"comment\") {\n    prev = prev.prev()\n  }\n  return prev\n}\n","\"use strict\"\n\n// builtin tooling\nconst path = require(\"path\")\n\n// external tooling\nconst postcss = require(\"postcss\")\n\n// placeholder tooling\nlet sugarss\n\nmodule.exports = function processContent(result, content, filename, options) {\n  const plugins = options.plugins\n  const ext = path.extname(filename)\n\n  const parserList = []\n\n  // SugarSS support:\n  if (ext === \".sss\") {\n    if (!sugarss) {\n      try {\n        sugarss = require(\"sugarss\")\n      } catch (e) {\n        // Ignore\n      }\n    }\n    if (sugarss) return runPostcss(content, filename, plugins, [sugarss])\n  }\n\n  // Syntax support:\n  if (result.opts.syntax && result.opts.syntax.parse) {\n    parserList.push(result.opts.syntax.parse)\n  }\n\n  // Parser support:\n  if (result.opts.parser) parserList.push(result.opts.parser)\n  // Try the default as a last resort:\n  parserList.push(null)\n\n  return runPostcss(content, filename, plugins, parserList)\n}\n\nfunction runPostcss(content, filename, plugins, parsers, index) {\n  if (!index) index = 0\n  return postcss(plugins)\n    .process(content, {\n      from: filename,\n      parser: parsers[index],\n    })\n    .catch(err => {\n      // If there's an error, try the next parser\n      index++\n      // If there are no parsers left, throw it\n      if (index === parsers.length) throw err\n      return runPostcss(content, filename, plugins, parsers, index)\n    })\n}\n","\"use strict\"\n\n// external tooling\nconst resolve = require(\"resolve\")\n\nconst moduleDirectories = [\"web_modules\", \"node_modules\"]\n\nfunction resolveModule(id, opts) {\n  return new Promise((res, rej) => {\n    resolve(id, opts, (err, path) => (err ? rej(err) : res(path)))\n  })\n}\n\nmodule.exports = function(id, base, options) {\n  const paths = options.path\n\n  const resolveOpts = {\n    basedir: base,\n    moduleDirectory: moduleDirectories.concat(options.addModulesDirectories),\n    paths: paths,\n    extensions: [\".css\"],\n    packageFilter: function processPackage(pkg) {\n      if (pkg.style) pkg.main = pkg.style\n      else if (!pkg.main || !/\\.css$/.test(pkg.main)) pkg.main = \"index.css\"\n      return pkg\n    },\n    preserveSymlinks: false,\n  }\n\n  return resolveModule(`./${id}`, resolveOpts)\n    .catch(() => resolveModule(id, resolveOpts))\n    .catch(() => {\n      if (paths.indexOf(base) === -1) paths.unshift(base)\n\n      throw new Error(\n        `Failed to find '${id}'\n  in [\n    ${paths.join(\",\\n        \")}\n  ]`\n      )\n    })\n}\n","var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n","var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next, quote, prev, token, escape, escapePos, whitespacePos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash && value.charCodeAt(next + 1) !== star)\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      token = {\n        type: \"comment\",\n        sourceIndex: pos\n      };\n\n      next = value.indexOf(\"*/\", pos);\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(pos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (pos !== whitespacePos + 1) {\n          token.nodes = [\n            {\n              type: \"word\",\n              sourceIndex: pos,\n              value: value.slice(pos, whitespacePos + 1)\n            }\n          ];\n        } else {\n          token.nodes = [];\n        }\n        if (token.unclosed && whitespacePos + 1 !== next) {\n          token.after = \"\";\n          token.nodes.push({\n            type: \"space\",\n            sourceIndex: whitespacePos + 1,\n            value: value.slice(whitespacePos + 1, next)\n          });\n        } else {\n          token.after = value.slice(whitespacePos + 1, next);\n        }\n        pos = next + 1;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      after = \"\";\n      balanced -= 1;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n  }\n\n  return stack[0].nodes;\n};\n","function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n","var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var dotted = false;\n  var sciPos = -1;\n  var containsNumber = false;\n  var code;\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code >= 48 && code <= 57) {\n      containsNumber = true;\n    } else if (code === exp || code === EXP) {\n      if (sciPos > -1) {\n        break;\n      }\n      sciPos = pos;\n    } else if (code === dot) {\n      if (dotted) {\n        break;\n      }\n      dotted = true;\n    } else if (code === plus || code === minus) {\n      if (pos !== 0) {\n        break;\n      }\n    } else {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  if (sciPos + 1 === pos) pos--;\n\n  return containsNumber\n    ? {\n        number: value.slice(0, pos),\n        unit: value.slice(pos)\n      }\n    : false;\n};\n","module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents an at-rule.\n *\n * If it’s followed in the CSS by a {} block, this node will have\n * a nodes property representing its children.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('@charset \"UTF-8\"; @media print {}')\n *\n * const charset = root.first\n * charset.type  //=> 'atrule'\n * charset.nodes //=> undefined\n *\n * const media = root.last\n * media.nodes   //=> []\n */\nvar AtRule = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(AtRule, _Container);\n\n  function AtRule(defaults) {\n    var _this;\n\n    _this = _Container.call(this, defaults) || this;\n    _this.type = 'atrule';\n    return _this;\n  }\n\n  var _proto = AtRule.prototype;\n\n  _proto.append = function append() {\n    var _Container$prototype$;\n\n    if (!this.nodes) this.nodes = [];\n\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));\n  };\n\n  _proto.prepend = function prepend() {\n    var _Container$prototype$2;\n\n    if (!this.nodes) this.nodes = [];\n\n    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      children[_key2] = arguments[_key2];\n    }\n\n    return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));\n  }\n  /**\n   * @memberof AtRule#\n   * @member {string} name The at-rule’s name immediately follows the `@`.\n   *\n   * @example\n   * const root  = postcss.parse('@media print {}')\n   * media.name //=> 'media'\n   * const media = root.first\n   */\n\n  /**\n   * @memberof AtRule#\n   * @member {string} params The at-rule’s parameters, the values\n   *                         that follow the at-rule’s name but precede\n   *                         any {} block.\n   *\n   * @example\n   * const root  = postcss.parse('@media print, screen {}')\n   * const media = root.first\n   * media.params //=> 'print, screen'\n   */\n\n  /**\n   * @memberof AtRule#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                        node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains true if the last child has\n   *   an (optional) semicolon.\n   * * `afterName`: the space between the at-rule name and its parameters.\n   *\n   * PostCSS cleans at-rule parameters from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('  @media\\nprint {\\n}')\n   * root.first.first.raws //=> { before: '  ',\n   *                       //     between: ' ',\n   *                       //     afterName: '\\n',\n   *                       //     after: '\\n' }\n   */\n  ;\n\n  return AtRule;\n}(_container.default);\n\nvar _default = AtRule;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0LXJ1bGUuZXM2Il0sIm5hbWVzIjpbIkF0UnVsZSIsImRlZmF1bHRzIiwidHlwZSIsImFwcGVuZCIsIm5vZGVzIiwiY2hpbGRyZW4iLCJwcmVwZW5kIiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBa0JNQSxNOzs7QUFDSixrQkFBYUMsUUFBYixFQUF1QjtBQUFBOztBQUNyQixrQ0FBTUEsUUFBTjtBQUNBLFVBQUtDLElBQUwsR0FBWSxRQUFaO0FBRnFCO0FBR3RCOzs7O1NBRURDLE0sR0FBQSxrQkFBcUI7QUFBQTs7QUFDbkIsUUFBSSxDQUFDLEtBQUtDLEtBQVYsRUFBaUIsS0FBS0EsS0FBTCxHQUFhLEVBQWI7O0FBREUsc0NBQVZDLFFBQVU7QUFBVkEsTUFBQUEsUUFBVTtBQUFBOztBQUVuQix5REFBYUYsTUFBYixrREFBdUJFLFFBQXZCO0FBQ0QsRzs7U0FFREMsTyxHQUFBLG1CQUFzQjtBQUFBOztBQUNwQixRQUFJLENBQUMsS0FBS0YsS0FBVixFQUFpQixLQUFLQSxLQUFMLEdBQWEsRUFBYjs7QUFERyx1Q0FBVkMsUUFBVTtBQUFWQSxNQUFBQSxRQUFVO0FBQUE7O0FBRXBCLDBEQUFhQyxPQUFiLG1EQUF3QkQsUUFBeEI7QUFDRDtBQUVEOzs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBdENtQkUsa0I7O2VBdUVOUCxNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcidcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFuIGF0LXJ1bGUuXG4gKlxuICogSWYgaXTigJlzIGZvbGxvd2VkIGluIHRoZSBDU1MgYnkgYSB7fSBibG9jaywgdGhpcyBub2RlIHdpbGwgaGF2ZVxuICogYSBub2RlcyBwcm9wZXJ0eSByZXByZXNlbnRpbmcgaXRzIGNoaWxkcmVuLlxuICpcbiAqIEBleHRlbmRzIENvbnRhaW5lclxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnQGNoYXJzZXQgXCJVVEYtOFwiOyBAbWVkaWEgcHJpbnQge30nKVxuICpcbiAqIGNvbnN0IGNoYXJzZXQgPSByb290LmZpcnN0XG4gKiBjaGFyc2V0LnR5cGUgIC8vPT4gJ2F0cnVsZSdcbiAqIGNoYXJzZXQubm9kZXMgLy89PiB1bmRlZmluZWRcbiAqXG4gKiBjb25zdCBtZWRpYSA9IHJvb3QubGFzdFxuICogbWVkaWEubm9kZXMgICAvLz0+IFtdXG4gKi9cbmNsYXNzIEF0UnVsZSBleHRlbmRzIENvbnRhaW5lciB7XG4gIGNvbnN0cnVjdG9yIChkZWZhdWx0cykge1xuICAgIHN1cGVyKGRlZmF1bHRzKVxuICAgIHRoaXMudHlwZSA9ICdhdHJ1bGUnXG4gIH1cblxuICBhcHBlbmQgKC4uLmNoaWxkcmVuKSB7XG4gICAgaWYgKCF0aGlzLm5vZGVzKSB0aGlzLm5vZGVzID0gW11cbiAgICByZXR1cm4gc3VwZXIuYXBwZW5kKC4uLmNoaWxkcmVuKVxuICB9XG5cbiAgcHJlcGVuZCAoLi4uY2hpbGRyZW4pIHtcbiAgICBpZiAoIXRoaXMubm9kZXMpIHRoaXMubm9kZXMgPSBbXVxuICAgIHJldHVybiBzdXBlci5wcmVwZW5kKC4uLmNoaWxkcmVuKVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBBdFJ1bGUjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gbmFtZSBUaGUgYXQtcnVsZeKAmXMgbmFtZSBpbW1lZGlhdGVseSBmb2xsb3dzIHRoZSBgQGAuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgID0gcG9zdGNzcy5wYXJzZSgnQG1lZGlhIHByaW50IHt9JylcbiAgICogbWVkaWEubmFtZSAvLz0+ICdtZWRpYSdcbiAgICogY29uc3QgbWVkaWEgPSByb290LmZpcnN0XG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgQXRSdWxlI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHBhcmFtcyBUaGUgYXQtcnVsZeKAmXMgcGFyYW1ldGVycywgdGhlIHZhbHVlc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICB0aGF0IGZvbGxvdyB0aGUgYXQtcnVsZeKAmXMgbmFtZSBidXQgcHJlY2VkZVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICBhbnkge30gYmxvY2suXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgID0gcG9zdGNzcy5wYXJzZSgnQG1lZGlhIHByaW50LCBzY3JlZW4ge30nKVxuICAgKiBjb25zdCBtZWRpYSA9IHJvb3QuZmlyc3RcbiAgICogbWVkaWEucGFyYW1zIC8vPT4gJ3ByaW50LCBzY3JlZW4nXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgQXRSdWxlI1xuICAgKiBAbWVtYmVyIHtvYmplY3R9IHJhd3MgSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAqXG4gICAqIEV2ZXJ5IHBhcnNlciBzYXZlcyBpdHMgb3duIHByb3BlcnRpZXMsXG4gICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAqXG4gICAqICogYGJlZm9yZWA6IHRoZSBzcGFjZSBzeW1ib2xzIGJlZm9yZSB0aGUgbm9kZS4gSXQgYWxzbyBzdG9yZXMgYCpgXG4gICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgKiAqIGBhZnRlcmA6IHRoZSBzcGFjZSBzeW1ib2xzIGFmdGVyIHRoZSBsYXN0IGNoaWxkIG9mIHRoZSBub2RlXG4gICAqICAgdG8gdGhlIGVuZCBvZiB0aGUgbm9kZS5cbiAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgKiAgIGZvciBkZWNsYXJhdGlvbnMsIHNlbGVjdG9yIGFuZCBge2AgZm9yIHJ1bGVzLCBvciBsYXN0IHBhcmFtZXRlclxuICAgKiAgIGFuZCBge2AgZm9yIGF0LXJ1bGVzLlxuICAgKiAqIGBzZW1pY29sb25gOiBjb250YWlucyB0cnVlIGlmIHRoZSBsYXN0IGNoaWxkIGhhc1xuICAgKiAgIGFuIChvcHRpb25hbCkgc2VtaWNvbG9uLlxuICAgKiAqIGBhZnRlck5hbWVgOiB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgYXQtcnVsZSBuYW1lIGFuZCBpdHMgcGFyYW1ldGVycy5cbiAgICpcbiAgICogUG9zdENTUyBjbGVhbnMgYXQtcnVsZSBwYXJhbWV0ZXJzIGZyb20gY29tbWVudHMgYW5kIGV4dHJhIHNwYWNlcyxcbiAgICogYnV0IGl0IHN0b3JlcyBvcmlnaW4gY29udGVudCBpbiByYXdzIHByb3BlcnRpZXMuXG4gICAqIEFzIHN1Y2gsIGlmIHlvdSBkb27igJl0IGNoYW5nZSBhIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZSxcbiAgICogUG9zdENTUyB3aWxsIHVzZSB0aGUgcmF3IHZhbHVlIHdpdGggY29tbWVudHMuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCcgIEBtZWRpYVxcbnByaW50IHtcXG59JylcbiAgICogcm9vdC5maXJzdC5maXJzdC5yYXdzIC8vPT4geyBiZWZvcmU6ICcgICcsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYmV0d2VlbjogJyAnLFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGFmdGVyTmFtZTogJ1xcbicsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYWZ0ZXI6ICdcXG4nIH1cbiAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IEF0UnVsZVxuIl0sImZpbGUiOiJhdC1ydWxlLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a comment between declarations or statements (rule and at-rules).\n *\n * Comments inside selectors, at-rule parameters, or declaration values\n * will be stored in the `raws` properties explained above.\n *\n * @extends Node\n */\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n\n  function Comment(defaults) {\n    var _this;\n\n    _this = _Node.call(this, defaults) || this;\n    _this.type = 'comment';\n    return _this;\n  }\n  /**\n   * @memberof Comment#\n   * @member {string} text The comment’s text.\n   */\n\n  /**\n   * @memberof Comment#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text.\n   */\n\n\n  return Comment;\n}(_node.default);\n\nvar _default = Comment;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuZXM2Il0sIm5hbWVzIjpbIkNvbW1lbnQiLCJkZWZhdWx0cyIsInR5cGUiLCJOb2RlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFQTs7Ozs7Ozs7SUFRTUEsTzs7O0FBQ0osbUJBQWFDLFFBQWIsRUFBdUI7QUFBQTs7QUFDckIsNkJBQU1BLFFBQU47QUFDQSxVQUFLQyxJQUFMLEdBQVksU0FBWjtBQUZxQjtBQUd0QjtBQUVEOzs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7RUFYb0JDLGE7O2VBeUJQSCxPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGUgZnJvbSAnLi9ub2RlJ1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBjb21tZW50IGJldHdlZW4gZGVjbGFyYXRpb25zIG9yIHN0YXRlbWVudHMgKHJ1bGUgYW5kIGF0LXJ1bGVzKS5cbiAqXG4gKiBDb21tZW50cyBpbnNpZGUgc2VsZWN0b3JzLCBhdC1ydWxlIHBhcmFtZXRlcnMsIG9yIGRlY2xhcmF0aW9uIHZhbHVlc1xuICogd2lsbCBiZSBzdG9yZWQgaW4gdGhlIGByYXdzYCBwcm9wZXJ0aWVzIGV4cGxhaW5lZCBhYm92ZS5cbiAqXG4gKiBAZXh0ZW5kcyBOb2RlXG4gKi9cbmNsYXNzIENvbW1lbnQgZXh0ZW5kcyBOb2RlIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ2NvbW1lbnQnXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIENvbW1lbnQjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gdGV4dCBUaGUgY29tbWVudOKAmXMgdGV4dC5cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBDb21tZW50I1xuICAgKiBAbWVtYmVyIHtvYmplY3R9IHJhd3MgSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICBub2RlIHN0cmluZyBhcyBpdCB3YXMgaW4gdGhlIG9yaWdpbiBpbnB1dC5cbiAgICpcbiAgICogRXZlcnkgcGFyc2VyIHNhdmVzIGl0cyBvd24gcHJvcGVydGllcyxcbiAgICogYnV0IHRoZSBkZWZhdWx0IENTUyBwYXJzZXIgdXNlczpcbiAgICpcbiAgICogKiBgYmVmb3JlYDogdGhlIHNwYWNlIHN5bWJvbHMgYmVmb3JlIHRoZSBub2RlLlxuICAgKiAqIGBsZWZ0YDogdGhlIHNwYWNlIHN5bWJvbHMgYmV0d2VlbiBgLypgIGFuZCB0aGUgY29tbWVudOKAmXMgdGV4dC5cbiAgICogKiBgcmlnaHRgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZXR3ZWVuIHRoZSBjb21tZW504oCZcyB0ZXh0LlxuICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29tbWVudFxuIl0sImZpbGUiOiJjb21tZW50LmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _declaration = _interopRequireDefault(require(\"./declaration\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction cleanSource(nodes) {\n  return nodes.map(function (i) {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i;\n  });\n}\n/**\n * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes\n * inherit some common methods to help work with their children.\n *\n * Note that all containers can store any content. If you write a rule inside\n * a rule, PostCSS will parse it.\n *\n * @extends Node\n * @abstract\n */\n\n\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n\n  function Container() {\n    return _Node.apply(this, arguments) || this;\n  }\n\n  var _proto = Container.prototype;\n\n  _proto.push = function push(child) {\n    child.parent = this;\n    this.nodes.push(child);\n    return this;\n  }\n  /**\n   * Iterates through the container’s immediate children,\n   * calling `callback` for each child.\n   *\n   * Returning `false` in the callback will break iteration.\n   *\n   * This method only iterates through the container’s immediate children.\n   * If you need to recursively iterate through all the container’s descendant\n   * nodes, use {@link Container#walk}.\n   *\n   * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe\n   * if you are mutating the array of child nodes during iteration.\n   * PostCSS will adjust the current index to match the mutations.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black; z-index: 1 }')\n   * const rule = root.first\n   *\n   * for (const decl of rule.nodes) {\n   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n   *   // Cycle will be infinite, because cloneBefore moves the current node\n   *   // to the next index\n   * }\n   *\n   * rule.each(decl => {\n   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })\n   *   // Will be executed only for color and z-index\n   * })\n   */\n  ;\n\n  _proto.each = function each(callback) {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n    this.lastEach += 1;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n    if (!this.nodes) return undefined;\n    var index, result;\n\n    while (this.indexes[id] < this.nodes.length) {\n      index = this.indexes[id];\n      result = callback(this.nodes[index], index);\n      if (result === false) break;\n      this.indexes[id] += 1;\n    }\n\n    delete this.indexes[id];\n    return result;\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each node.\n   *\n   * Like container.each(), this method is safe to use\n   * if you are mutating arrays during iteration.\n   *\n   * If you only need to iterate through the container’s immediate children,\n   * use {@link Container#each}.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walk(node => {\n   *   // Traverses all descendant nodes.\n   * })\n   */\n  ;\n\n  _proto.walk = function walk(callback) {\n    return this.each(function (child, i) {\n      var result;\n\n      try {\n        result = callback(child, i);\n      } catch (e) {\n        e.postcssNode = child;\n\n        if (e.stack && child.source && /\\n\\s{4}at /.test(e.stack)) {\n          var s = child.source;\n          e.stack = e.stack.replace(/\\n\\s{4}at /, \"$&\" + s.input.from + \":\" + s.start.line + \":\" + s.start.column + \"$&\");\n        }\n\n        throw e;\n      }\n\n      if (result !== false && child.walk) {\n        result = child.walk(callback);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each declaration node.\n   *\n   * If you pass a filter, iteration will only happen over declarations\n   * with matching properties.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [prop]   String or regular expression\n   *                                 to filter declarations by property name.\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkDecls(decl => {\n   *   checkPropertySupport(decl.prop)\n   * })\n   *\n   * root.walkDecls('border-radius', decl => {\n   *   decl.remove()\n   * })\n   *\n   * root.walkDecls(/^background/, decl => {\n   *   decl.value = takeFirstColorFromGradient(decl.value)\n   * })\n   */\n  ;\n\n  _proto.walkDecls = function walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk(function (child, i) {\n        if (child.type === 'decl') {\n          return callback(child, i);\n        }\n      });\n    }\n\n    if (prop instanceof RegExp) {\n      return this.walk(function (child, i) {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i);\n        }\n      });\n    }\n\n    return this.walk(function (child, i) {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each rule node.\n   *\n   * If you pass a filter, iteration will only happen over rules\n   * with matching selectors.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [selector] String or regular expression\n   *                                   to filter rules by selector.\n   * @param {childIterator} callback   Iterator receives each node and index.\n   *\n   * @return {false|undefined} returns `false` if iteration was broke.\n   *\n   * @example\n   * const selectors = []\n   * root.walkRules(rule => {\n   *   selectors.push(rule.selector)\n   * })\n   * console.log(`Your CSS uses ${ selectors.length } selectors`)\n   */\n  ;\n\n  _proto.walkRules = function walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n      return this.walk(function (child, i) {\n        if (child.type === 'rule') {\n          return callback(child, i);\n        }\n      });\n    }\n\n    if (selector instanceof RegExp) {\n      return this.walk(function (child, i) {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i);\n        }\n      });\n    }\n\n    return this.walk(function (child, i) {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each at-rule node.\n   *\n   * If you pass a filter, iteration will only happen over at-rules\n   * that have matching names.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {string|RegExp} [name]   String or regular expression\n   *                                 to filter at-rules by name.\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkAtRules(rule => {\n   *   if (isOld(rule.name)) rule.remove()\n   * })\n   *\n   * let first = false\n   * root.walkAtRules('charset', rule => {\n   *   if (!first) {\n   *     first = true\n   *   } else {\n   *     rule.remove()\n   *   }\n   * })\n   */\n  ;\n\n  _proto.walkAtRules = function walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk(function (child, i) {\n        if (child.type === 'atrule') {\n          return callback(child, i);\n        }\n      });\n    }\n\n    if (name instanceof RegExp) {\n      return this.walk(function (child, i) {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i);\n        }\n      });\n    }\n\n    return this.walk(function (child, i) {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Traverses the container’s descendant nodes, calling callback\n   * for each comment node.\n   *\n   * Like {@link Container#each}, this method is safe\n   * to use if you are mutating arrays during iteration.\n   *\n   * @param {childIterator} callback Iterator receives each node and index.\n   *\n   * @return {false|undefined} Returns `false` if iteration was broke.\n   *\n   * @example\n   * root.walkComments(comment => {\n   *   comment.remove()\n   * })\n   */\n  ;\n\n  _proto.walkComments = function walkComments(callback) {\n    return this.walk(function (child, i) {\n      if (child.type === 'comment') {\n        return callback(child, i);\n      }\n    });\n  }\n  /**\n   * Inserts new nodes to the end of the container.\n   *\n   * @param {...(Node|object|string|Node[])} children New nodes.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n   * rule.append(decl1, decl2)\n   *\n   * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n   * root.append({ selector: 'a' })                       // rule\n   * rule.append({ prop: 'color', value: 'black' })       // declaration\n   * rule.append({ text: 'Comment' })                     // comment\n   *\n   * root.append('a {}')\n   * root.first.append('color: black; z-index: 1')\n   */\n  ;\n\n  _proto.append = function append() {\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    for (var _i = 0, _children = children; _i < _children.length; _i++) {\n      var child = _children[_i];\n      var nodes = this.normalize(child, this.last);\n\n      for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {\n        var node = _step.value;\n        this.nodes.push(node);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Inserts new nodes to the start of the container.\n   *\n   * @param {...(Node|object|string|Node[])} children New nodes.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })\n   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })\n   * rule.prepend(decl1, decl2)\n   *\n   * root.append({ name: 'charset', params: '\"UTF-8\"' })  // at-rule\n   * root.append({ selector: 'a' })                       // rule\n   * rule.append({ prop: 'color', value: 'black' })       // declaration\n   * rule.append({ text: 'Comment' })                     // comment\n   *\n   * root.append('a {}')\n   * root.first.append('color: black; z-index: 1')\n   */\n  ;\n\n  _proto.prepend = function prepend() {\n    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      children[_key2] = arguments[_key2];\n    }\n\n    children = children.reverse();\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(children), _step2; !(_step2 = _iterator2()).done;) {\n      var child = _step2.value;\n      var nodes = this.normalize(child, this.first, 'prepend').reverse();\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(nodes), _step3; !(_step3 = _iterator3()).done;) {\n        var node = _step3.value;\n        this.nodes.unshift(node);\n      }\n\n      for (var id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n\n    return this;\n  };\n\n  _proto.cleanRaws = function cleanRaws(keepBetween) {\n    _Node.prototype.cleanRaws.call(this, keepBetween);\n\n    if (this.nodes) {\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this.nodes), _step4; !(_step4 = _iterator4()).done;) {\n        var node = _step4.value;\n        node.cleanRaws(keepBetween);\n      }\n    }\n  }\n  /**\n   * Insert new node before old node within the container.\n   *\n   * @param {Node|number} exist             Child or child’s index.\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))\n   */\n  ;\n\n  _proto.insertBefore = function insertBefore(exist, add) {\n    exist = this.index(exist);\n    var type = exist === 0 ? 'prepend' : false;\n    var nodes = this.normalize(add, this.nodes[exist], type).reverse();\n\n    for (var _iterator5 = _createForOfIteratorHelperLoose(nodes), _step5; !(_step5 = _iterator5()).done;) {\n      var node = _step5.value;\n      this.nodes.splice(exist, 0, node);\n    }\n\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Insert new node after old node within the container.\n   *\n   * @param {Node|number} exist             Child or child’s index.\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   */\n  ;\n\n  _proto.insertAfter = function insertAfter(exist, add) {\n    exist = this.index(exist);\n    var nodes = this.normalize(add, this.nodes[exist]).reverse();\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose(nodes), _step6; !(_step6 = _iterator6()).done;) {\n      var node = _step6.value;\n      this.nodes.splice(exist + 1, 0, node);\n    }\n\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Removes node from the container and cleans the parent properties\n   * from the node and its children.\n   *\n   * @param {Node|number} child Child or child’s index.\n   *\n   * @return {Node} This node for methods chain\n   *\n   * @example\n   * rule.nodes.length  //=> 5\n   * rule.removeChild(decl)\n   * rule.nodes.length  //=> 4\n   * decl.parent        //=> undefined\n   */\n  ;\n\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.nodes[child].parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Removes all children from the container\n   * and cleans their parent properties.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * rule.removeAll()\n   * rule.nodes.length //=> 0\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    for (var _iterator7 = _createForOfIteratorHelperLoose(this.nodes), _step7; !(_step7 = _iterator7()).done;) {\n      var node = _step7.value;\n      node.parent = undefined;\n    }\n\n    this.nodes = [];\n    return this;\n  }\n  /**\n   * Passes all declaration values within the container that match pattern\n   * through callback, replacing those values with the returned result\n   * of callback.\n   *\n   * This method is useful if you are using a custom unit or function\n   * and need to iterate through all values.\n   *\n   * @param {string|RegExp} pattern      Replace pattern.\n   * @param {object} opts                Options to speed up the search.\n   * @param {string|string[]} opts.props An array of property names.\n   * @param {string} opts.fast           String that’s used to narrow down\n   *                                     values and speed up the regexp search.\n   * @param {function|string} callback   String to replace pattern or callback\n   *                                     that returns a new value. The callback\n   *                                     will receive the same arguments\n   *                                     as those passed to a function parameter\n   *                                     of `String#replace`.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * root.replaceValues(/\\d+rem/, { fast: 'rem' }, string => {\n   *   return 15 * parseInt(string) + 'px'\n   * })\n   */\n  ;\n\n  _proto.replaceValues = function replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n\n    this.walkDecls(function (decl) {\n      if (opts.props && opts.props.indexOf(decl.prop) === -1) return;\n      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;\n      decl.value = decl.value.replace(pattern, callback);\n    });\n    return this;\n  }\n  /**\n   * Returns `true` if callback returns `true`\n   * for all of the container’s children.\n   *\n   * @param {childCondition} condition Iterator returns true or false.\n   *\n   * @return {boolean} Is every child pass condition.\n   *\n   * @example\n   * const noPrefixes = rule.every(i => i.prop[0] !== '-')\n   */\n  ;\n\n  _proto.every = function every(condition) {\n    return this.nodes.every(condition);\n  }\n  /**\n   * Returns `true` if callback returns `true` for (at least) one\n   * of the container’s children.\n   *\n   * @param {childCondition} condition Iterator returns true or false.\n   *\n   * @return {boolean} Is some child pass condition.\n   *\n   * @example\n   * const hasPrefix = rule.some(i => i.prop[0] === '-')\n   */\n  ;\n\n  _proto.some = function some(condition) {\n    return this.nodes.some(condition);\n  }\n  /**\n   * Returns a `child`’s index within the {@link Container#nodes} array.\n   *\n   * @param {Node} child Child of the current container.\n   *\n   * @return {number} Child index.\n   *\n   * @example\n   * rule.index( rule.nodes[2] ) //=> 2\n   */\n  ;\n\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n\n    return this.nodes.indexOf(child);\n  }\n  /**\n   * The container’s first child.\n   *\n   * @type {Node}\n   *\n   * @example\n   * rule.first === rules.nodes[0]\n   */\n  ;\n\n  _proto.normalize = function normalize(nodes, sample) {\n    var _this = this;\n\n    if (typeof nodes === 'string') {\n      var parse = require('./parse');\n\n      nodes = cleanSource(parse(nodes).nodes);\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n\n      for (var _iterator8 = _createForOfIteratorHelperLoose(nodes), _step8; !(_step8 = _iterator8()).done;) {\n        var i = _step8.value;\n        if (i.parent) i.parent.removeChild(i, 'ignore');\n      }\n    } else if (nodes.type === 'root') {\n      nodes = nodes.nodes.slice(0);\n\n      for (var _iterator9 = _createForOfIteratorHelperLoose(nodes), _step9; !(_step9 = _iterator9()).done;) {\n        var _i2 = _step9.value;\n        if (_i2.parent) _i2.parent.removeChild(_i2, 'ignore');\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation');\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value);\n      }\n\n      nodes = [new _declaration.default(nodes)];\n    } else if (nodes.selector) {\n      var Rule = require('./rule');\n\n      nodes = [new Rule(nodes)];\n    } else if (nodes.name) {\n      var AtRule = require('./at-rule');\n\n      nodes = [new AtRule(nodes)];\n    } else if (nodes.text) {\n      nodes = [new _comment.default(nodes)];\n    } else {\n      throw new Error('Unknown node type in node creation');\n    }\n\n    var processed = nodes.map(function (i) {\n      if (i.parent) i.parent.removeChild(i);\n\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/[^\\s]/g, '');\n        }\n      }\n\n      i.parent = _this;\n      return i;\n    });\n    return processed;\n  }\n  /**\n   * @memberof Container#\n   * @member {Node[]} nodes An array containing the container’s children.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * root.nodes.length           //=> 1\n   * root.nodes[0].selector      //=> 'a'\n   * root.nodes[0].nodes[0].prop //=> 'color'\n   */\n  ;\n\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      if (!this.nodes) return undefined;\n      return this.nodes[0];\n    }\n    /**\n     * The container’s last child.\n     *\n     * @type {Node}\n     *\n     * @example\n     * rule.last === rule.nodes[rule.nodes.length - 1]\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      if (!this.nodes) return undefined;\n      return this.nodes[this.nodes.length - 1];\n    }\n  }]);\n\n  return Container;\n}(_node.default);\n\nvar _default = Container;\n/**\n * @callback childCondition\n * @param {Node} node    Container child.\n * @param {number} index Child index.\n * @param {Node[]} nodes All container children.\n * @return {boolean}\n */\n\n/**\n * @callback childIterator\n * @param {Node} node    Container child.\n * @param {number} index Child index.\n * @return {false|undefined} Returning `false` will break iteration.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _supportsColor = _interopRequireDefault(require(\"supports-color\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _terminalHighlight = _interopRequireDefault(require(\"./terminal-highlight\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * The CSS parser throws this error for broken CSS.\n *\n * Custom parsers can throw this error for broken custom syntax using\n * the {@link Node#error} method.\n *\n * PostCSS will use the input source map to detect the original error location.\n * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,\n * PostCSS will show the original position in the Sass file.\n *\n * If you need the position in the PostCSS input\n * (e.g., to debug the previous compiler), use `error.input.file`.\n *\n * @example\n * // Catching and checking syntax error\n * try {\n *   postcss.parse('a{')\n * } catch (error) {\n *   if (error.name === 'CssSyntaxError') {\n *     error //=> CssSyntaxError\n *   }\n * }\n *\n * @example\n * // Raising error from plugin\n * throw node.error('Unknown variable', { plugin: 'postcss-vars' })\n */\nvar CssSyntaxError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(CssSyntaxError, _Error);\n\n  /**\n   * @param {string} message  Error message.\n   * @param {number} [line]   Source line of the error.\n   * @param {number} [column] Source column of the error.\n   * @param {string} [source] Source code of the broken file.\n   * @param {string} [file]   Absolute path to the broken file.\n   * @param {string} [plugin] PostCSS plugin name, if error came from plugin.\n   */\n  function CssSyntaxError(message, line, column, source, file, plugin) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    /**\n     * Always equal to `'CssSyntaxError'`. You should always check error type\n     * by `error.name === 'CssSyntaxError'`\n     * instead of `error instanceof CssSyntaxError`,\n     * because npm could have several PostCSS versions.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (error.name === 'CssSyntaxError') {\n     *   error //=> CssSyntaxError\n     * }\n     */\n\n    _this.name = 'CssSyntaxError';\n    /**\n     * Error message.\n     *\n     * @type {string}\n     *\n     * @example\n     * error.message //=> 'Unclosed block'\n     */\n\n    _this.reason = message;\n\n    if (file) {\n      /**\n       * Absolute path to the broken file.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.file       //=> 'a.sass'\n       * error.input.file //=> 'a.css'\n       */\n      _this.file = file;\n    }\n\n    if (source) {\n      /**\n       * Source code of the broken file.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.source       //=> 'a { b {} }'\n       * error.input.column //=> 'a b { }'\n       */\n      _this.source = source;\n    }\n\n    if (plugin) {\n      /**\n       * Plugin name, if error came from plugin.\n       *\n       * @type {string}\n       *\n       * @example\n       * error.plugin //=> 'postcss-vars'\n       */\n      _this.plugin = plugin;\n    }\n\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      /**\n       * Source line of the error.\n       *\n       * @type {number}\n       *\n       * @example\n       * error.line       //=> 2\n       * error.input.line //=> 4\n       */\n      _this.line = line;\n      /**\n       * Source column of the error.\n       *\n       * @type {number}\n       *\n       * @example\n       * error.column       //=> 1\n       * error.input.column //=> 4\n       */\n\n      _this.column = column;\n    }\n\n    _this.setMessage();\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);\n    }\n\n    return _this;\n  }\n\n  var _proto = CssSyntaxError.prototype;\n\n  _proto.setMessage = function setMessage() {\n    /**\n     * Full error text in the GNU error format\n     * with plugin, file, line and column.\n     *\n     * @type {string}\n     *\n     * @example\n     * error.message //=> 'a.css:1:1: Unclosed block'\n     */\n    this.message = this.plugin ? this.plugin + ': ' : '';\n    this.message += this.file ? this.file : '<css input>';\n\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column;\n    }\n\n    this.message += ': ' + this.reason;\n  }\n  /**\n   * Returns a few lines of CSS source that caused the error.\n   *\n   * If the CSS has an input source map without `sourceContent`,\n   * this method will return an empty string.\n   *\n   * @param {boolean} [color] Whether arrow will be colored red by terminal\n   *                          color codes. By default, PostCSS will detect\n   *                          color support by `process.stdout.isTTY`\n   *                          and `process.env.NODE_DISABLE_COLORS`.\n   *\n   * @example\n   * error.showSourceCode() //=> \"  4 | }\n   *                        //      5 | a {\n   *                        //    > 6 |   bad\n   *                        //        |   ^\n   *                        //      7 | }\n   *                        //      8 | b {\"\n   *\n   * @return {string} Few lines of CSS source that caused the error.\n   */\n  ;\n\n  _proto.showSourceCode = function showSourceCode(color) {\n    var _this2 = this;\n\n    if (!this.source) return '';\n    var css = this.source;\n\n    if (_terminalHighlight.default) {\n      if (typeof color === 'undefined') color = _supportsColor.default.stdout;\n      if (color) css = (0, _terminalHighlight.default)(css);\n    }\n\n    var lines = css.split(/\\r?\\n/);\n    var start = Math.max(this.line - 3, 0);\n    var end = Math.min(this.line + 2, lines.length);\n    var maxWidth = String(end).length;\n\n    function mark(text) {\n      if (color && _chalk.default.red) {\n        return _chalk.default.red.bold(text);\n      }\n\n      return text;\n    }\n\n    function aside(text) {\n      if (color && _chalk.default.gray) {\n        return _chalk.default.gray(text);\n      }\n\n      return text;\n    }\n\n    return lines.slice(start, end).map(function (line, index) {\n      var number = start + 1 + index;\n      var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n\n      if (number === _this2.line) {\n        var spacing = aside(gutter.replace(/\\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\\t]/g, ' ');\n        return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^');\n      }\n\n      return ' ' + aside(gutter) + line;\n    }).join('\\n');\n  }\n  /**\n   * Returns error position, message and source code of the broken part.\n   *\n   * @example\n   * error.toString() //=> \"CssSyntaxError: app.css:1:1: Unclosed block\n   *                  //    > 1 | a {\n   *                  //        | ^\"\n   *\n   * @return {string} Error position, message and source code.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    var code = this.showSourceCode();\n\n    if (code) {\n      code = '\\n\\n' + code + '\\n';\n    }\n\n    return this.name + ': ' + this.message + code;\n  }\n  /**\n   * @memberof CssSyntaxError#\n   * @member {Input} input Input object with PostCSS internal information\n   *                       about input file. If input has source map\n   *                       from previous tool, PostCSS will use origin\n   *                       (for example, Sass) source. You can use this\n   *                       object to get PostCSS input source.\n   *\n   * @example\n   * error.input.file //=> 'a.css'\n   * error.file       //=> 'a.sass'\n   */\n  ;\n\n  return CssSyntaxError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar _default = CssSyntaxError;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a CSS declaration.\n *\n * @extends Node\n *\n * @example\n * const root = postcss.parse('a { color: black }')\n * const decl = root.first.first\n * decl.type       //=> 'decl'\n * decl.toString() //=> ' color: black'\n */\nvar Declaration = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Declaration, _Node);\n\n  function Declaration(defaults) {\n    var _this;\n\n    _this = _Node.call(this, defaults) || this;\n    _this.type = 'decl';\n    return _this;\n  }\n  /**\n   * @memberof Declaration#\n   * @member {string} prop The declaration’s property name.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.prop //=> 'color'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {string} value The declaration’s value.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black }')\n   * const decl = root.first.first\n   * decl.value //=> 'black'\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {boolean} important `true` if the declaration\n   *                             has an !important annotation.\n   *\n   * @example\n   * const root = postcss.parse('a { color: black !important; color: red }')\n   * root.first.first.important //=> true\n   * root.first.last.important  //=> undefined\n   */\n\n  /**\n   * @memberof Declaration#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `between`: the symbols between the property and value\n   *   for declarations.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans declaration from comments and extra spaces,\n   * but it stores origin content in raws properties.\n   * As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n\n\n  return Declaration;\n}(_node.default);\n\nvar _default = Declaration;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY2xhcmF0aW9uLmVzNiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsImRlZmF1bHRzIiwidHlwZSIsIk5vZGUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7OztBQUVBOzs7Ozs7Ozs7OztJQVdNQSxXOzs7QUFDSix1QkFBYUMsUUFBYixFQUF1QjtBQUFBOztBQUNyQiw2QkFBTUEsUUFBTjtBQUNBLFVBQUtDLElBQUwsR0FBWSxNQUFaO0FBRnFCO0FBR3RCO0FBRUQ7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFyQ3dCQyxhOztlQStEWEgsVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb2RlIGZyb20gJy4vbm9kZSdcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ1NTIGRlY2xhcmF0aW9uLlxuICpcbiAqIEBleHRlbmRzIE5vZGVcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EgeyBjb2xvcjogYmxhY2sgfScpXG4gKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdFxuICogZGVjbC50eXBlICAgICAgIC8vPT4gJ2RlY2wnXG4gKiBkZWNsLnRvU3RyaW5nKCkgLy89PiAnIGNvbG9yOiBibGFjaydcbiAqL1xuY2xhc3MgRGVjbGFyYXRpb24gZXh0ZW5kcyBOb2RlIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ2RlY2wnXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIERlY2xhcmF0aW9uI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHByb3AgVGhlIGRlY2xhcmF0aW9u4oCZcyBwcm9wZXJ0eSBuYW1lLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7IGNvbG9yOiBibGFjayB9JylcbiAgICogY29uc3QgZGVjbCA9IHJvb3QuZmlyc3QuZmlyc3RcbiAgICogZGVjbC5wcm9wIC8vPT4gJ2NvbG9yJ1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIERlY2xhcmF0aW9uI1xuICAgKiBAbWVtYmVyIHtzdHJpbmd9IHZhbHVlIFRoZSBkZWNsYXJhdGlvbuKAmXMgdmFsdWUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHsgY29sb3I6IGJsYWNrIH0nKVxuICAgKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdFxuICAgKiBkZWNsLnZhbHVlIC8vPT4gJ2JsYWNrJ1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIERlY2xhcmF0aW9uI1xuICAgKiBAbWVtYmVyIHtib29sZWFufSBpbXBvcnRhbnQgYHRydWVgIGlmIHRoZSBkZWNsYXJhdGlvblxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzIGFuICFpbXBvcnRhbnQgYW5ub3RhdGlvbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EgeyBjb2xvcjogYmxhY2sgIWltcG9ydGFudDsgY29sb3I6IHJlZCB9JylcbiAgICogcm9vdC5maXJzdC5maXJzdC5pbXBvcnRhbnQgLy89PiB0cnVlXG4gICAqIHJvb3QuZmlyc3QubGFzdC5pbXBvcnRhbnQgIC8vPT4gdW5kZWZpbmVkXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgKlxuICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgKlxuICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgKiAgIGFuZCBgX2Agc3ltYm9scyBiZWZvcmUgdGhlIGRlY2xhcmF0aW9uIChJRSBoYWNrKS5cbiAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgKiAgIGZvciBkZWNsYXJhdGlvbnMuXG4gICAqICogYGltcG9ydGFudGA6IHRoZSBjb250ZW50IG9mIHRoZSBpbXBvcnRhbnQgc3RhdGVtZW50LFxuICAgKiAgIGlmIGl0IGlzIG5vdCBqdXN0IGAhaW1wb3J0YW50YC5cbiAgICpcbiAgICogUG9zdENTUyBjbGVhbnMgZGVjbGFyYXRpb24gZnJvbSBjb21tZW50cyBhbmQgZXh0cmEgc3BhY2VzLFxuICAgKiBidXQgaXQgc3RvcmVzIG9yaWdpbiBjb250ZW50IGluIHJhd3MgcHJvcGVydGllcy5cbiAgICogQXMgc3VjaCwgaWYgeW91IGRvbuKAmXQgY2hhbmdlIGEgZGVjbGFyYXRpb27igJlzIHZhbHVlLFxuICAgKiBQb3N0Q1NTIHdpbGwgdXNlIHRoZSByYXcgdmFsdWUgd2l0aCBjb21tZW50cy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2Ege1xcbiAgY29sb3I6YmxhY2tcXG59JylcbiAgICogcm9vdC5maXJzdC5maXJzdC5yYXdzIC8vPT4geyBiZWZvcmU6ICdcXG4gICcsIGJldHdlZW46ICc6JyB9XG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBEZWNsYXJhdGlvblxuIl0sImZpbGUiOiJkZWNsYXJhdGlvbi5qcyJ9\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _cssSyntaxError = _interopRequireDefault(require(\"./css-syntax-error\"));\n\nvar _previousMap = _interopRequireDefault(require(\"./previous-map\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar sequence = 0;\n/**\n * Represents the source CSS.\n *\n * @example\n * const root  = postcss.parse(css, { from: file })\n * const input = root.source.input\n */\n\nvar Input = /*#__PURE__*/function () {\n  /**\n   * @param {string} css    Input CSS source.\n   * @param {object} [opts] {@link Processor#process} options.\n   */\n  function Input(css, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n      throw new Error(\"PostCSS received \" + css + \" instead of CSS string\");\n    }\n    /**\n     * Input CSS source\n     *\n     * @type {string}\n     *\n     * @example\n     * const input = postcss.parse('a{}', { from: file }).input\n     * input.css //=> \"a{}\"\n     */\n\n\n    this.css = css.toString();\n\n    if (this.css[0] === \"\\uFEFF\" || this.css[0] === \"\\uFFFE\") {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n\n    if (opts.from) {\n      if (/^\\w+:\\/\\//.test(opts.from) || _path.default.isAbsolute(opts.from)) {\n        /**\n         * The absolute path to the CSS source file defined\n         * with the `from` option.\n         *\n         * @type {string}\n         *\n         * @example\n         * const root = postcss.parse(css, { from: 'a.css' })\n         * root.source.input.file //=> '/home/ai/a.css'\n         */\n        this.file = opts.from;\n      } else {\n        this.file = _path.default.resolve(opts.from);\n      }\n    }\n\n    var map = new _previousMap.default(this.css, opts);\n\n    if (map.text) {\n      /**\n       * The input source map passed from a compilation step before PostCSS\n       * (for example, from Sass compiler).\n       *\n       * @type {PreviousMap}\n       *\n       * @example\n       * root.source.input.map.consumer().sources //=> ['a.sass']\n       */\n      this.map = map;\n      var file = map.consumer().file;\n      if (!this.file && file) this.file = this.mapResolve(file);\n    }\n\n    if (!this.file) {\n      sequence += 1;\n      /**\n       * The unique ID of the CSS source. It will be created if `from` option\n       * is not provided (because PostCSS does not know the file path).\n       *\n       * @type {string}\n       *\n       * @example\n       * const root = postcss.parse(css)\n       * root.source.input.file //=> undefined\n       * root.source.input.id   //=> \"<input css 1>\"\n       */\n\n      this.id = '<input css ' + sequence + '>';\n    }\n\n    if (this.map) this.map.file = this.from;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.error = function error(message, line, column, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var result;\n    var origin = this.origin(line, column);\n\n    if (origin) {\n      result = new _cssSyntaxError.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);\n    } else {\n      result = new _cssSyntaxError.default(message, line, column, this.css, this.file, opts.plugin);\n    }\n\n    result.input = {\n      line: line,\n      column: column,\n      source: this.css\n    };\n    if (this.file) result.input.file = this.file;\n    return result;\n  }\n  /**\n   * Reads the input source map and returns a symbol position\n   * in the input source (e.g., in a Sass file that was compiled\n   * to CSS before being passed to PostCSS).\n   *\n   * @param {number} line   Line in input CSS.\n   * @param {number} column Column in input CSS.\n   *\n   * @return {filePosition} Position in input source.\n   *\n   * @example\n   * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }\n   */\n  ;\n\n  _proto.origin = function origin(line, column) {\n    if (!this.map) return false;\n    var consumer = this.map.consumer();\n    var from = consumer.originalPositionFor({\n      line: line,\n      column: column\n    });\n    if (!from.source) return false;\n    var result = {\n      file: this.mapResolve(from.source),\n      line: from.line,\n      column: from.column\n    };\n    var source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n    return result;\n  };\n\n  _proto.mapResolve = function mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n\n    return _path.default.resolve(this.map.consumer().sourceRoot || '.', file);\n  }\n  /**\n   * The CSS source identifier. Contains {@link Input#file} if the user\n   * set the `from` option, or {@link Input#id} if they did not.\n   *\n   * @type {string}\n   *\n   * @example\n   * const root = postcss.parse(css, { from: 'a.css' })\n   * root.source.input.from //=> \"/home/ai/a.css\"\n   *\n   * const root = postcss.parse(css)\n   * root.source.input.from //=> \"<input css 1>\"\n   */\n  ;\n\n  _createClass(Input, [{\n    key: \"from\",\n    get: function get() {\n      return this.file || this.id;\n    }\n  }]);\n\n  return Input;\n}();\n\nvar _default = Input;\n/**\n * @typedef  {object} filePosition\n * @property {string} file   Path to file.\n * @property {number} line   Source line in file.\n * @property {number} column Source column in file.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _mapGenerator = _interopRequireDefault(require(\"./map-generator\"));\n\nvar _stringify2 = _interopRequireDefault(require(\"./stringify\"));\n\nvar _warnOnce = _interopRequireDefault(require(\"./warn-once\"));\n\nvar _result = _interopRequireDefault(require(\"./result\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function';\n}\n/**\n * A Promise proxy for the result of PostCSS transformations.\n *\n * A `LazyResult` instance is returned by {@link Processor#process}.\n *\n * @example\n * const lazy = postcss([autoprefixer]).process(css)\n */\n\n\nvar LazyResult = /*#__PURE__*/function () {\n  function LazyResult(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    var root;\n\n    if (typeof css === 'object' && css !== null && css.type === 'root') {\n      root = css;\n    } else if (css instanceof LazyResult || css instanceof _result.default) {\n      root = css.root;\n\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      var parser = _parse.default;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.error = error;\n      }\n    }\n\n    this.result = new _result.default(processor, root, opts);\n  }\n  /**\n   * Returns a {@link Processor} instance, which will be used\n   * for CSS transformations.\n   *\n   * @type {Processor}\n   */\n\n\n  var _proto = LazyResult.prototype;\n\n  /**\n   * Processes input CSS through synchronous plugins\n   * and calls {@link Result#warnings()}.\n   *\n   * @return {Warning[]} Warnings from plugins.\n   */\n  _proto.warnings = function warnings() {\n    return this.sync().warnings();\n  }\n  /**\n   * Alias for the {@link LazyResult#css} property.\n   *\n   * @example\n   * lazy + '' === lazy.css\n   *\n   * @return {string} Output CSS.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.css;\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls `onFulfilled` with a Result instance. If a plugin throws\n   * an error, the `onRejected` callback will be executed.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onFulfilled} onFulfilled Callback will be executed\n   *                                  when all plugins will finish work.\n   * @param {onRejected}  onRejected  Callback will be executed on any error.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {\n   *   console.log(result.css)\n   * })\n   */\n  ;\n\n  _proto.then = function then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        (0, _warnOnce.default)('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected);\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls onRejected for each error thrown in any plugin.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onRejected} onRejected Callback will be executed on any error.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css).then(result => {\n   *   console.log(result.css)\n   * }).catch(error => {\n   *   console.error(error)\n   * })\n   */\n  ;\n\n  _proto.catch = function _catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  /**\n   * Processes input CSS through synchronous and asynchronous plugins\n   * and calls onFinally on any error or when all plugins will finish work.\n   *\n   * It implements standard Promise API.\n   *\n   * @param {onFinally} onFinally Callback will be executed on any error or\n   *                              when all plugins will finish work.\n   *\n   * @return {Promise} Promise API to make queue.\n   *\n   * @example\n   * postcss([autoprefixer]).process(css).finally(() => {\n   *   console.log('processing ended')\n   * })\n   */\n  ;\n\n  _proto.finally = function _finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  };\n\n  _proto.handleError = function handleError(error, plugin) {\n    try {\n      this.error = error;\n\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          var pluginName = plugin.postcssPlugin;\n          var pluginVer = plugin.postcssVersion;\n          var runtimeVer = this.result.processor.version;\n          var a = pluginVer.split('.');\n          var b = runtimeVer.split('.');\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n          }\n        }\n      }\n    } catch (err) {\n      if (console && console.error) console.error(err);\n    }\n  };\n\n  _proto.asyncTick = function asyncTick(resolve, reject) {\n    var _this = this;\n\n    if (this.plugin >= this.processor.plugins.length) {\n      this.processed = true;\n      return resolve();\n    }\n\n    try {\n      var plugin = this.processor.plugins[this.plugin];\n      var promise = this.run(plugin);\n      this.plugin += 1;\n\n      if (isPromise(promise)) {\n        promise.then(function () {\n          _this.asyncTick(resolve, reject);\n        }).catch(function (error) {\n          _this.handleError(error, plugin);\n\n          _this.processed = true;\n          reject(error);\n        });\n      } else {\n        this.asyncTick(resolve, reject);\n      }\n    } catch (error) {\n      this.processed = true;\n      reject(error);\n    }\n  };\n\n  _proto.async = function async() {\n    var _this2 = this;\n\n    if (this.processed) {\n      return new Promise(function (resolve, reject) {\n        if (_this2.error) {\n          reject(_this2.error);\n        } else {\n          resolve(_this2.stringify());\n        }\n      });\n    }\n\n    if (this.processing) {\n      return this.processing;\n    }\n\n    this.processing = new Promise(function (resolve, reject) {\n      if (_this2.error) return reject(_this2.error);\n      _this2.plugin = 0;\n\n      _this2.asyncTick(resolve, reject);\n    }).then(function () {\n      _this2.processed = true;\n      return _this2.stringify();\n    });\n    return this.processing;\n  };\n\n  _proto.sync = function sync() {\n    if (this.processed) return this.result;\n    this.processed = true;\n\n    if (this.processing) {\n      throw new Error('Use process(css).then(cb) to work with async plugins');\n    }\n\n    if (this.error) throw this.error;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.result.processor.plugins), _step; !(_step = _iterator()).done;) {\n      var plugin = _step.value;\n      var promise = this.run(plugin);\n\n      if (isPromise(promise)) {\n        throw new Error('Use process(css).then(cb) to work with async plugins');\n      }\n    }\n\n    return this.result;\n  };\n\n  _proto.run = function run(plugin) {\n    this.result.lastPlugin = plugin;\n\n    try {\n      return plugin(this.result.root, this.result);\n    } catch (error) {\n      this.handleError(error, plugin);\n      throw error;\n    }\n  };\n\n  _proto.stringify = function stringify() {\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    var opts = this.result.opts;\n    var str = _stringify2.default;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    var map = new _mapGenerator.default(str, this.result.root, this.result.opts);\n    var data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  };\n\n  _createClass(LazyResult, [{\n    key: \"processor\",\n    get: function get() {\n      return this.result.processor;\n    }\n    /**\n     * Options from the {@link Processor#process} call.\n     *\n     * @type {processOptions}\n     */\n\n  }, {\n    key: \"opts\",\n    get: function get() {\n      return this.result.opts;\n    }\n    /**\n     * Processes input CSS through synchronous plugins, converts `Root`\n     * to a CSS string and returns {@link Result#css}.\n     *\n     * This property will only work with synchronous plugins.\n     * If the processor contains any asynchronous plugins\n     * it will throw an error. This is why this method is only\n     * for debug purpose, you should always use {@link LazyResult#then}.\n     *\n     * @type {string}\n     * @see Result#css\n     */\n\n  }, {\n    key: \"css\",\n    get: function get() {\n      return this.stringify().css;\n    }\n    /**\n     * An alias for the `css` property. Use it with syntaxes\n     * that generate non-CSS output.\n     *\n     * This property will only work with synchronous plugins.\n     * If the processor contains any asynchronous plugins\n     * it will throw an error. This is why this method is only\n     * for debug purpose, you should always use {@link LazyResult#then}.\n     *\n     * @type {string}\n     * @see Result#content\n     */\n\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this.stringify().content;\n    }\n    /**\n     * Processes input CSS through synchronous plugins\n     * and returns {@link Result#map}.\n     *\n     * This property will only work with synchronous plugins.\n     * If the processor contains any asynchronous plugins\n     * it will throw an error. This is why this method is only\n     * for debug purpose, you should always use {@link LazyResult#then}.\n     *\n     * @type {SourceMapGenerator}\n     * @see Result#map\n     */\n\n  }, {\n    key: \"map\",\n    get: function get() {\n      return this.stringify().map;\n    }\n    /**\n     * Processes input CSS through synchronous plugins\n     * and returns {@link Result#root}.\n     *\n     * This property will only work with synchronous plugins. If the processor\n     * contains any asynchronous plugins it will throw an error.\n     *\n     * This is why this method is only for debug purpose,\n     * you should always use {@link LazyResult#then}.\n     *\n     * @type {Root}\n     * @see Result#root\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.sync().root;\n    }\n    /**\n     * Processes input CSS through synchronous plugins\n     * and returns {@link Result#messages}.\n     *\n     * This property will only work with synchronous plugins. If the processor\n     * contains any asynchronous plugins it will throw an error.\n     *\n     * This is why this method is only for debug purpose,\n     * you should always use {@link LazyResult#then}.\n     *\n     * @type {Message[]}\n     * @see Result#messages\n     */\n\n  }, {\n    key: \"messages\",\n    get: function get() {\n      return this.sync().messages;\n    }\n  }]);\n\n  return LazyResult;\n}();\n\nvar _default = LazyResult;\n/**\n * @callback onFulfilled\n * @param {Result} result\n */\n\n/**\n * @callback onRejected\n * @param {Error} error\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Contains helpers for safely splitting lists of CSS values,\n * preserving parentheses and quotes.\n *\n * @example\n * const list = postcss.list\n *\n * @namespace list\n */\nvar list = {\n  split: function split(string, separators, last) {\n    var array = [];\n    var current = '';\n    var split = false;\n    var func = 0;\n    var quote = false;\n    var escape = false;\n\n    for (var i = 0; i < string.length; i++) {\n      var letter = string[i];\n\n      if (quote) {\n        if (escape) {\n          escape = false;\n        } else if (letter === '\\\\') {\n          escape = true;\n        } else if (letter === quote) {\n          quote = false;\n        }\n      } else if (letter === '\"' || letter === '\\'') {\n        quote = letter;\n      } else if (letter === '(') {\n        func += 1;\n      } else if (letter === ')') {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.indexOf(letter) !== -1) split = true;\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim());\n        current = '';\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim());\n    return array;\n  },\n\n  /**\n   * Safely splits space-separated values (such as those for `background`,\n   * `border-radius`, and other shorthand properties).\n   *\n   * @param {string} string Space-separated values.\n   *\n   * @return {string[]} Split values.\n   *\n   * @example\n   * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']\n   */\n  space: function space(string) {\n    var spaces = [' ', '\\n', '\\t'];\n    return list.split(string, spaces);\n  },\n\n  /**\n   * Safely splits comma-separated values (such as those for `transition-*`\n   * and `background` properties).\n   *\n   * @param {string} string Comma-separated values.\n   *\n   * @return {string[]} Split values.\n   *\n   * @example\n   * postcss.list.comma('black, linear-gradient(white, black)')\n   * //=> ['black', 'linear-gradient(white, black)']\n   */\n  comma: function comma(string) {\n    return list.split(string, [','], true);\n  }\n};\nvar _default = list;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QuZXM2Il0sIm5hbWVzIjpbImxpc3QiLCJzcGxpdCIsInN0cmluZyIsInNlcGFyYXRvcnMiLCJsYXN0IiwiYXJyYXkiLCJjdXJyZW50IiwiZnVuYyIsInF1b3RlIiwiZXNjYXBlIiwiaSIsImxlbmd0aCIsImxldHRlciIsImluZGV4T2YiLCJwdXNoIiwidHJpbSIsInNwYWNlIiwic3BhY2VzIiwiY29tbWEiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7OztBQVNBLElBQUlBLElBQUksR0FBRztBQUVUQyxFQUFBQSxLQUZTLGlCQUVGQyxNQUZFLEVBRU1DLFVBRk4sRUFFa0JDLElBRmxCLEVBRXdCO0FBQy9CLFFBQUlDLEtBQUssR0FBRyxFQUFaO0FBQ0EsUUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQSxRQUFJTCxLQUFLLEdBQUcsS0FBWjtBQUVBLFFBQUlNLElBQUksR0FBRyxDQUFYO0FBQ0EsUUFBSUMsS0FBSyxHQUFHLEtBQVo7QUFDQSxRQUFJQyxNQUFNLEdBQUcsS0FBYjs7QUFFQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdSLE1BQU0sQ0FBQ1MsTUFBM0IsRUFBbUNELENBQUMsRUFBcEMsRUFBd0M7QUFDdEMsVUFBSUUsTUFBTSxHQUFHVixNQUFNLENBQUNRLENBQUQsQ0FBbkI7O0FBRUEsVUFBSUYsS0FBSixFQUFXO0FBQ1QsWUFBSUMsTUFBSixFQUFZO0FBQ1ZBLFVBQUFBLE1BQU0sR0FBRyxLQUFUO0FBQ0QsU0FGRCxNQUVPLElBQUlHLE1BQU0sS0FBSyxJQUFmLEVBQXFCO0FBQzFCSCxVQUFBQSxNQUFNLEdBQUcsSUFBVDtBQUNELFNBRk0sTUFFQSxJQUFJRyxNQUFNLEtBQUtKLEtBQWYsRUFBc0I7QUFDM0JBLFVBQUFBLEtBQUssR0FBRyxLQUFSO0FBQ0Q7QUFDRixPQVJELE1BUU8sSUFBSUksTUFBTSxLQUFLLEdBQVgsSUFBa0JBLE1BQU0sS0FBSyxJQUFqQyxFQUF1QztBQUM1Q0osUUFBQUEsS0FBSyxHQUFHSSxNQUFSO0FBQ0QsT0FGTSxNQUVBLElBQUlBLE1BQU0sS0FBSyxHQUFmLEVBQW9CO0FBQ3pCTCxRQUFBQSxJQUFJLElBQUksQ0FBUjtBQUNELE9BRk0sTUFFQSxJQUFJSyxNQUFNLEtBQUssR0FBZixFQUFvQjtBQUN6QixZQUFJTCxJQUFJLEdBQUcsQ0FBWCxFQUFjQSxJQUFJLElBQUksQ0FBUjtBQUNmLE9BRk0sTUFFQSxJQUFJQSxJQUFJLEtBQUssQ0FBYixFQUFnQjtBQUNyQixZQUFJSixVQUFVLENBQUNVLE9BQVgsQ0FBbUJELE1BQW5CLE1BQStCLENBQUMsQ0FBcEMsRUFBdUNYLEtBQUssR0FBRyxJQUFSO0FBQ3hDOztBQUVELFVBQUlBLEtBQUosRUFBVztBQUNULFlBQUlLLE9BQU8sS0FBSyxFQUFoQixFQUFvQkQsS0FBSyxDQUFDUyxJQUFOLENBQVdSLE9BQU8sQ0FBQ1MsSUFBUixFQUFYO0FBQ3BCVCxRQUFBQSxPQUFPLEdBQUcsRUFBVjtBQUNBTCxRQUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNELE9BSkQsTUFJTztBQUNMSyxRQUFBQSxPQUFPLElBQUlNLE1BQVg7QUFDRDtBQUNGOztBQUVELFFBQUlSLElBQUksSUFBSUUsT0FBTyxLQUFLLEVBQXhCLEVBQTRCRCxLQUFLLENBQUNTLElBQU4sQ0FBV1IsT0FBTyxDQUFDUyxJQUFSLEVBQVg7QUFDNUIsV0FBT1YsS0FBUDtBQUNELEdBM0NROztBQTZDVDs7Ozs7Ozs7Ozs7QUFXQVcsRUFBQUEsS0F4RFMsaUJBd0RGZCxNQXhERSxFQXdETTtBQUNiLFFBQUllLE1BQU0sR0FBRyxDQUFDLEdBQUQsRUFBTSxJQUFOLEVBQVksSUFBWixDQUFiO0FBQ0EsV0FBT2pCLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxNQUFYLEVBQW1CZSxNQUFuQixDQUFQO0FBQ0QsR0EzRFE7O0FBNkRUOzs7Ozs7Ozs7Ozs7QUFZQUMsRUFBQUEsS0F6RVMsaUJBeUVGaEIsTUF6RUUsRUF5RU07QUFDYixXQUFPRixJQUFJLENBQUNDLEtBQUwsQ0FBV0MsTUFBWCxFQUFtQixDQUFDLEdBQUQsQ0FBbkIsRUFBMEIsSUFBMUIsQ0FBUDtBQUNEO0FBM0VRLENBQVg7ZUErRWVGLEkiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnRhaW5zIGhlbHBlcnMgZm9yIHNhZmVseSBzcGxpdHRpbmcgbGlzdHMgb2YgQ1NTIHZhbHVlcyxcbiAqIHByZXNlcnZpbmcgcGFyZW50aGVzZXMgYW5kIHF1b3Rlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgbGlzdCA9IHBvc3Rjc3MubGlzdFxuICpcbiAqIEBuYW1lc3BhY2UgbGlzdFxuICovXG5sZXQgbGlzdCA9IHtcblxuICBzcGxpdCAoc3RyaW5nLCBzZXBhcmF0b3JzLCBsYXN0KSB7XG4gICAgbGV0IGFycmF5ID0gW11cbiAgICBsZXQgY3VycmVudCA9ICcnXG4gICAgbGV0IHNwbGl0ID0gZmFsc2VcblxuICAgIGxldCBmdW5jID0gMFxuICAgIGxldCBxdW90ZSA9IGZhbHNlXG4gICAgbGV0IGVzY2FwZSA9IGZhbHNlXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGxldHRlciA9IHN0cmluZ1tpXVxuXG4gICAgICBpZiAocXVvdGUpIHtcbiAgICAgICAgaWYgKGVzY2FwZSkge1xuICAgICAgICAgIGVzY2FwZSA9IGZhbHNlXG4gICAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnXFxcXCcpIHtcbiAgICAgICAgICBlc2NhcGUgPSB0cnVlXG4gICAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSBxdW90ZSkge1xuICAgICAgICAgIHF1b3RlID0gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICdcIicgfHwgbGV0dGVyID09PSAnXFwnJykge1xuICAgICAgICBxdW90ZSA9IGxldHRlclxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICcoJykge1xuICAgICAgICBmdW5jICs9IDFcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnKScpIHtcbiAgICAgICAgaWYgKGZ1bmMgPiAwKSBmdW5jIC09IDFcbiAgICAgIH0gZWxzZSBpZiAoZnVuYyA9PT0gMCkge1xuICAgICAgICBpZiAoc2VwYXJhdG9ycy5pbmRleE9mKGxldHRlcikgIT09IC0xKSBzcGxpdCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKHNwbGl0KSB7XG4gICAgICAgIGlmIChjdXJyZW50ICE9PSAnJykgYXJyYXkucHVzaChjdXJyZW50LnRyaW0oKSlcbiAgICAgICAgY3VycmVudCA9ICcnXG4gICAgICAgIHNwbGl0ID0gZmFsc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgKz0gbGV0dGVyXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGxhc3QgfHwgY3VycmVudCAhPT0gJycpIGFycmF5LnB1c2goY3VycmVudC50cmltKCkpXG4gICAgcmV0dXJuIGFycmF5XG4gIH0sXG5cbiAgLyoqXG4gICAqIFNhZmVseSBzcGxpdHMgc3BhY2Utc2VwYXJhdGVkIHZhbHVlcyAoc3VjaCBhcyB0aG9zZSBmb3IgYGJhY2tncm91bmRgLFxuICAgKiBgYm9yZGVyLXJhZGl1c2AsIGFuZCBvdGhlciBzaG9ydGhhbmQgcHJvcGVydGllcykuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgU3BhY2Utc2VwYXJhdGVkIHZhbHVlcy5cbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nW119IFNwbGl0IHZhbHVlcy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy5saXN0LnNwYWNlKCcxcHggY2FsYygxMCUgKyAxcHgpJykgLy89PiBbJzFweCcsICdjYWxjKDEwJSArIDFweCknXVxuICAgKi9cbiAgc3BhY2UgKHN0cmluZykge1xuICAgIGxldCBzcGFjZXMgPSBbJyAnLCAnXFxuJywgJ1xcdCddXG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBzcGFjZXMpXG4gIH0sXG5cbiAgLyoqXG4gICAqIFNhZmVseSBzcGxpdHMgY29tbWEtc2VwYXJhdGVkIHZhbHVlcyAoc3VjaCBhcyB0aG9zZSBmb3IgYHRyYW5zaXRpb24tKmBcbiAgICogYW5kIGBiYWNrZ3JvdW5kYCBwcm9wZXJ0aWVzKS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBDb21tYS1zZXBhcmF0ZWQgdmFsdWVzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmdbXX0gU3BsaXQgdmFsdWVzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBwb3N0Y3NzLmxpc3QuY29tbWEoJ2JsYWNrLCBsaW5lYXItZ3JhZGllbnQod2hpdGUsIGJsYWNrKScpXG4gICAqIC8vPT4gWydibGFjaycsICdsaW5lYXItZ3JhZGllbnQod2hpdGUsIGJsYWNrKSddXG4gICAqL1xuICBjb21tYSAoc3RyaW5nKSB7XG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBbJywnXSwgdHJ1ZSlcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RcbiJdLCJmaWxlIjoibGlzdC5qcyJ9\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar MapGenerator = /*#__PURE__*/function () {\n  function MapGenerator(stringify, root, opts) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n  }\n\n  var _proto = MapGenerator.prototype;\n\n  _proto.isMap = function isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map;\n    }\n\n    return this.previous().length > 0;\n  };\n\n  _proto.previous = function previous() {\n    var _this = this;\n\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      this.root.walk(function (node) {\n        if (node.source && node.source.input.map) {\n          var map = node.source.input.map;\n\n          if (_this.previousMaps.indexOf(map) === -1) {\n            _this.previousMaps.push(map);\n          }\n        }\n      });\n    }\n\n    return this.previousMaps;\n  };\n\n  _proto.isInline = function isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline;\n    }\n\n    var annotation = this.mapOpts.annotation;\n\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.inline;\n      });\n    }\n\n    return true;\n  };\n\n  _proto.isSourcesContent = function isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.withContent();\n      });\n    }\n\n    return true;\n  };\n\n  _proto.clearAnnotation = function clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    var node;\n\n    for (var i = this.root.nodes.length - 1; i >= 0; i--) {\n      node = this.root.nodes[i];\n      if (node.type !== 'comment') continue;\n\n      if (node.text.indexOf('# sourceMappingURL=') === 0) {\n        this.root.removeChild(i);\n      }\n    }\n  };\n\n  _proto.setSourcesContent = function setSourcesContent() {\n    var _this2 = this;\n\n    var already = {};\n    this.root.walk(function (node) {\n      if (node.source) {\n        var from = node.source.input.from;\n\n        if (from && !already[from]) {\n          already[from] = true;\n\n          var relative = _this2.relative(from);\n\n          _this2.map.setSourceContent(relative, node.source.input.css);\n        }\n      }\n    });\n  };\n\n  _proto.applyPrevMaps = function applyPrevMaps() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.previous()), _step; !(_step = _iterator()).done;) {\n      var prev = _step.value;\n      var from = this.relative(prev.file);\n\n      var root = prev.root || _path.default.dirname(prev.file);\n\n      var map = void 0;\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new _sourceMap.default.SourceMapConsumer(prev.text);\n\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(function () {\n            return null;\n          });\n        }\n      } else {\n        map = prev.consumer();\n      }\n\n      this.map.applySourceMap(map, from, this.relative(root));\n    }\n  };\n\n  _proto.isAnnotation = function isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    }\n\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation;\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.annotation;\n      });\n    }\n\n    return true;\n  };\n\n  _proto.toBase64 = function toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64');\n    }\n\n    return window.btoa(unescape(encodeURIComponent(str)));\n  };\n\n  _proto.addAnnotation = function addAnnotation() {\n    var content;\n\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else {\n      content = this.outputFile() + '.map';\n    }\n\n    var eol = '\\n';\n    if (this.css.indexOf('\\r\\n') !== -1) eol = '\\r\\n';\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  };\n\n  _proto.outputFile = function outputFile() {\n    if (this.opts.to) {\n      return this.relative(this.opts.to);\n    }\n\n    if (this.opts.from) {\n      return this.relative(this.opts.from);\n    }\n\n    return 'to.css';\n  };\n\n  _proto.generateMap = function generateMap() {\n    this.generateString();\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n\n    if (this.isInline()) {\n      return [this.css];\n    }\n\n    return [this.css, this.map];\n  };\n\n  _proto.relative = function relative(file) {\n    if (file.indexOf('<') === 0) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    var from = this.opts.to ? _path.default.dirname(this.opts.to) : '.';\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = _path.default.dirname(_path.default.resolve(from, this.mapOpts.annotation));\n    }\n\n    file = _path.default.relative(from, file);\n\n    if (_path.default.sep === '\\\\') {\n      return file.replace(/\\\\/g, '/');\n    }\n\n    return file;\n  };\n\n  _proto.sourcePath = function sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.mapOpts.from;\n    }\n\n    return this.relative(node.source.input.from);\n  };\n\n  _proto.generateString = function generateString() {\n    var _this3 = this;\n\n    this.css = '';\n    this.map = new _sourceMap.default.SourceMapGenerator({\n      file: this.outputFile()\n    });\n    var line = 1;\n    var column = 1;\n    var lines, last;\n    this.stringify(this.root, function (str, node, type) {\n      _this3.css += str;\n\n      if (node && type !== 'end') {\n        if (node.source && node.source.start) {\n          _this3.map.addMapping({\n            source: _this3.sourcePath(node),\n            generated: {\n              line: line,\n              column: column - 1\n            },\n            original: {\n              line: node.source.start.line,\n              column: node.source.start.column - 1\n            }\n          });\n        } else {\n          _this3.map.addMapping({\n            source: '<no source>',\n            original: {\n              line: 1,\n              column: 0\n            },\n            generated: {\n              line: line,\n              column: column - 1\n            }\n          });\n        }\n      }\n\n      lines = str.match(/\\n/g);\n\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n\n      if (node && type !== 'start') {\n        var p = node.parent || {\n          raws: {}\n        };\n\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            _this3.map.addMapping({\n              source: _this3.sourcePath(node),\n              generated: {\n                line: line,\n                column: column - 2\n              },\n              original: {\n                line: node.source.end.line,\n                column: node.source.end.column - 1\n              }\n            });\n          } else {\n            _this3.map.addMapping({\n              source: '<no source>',\n              original: {\n                line: 1,\n                column: 0\n              },\n              generated: {\n                line: line,\n                column: column - 1\n              }\n            });\n          }\n        }\n      }\n    });\n  };\n\n  _proto.generate = function generate() {\n    this.clearAnnotation();\n\n    if (this.isMap()) {\n      return this.generateMap();\n    }\n\n    var result = '';\n    this.stringify(this.root, function (i) {\n      result += i;\n    });\n    return [result];\n  };\n\n  return MapGenerator;\n}();\n\nvar _default = MapGenerator;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _cssSyntaxError = _interopRequireDefault(require(\"./css-syntax-error\"));\n\nvar _stringifier = _interopRequireDefault(require(\"./stringifier\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction cloneNode(obj, parent) {\n  var cloned = new obj.constructor();\n\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) continue;\n    var value = obj[i];\n    var type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n/**\n * All node classes inherit the following common methods.\n *\n * @abstract\n */\n\n\nvar Node = /*#__PURE__*/function () {\n  /**\n   * @param {object} [defaults] Value for node properties.\n   */\n  function Node(defaults) {\n    if (defaults === void 0) {\n      defaults = {};\n    }\n\n    this.raws = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof defaults !== 'object' && typeof defaults !== 'undefined') {\n        throw new Error('PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults));\n      }\n    }\n\n    for (var name in defaults) {\n      this[name] = defaults[name];\n    }\n  }\n  /**\n   * Returns a `CssSyntaxError` instance containing the original position\n   * of the node in the source, showing line and column numbers and also\n   * a small excerpt to facilitate debugging.\n   *\n   * If present, an input source map will be used to get the original position\n   * of the source, even from a previous compilation step\n   * (e.g., from Sass compilation).\n   *\n   * This method produces very useful error messages.\n   *\n   * @param {string} message     Error description.\n   * @param {object} [opts]      Options.\n   * @param {string} opts.plugin Plugin name that created this error.\n   *                             PostCSS will set it automatically.\n   * @param {string} opts.word   A word inside a node’s string that should\n   *                             be highlighted as the source of the error.\n   * @param {number} opts.index  An index inside a node’s string that should\n   *                             be highlighted as the source of the error.\n   *\n   * @return {CssSyntaxError} Error object to throw it.\n   *\n   * @example\n   * if (!variables[name]) {\n   *   throw decl.error('Unknown variable ' + name, { word: name })\n   *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black\n   *   //   color: $black\n   *   // a\n   *   //          ^\n   *   //   background: white\n   * }\n   */\n\n\n  var _proto = Node.prototype;\n\n  _proto.error = function error(message, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.source) {\n      var pos = this.positionBy(opts);\n      return this.source.input.error(message, pos.line, pos.column, opts);\n    }\n\n    return new _cssSyntaxError.default(message);\n  }\n  /**\n   * This method is provided as a convenience wrapper for {@link Result#warn}.\n   *\n   * @param {Result} result      The {@link Result} instance\n   *                             that will receive the warning.\n   * @param {string} text        Warning message.\n   * @param {object} [opts]      Options\n   * @param {string} opts.plugin Plugin name that created this warning.\n   *                             PostCSS will set it automatically.\n   * @param {string} opts.word   A word inside a node’s string that should\n   *                             be highlighted as the source of the warning.\n   * @param {number} opts.index  An index inside a node’s string that should\n   *                             be highlighted as the source of the warning.\n   *\n   * @return {Warning} Created warning object.\n   *\n   * @example\n   * const plugin = postcss.plugin('postcss-deprecated', () => {\n   *   return (root, result) => {\n   *     root.walkDecls('bad', decl => {\n   *       decl.warn(result, 'Deprecated property bad')\n   *     })\n   *   }\n   * })\n   */\n  ;\n\n  _proto.warn = function warn(result, text, opts) {\n    var data = {\n      node: this\n    };\n\n    for (var i in opts) {\n      data[i] = opts[i];\n    }\n\n    return result.warn(text, data);\n  }\n  /**\n   * Removes the node from its parent and cleans the parent properties\n   * from the node and its children.\n   *\n   * @example\n   * if (decl.prop.match(/^-webkit-/)) {\n   *   decl.remove()\n   * }\n   *\n   * @return {Node} Node to make calls chain.\n   */\n  ;\n\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    this.parent = undefined;\n    return this;\n  }\n  /**\n   * Returns a CSS string representing the node.\n   *\n   * @param {stringifier|syntax} [stringifier] A syntax to use\n   *                                           in string generation.\n   *\n   * @return {string} CSS string of this node.\n   *\n   * @example\n   * postcss.rule({ selector: 'a' }).toString() //=> \"a {}\"\n   */\n  ;\n\n  _proto.toString = function toString(stringifier) {\n    if (stringifier === void 0) {\n      stringifier = _stringify.default;\n    }\n\n    if (stringifier.stringify) stringifier = stringifier.stringify;\n    var result = '';\n    stringifier(this, function (i) {\n      result += i;\n    });\n    return result;\n  }\n  /**\n   * Returns an exact clone of the node.\n   *\n   * The resulting cloned node and its (cloned) children will retain\n   * code style properties.\n   *\n   * @param {object} [overrides] New properties to override in the clone.\n   *\n   * @example\n   * decl.raws.before    //=> \"\\n  \"\n   * const cloned = decl.clone({ prop: '-moz-' + decl.prop })\n   * cloned.raws.before  //=> \"\\n  \"\n   * cloned.toString()   //=> -moz-transform: scale(0)\n   *\n   * @return {Node} Clone of the node.\n   */\n  ;\n\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = cloneNode(this);\n\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n  /**\n   * Shortcut to clone the node and insert the resulting cloned node\n   * before the current node.\n   *\n   * @param {object} [overrides] Mew properties to override in the clone.\n   *\n   * @example\n   * decl.cloneBefore({ prop: '-moz-' + decl.prop })\n   *\n   * @return {Node} New node\n   */\n  ;\n\n  _proto.cloneBefore = function cloneBefore(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n  /**\n   * Shortcut to clone the node and insert the resulting cloned node\n   * after the current node.\n   *\n   * @param {object} [overrides] New properties to override in the clone.\n   *\n   * @return {Node} New node.\n   */\n  ;\n\n  _proto.cloneAfter = function cloneAfter(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n  /**\n   * Inserts node(s) before the current node and removes the current node.\n   *\n   * @param {...Node} nodes Mode(s) to replace current one.\n   *\n   * @example\n   * if (atrule.name === 'mixin') {\n   *   atrule.replaceWith(mixinRules[atrule.params])\n   * }\n   *\n   * @return {Node} Current node to methods chain.\n   */\n  ;\n\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n        nodes[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {\n        var node = _nodes[_i];\n        this.parent.insertBefore(this, node);\n      }\n\n      this.remove();\n    }\n\n    return this;\n  }\n  /**\n   * Returns the next child of the node’s parent.\n   * Returns `undefined` if the current node is the last child.\n   *\n   * @return {Node|undefined} Next node.\n   *\n   * @example\n   * if (comment.text === 'delete next') {\n   *   const next = comment.next()\n   *   if (next) {\n   *     next.remove()\n   *   }\n   * }\n   */\n  ;\n\n  _proto.next = function next() {\n    if (!this.parent) return undefined;\n    var index = this.parent.index(this);\n    return this.parent.nodes[index + 1];\n  }\n  /**\n   * Returns the previous child of the node’s parent.\n   * Returns `undefined` if the current node is the first child.\n   *\n   * @return {Node|undefined} Previous node.\n   *\n   * @example\n   * const annotation = decl.prev()\n   * if (annotation.type === 'comment') {\n   *   readAnnotation(annotation.text)\n   * }\n   */\n  ;\n\n  _proto.prev = function prev() {\n    if (!this.parent) return undefined;\n    var index = this.parent.index(this);\n    return this.parent.nodes[index - 1];\n  }\n  /**\n   * Insert new node before current node to current node’s parent.\n   *\n   * Just alias for `node.parent.insertBefore(node, add)`.\n   *\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * decl.before('content: \"\"')\n   */\n  ;\n\n  _proto.before = function before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n  /**\n   * Insert new node after current node to current node’s parent.\n   *\n   * Just alias for `node.parent.insertAfter(node, add)`.\n   *\n   * @param {Node|object|string|Node[]} add New node.\n   *\n   * @return {Node} This node for methods chain.\n   *\n   * @example\n   * decl.after('color: black')\n   */\n  ;\n\n  _proto.after = function after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var fixed = {};\n\n    for (var name in this) {\n      if (!this.hasOwnProperty(name)) continue;\n      if (name === 'parent') continue;\n      var value = this[name];\n\n      if (value instanceof Array) {\n        fixed[name] = value.map(function (i) {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON();\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON();\n      } else {\n        fixed[name] = value;\n      }\n    }\n\n    return fixed;\n  }\n  /**\n   * Returns a {@link Node#raws} value. If the node is missing\n   * the code style property (because the node was manually built or cloned),\n   * PostCSS will try to autodetect the code style property by looking\n   * at other nodes in the tree.\n   *\n   * @param {string} prop          Name of code style property.\n   * @param {string} [defaultType] Name of default value, it can be missed\n   *                               if the value is the same as prop.\n   *\n   * @example\n   * const root = postcss.parse('a { background: white }')\n   * root.nodes[0].append({ prop: 'color', value: 'black' })\n   * root.nodes[0].nodes[1].raws.before   //=> undefined\n   * root.nodes[0].nodes[1].raw('before') //=> ' '\n   *\n   * @return {string} Code style value.\n   */\n  ;\n\n  _proto.raw = function raw(prop, defaultType) {\n    var str = new _stringifier.default();\n    return str.raw(this, prop, defaultType);\n  }\n  /**\n   * Finds the Root instance of the node’s tree.\n   *\n   * @example\n   * root.nodes[0].nodes[0].root() === root\n   *\n   * @return {Root} Root parent.\n   */\n  ;\n\n  _proto.root = function root() {\n    var result = this;\n\n    while (result.parent) {\n      result = result.parent;\n    }\n\n    return result;\n  }\n  /**\n   * Clear the code style properties for the node and its children.\n   *\n   * @param {boolean} [keepBetween] Keep the raws.between symbols.\n   *\n   * @return {undefined}\n   *\n   * @example\n   * node.raws.before  //=> ' '\n   * node.cleanRaws()\n   * node.raws.before  //=> undefined\n   */\n  ;\n\n  _proto.cleanRaws = function cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  };\n\n  _proto.positionInside = function positionInside(index) {\n    var string = this.toString();\n    var column = this.source.start.column;\n    var line = this.source.start.line;\n\n    for (var i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n\n    return {\n      line: line,\n      column: column\n    };\n  };\n\n  _proto.positionBy = function positionBy(opts) {\n    var pos = this.source.start;\n\n    if (opts.index) {\n      pos = this.positionInside(opts.index);\n    } else if (opts.word) {\n      var index = this.toString().indexOf(opts.word);\n      if (index !== -1) pos = this.positionInside(index);\n    }\n\n    return pos;\n  }\n  /**\n   * @memberof Node#\n   * @member {string} type String representing the node’s type.\n   *                       Possible values are `root`, `atrule`, `rule`,\n   *                       `decl`, or `comment`.\n   *\n   * @example\n   * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'\n   */\n\n  /**\n   * @memberof Node#\n   * @member {Container} parent The node’s parent node.\n   *\n   * @example\n   * root.nodes[0].parent === root\n   */\n\n  /**\n   * @memberof Node#\n   * @member {source} source The input source of the node.\n   *\n   * The property is used in source map generation.\n   *\n   * If you create a node manually (e.g., with `postcss.decl()`),\n   * that node will not have a `source` property and will be absent\n   * from the source map. For this reason, the plugin developer should\n   * consider cloning nodes to create new ones (in which case the new node’s\n   * source will reference the original, cloned node) or setting\n   * the `source` property manually.\n   *\n   * ```js\n   * // Bad\n   * const prefixed = postcss.decl({\n   *   prop: '-moz-' + decl.prop,\n   *   value: decl.value\n   * })\n   *\n   * // Good\n   * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })\n   * ```\n   *\n   * ```js\n   * if (atrule.name === 'add-link') {\n   *   const rule = postcss.rule({ selector: 'a', source: atrule.source })\n   *   atrule.parent.insertBefore(atrule, rule)\n   * }\n   * ```\n   *\n   * @example\n   * decl.source.input.from //=> '/home/ai/a.sass'\n   * decl.source.start      //=> { line: 10, column: 2 }\n   * decl.source.end        //=> { line: 10, column: 12 }\n   */\n\n  /**\n   * @memberof Node#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `before`: the space symbols before the node. It also stores `*`\n   *   and `_` symbols before the declaration (IE hack).\n   * * `after`: the space symbols after the last child of the node\n   *   to the end of the node.\n   * * `between`: the symbols between the property and value\n   *   for declarations, selector and `{` for rules, or last parameter\n   *   and `{` for at-rules.\n   * * `semicolon`: contains true if the last child has\n   *   an (optional) semicolon.\n   * * `afterName`: the space between the at-rule name and its parameters.\n   * * `left`: the space symbols between `/*` and the comment’s text.\n   * * `right`: the space symbols between the comment’s text\n   *   and <code>*&#47;</code>.\n   * * `important`: the content of the important statement,\n   *   if it is not just `!important`.\n   *\n   * PostCSS cleans selectors, declaration values and at-rule parameters\n   * from comments and extra spaces, but it stores origin content in raws\n   * properties. As such, if you don’t change a declaration’s value,\n   * PostCSS will use the raw value with comments.\n   *\n   * @example\n   * const root = postcss.parse('a {\\n  color:black\\n}')\n   * root.first.first.raws //=> { before: '\\n  ', between: ':' }\n   */\n  ;\n\n  return Node;\n}();\n\nvar _default = Node;\n/**\n * @typedef {object} position\n * @property {number} line   Source line in file.\n * @property {number} column Source column in file.\n */\n\n/**\n * @typedef {object} source\n * @property {Input} input    {@link Input} with input file\n * @property {position} start The starting position of the node’s source.\n * @property {position} end   The ending position of the node’s source.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nvar _input = _interopRequireDefault(require(\"./input\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(css, opts) {\n  var input = new _input.default(css, opts);\n  var parser = new _parser.default(input);\n\n  try {\n    parser.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n        }\n      }\n    }\n\n    throw e;\n  }\n\n  return parser.root;\n}\n\nvar _default = parse;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLmVzNiJdLCJuYW1lcyI6WyJwYXJzZSIsImNzcyIsIm9wdHMiLCJpbnB1dCIsIklucHV0IiwicGFyc2VyIiwiUGFyc2VyIiwiZSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIm1lc3NhZ2UiLCJyb290Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOzs7O0FBRUEsU0FBU0EsS0FBVCxDQUFnQkMsR0FBaEIsRUFBcUJDLElBQXJCLEVBQTJCO0FBQ3pCLE1BQUlDLEtBQUssR0FBRyxJQUFJQyxjQUFKLENBQVVILEdBQVYsRUFBZUMsSUFBZixDQUFaO0FBQ0EsTUFBSUcsTUFBTSxHQUFHLElBQUlDLGVBQUosQ0FBV0gsS0FBWCxDQUFiOztBQUNBLE1BQUk7QUFDRkUsSUFBQUEsTUFBTSxDQUFDTCxLQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9PLENBQVAsRUFBVTtBQUNWLFFBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLFVBQUlILENBQUMsQ0FBQ0ksSUFBRixLQUFXLGdCQUFYLElBQStCVCxJQUEvQixJQUF1Q0EsSUFBSSxDQUFDVSxJQUFoRCxFQUFzRDtBQUNwRCxZQUFJLFdBQVdDLElBQVgsQ0FBZ0JYLElBQUksQ0FBQ1UsSUFBckIsQ0FBSixFQUFnQztBQUM5QkwsVUFBQUEsQ0FBQyxDQUFDTyxPQUFGLElBQWEsb0NBQ0EsMkJBREEsR0FFQSx3Q0FGYjtBQUdELFNBSkQsTUFJTyxJQUFJLFVBQVVELElBQVYsQ0FBZVgsSUFBSSxDQUFDVSxJQUFwQixDQUFKLEVBQStCO0FBQ3BDTCxVQUFBQSxDQUFDLENBQUNPLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0QsU0FKTSxNQUlBLElBQUksV0FBV0QsSUFBWCxDQUFnQlgsSUFBSSxDQUFDVSxJQUFyQixDQUFKLEVBQWdDO0FBQ3JDTCxVQUFBQSxDQUFDLENBQUNPLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0Q7QUFDRjtBQUNGOztBQUNELFVBQU1QLENBQU47QUFDRDs7QUFFRCxTQUFPRixNQUFNLENBQUNVLElBQWQ7QUFDRDs7ZUFFY2YsSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZXIgZnJvbSAnLi9wYXJzZXInXG5pbXBvcnQgSW5wdXQgZnJvbSAnLi9pbnB1dCdcblxuZnVuY3Rpb24gcGFyc2UgKGNzcywgb3B0cykge1xuICBsZXQgaW5wdXQgPSBuZXcgSW5wdXQoY3NzLCBvcHRzKVxuICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcihpbnB1dClcbiAgdHJ5IHtcbiAgICBwYXJzZXIucGFyc2UoKVxuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChlLm5hbWUgPT09ICdDc3NTeW50YXhFcnJvcicgJiYgb3B0cyAmJiBvcHRzLmZyb20pIHtcbiAgICAgICAgaWYgKC9cXC5zY3NzJC9pLnRlc3Qob3B0cy5mcm9tKSkge1xuICAgICAgICAgIGUubWVzc2FnZSArPSAnXFxuWW91IHRyaWVkIHRvIHBhcnNlIFNDU1Mgd2l0aCAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLXNjc3MgcGFyc2VyJ1xuICAgICAgICB9IGVsc2UgaWYgKC9cXC5zYXNzL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9ICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgU2FzcyB3aXRoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3Mtc2FzcyBwYXJzZXInXG4gICAgICAgIH0gZWxzZSBpZiAoL1xcLmxlc3MkL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9ICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgTGVzcyB3aXRoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3MtbGVzcyBwYXJzZXInXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgZVxuICB9XG5cbiAgcmV0dXJuIHBhcnNlci5yb290XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlXG4iXSwiZmlsZSI6InBhcnNlLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _declaration = _interopRequireDefault(require(\"./declaration\"));\n\nvar _tokenize = _interopRequireDefault(require(\"./tokenize\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _atRule = _interopRequireDefault(require(\"./at-rule\"));\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nvar _rule = _interopRequireDefault(require(\"./rule\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(input) {\n    this.input = input;\n    this.root = new _root.default();\n    this.current = this.root;\n    this.spaces = '';\n    this.semicolon = false;\n    this.createTokenizer();\n    this.root.source = {\n      input: input,\n      start: {\n        line: 1,\n        column: 1\n      }\n    };\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.createTokenizer = function createTokenizer() {\n    this.tokenizer = (0, _tokenize.default)(this.input);\n  };\n\n  _proto.parse = function parse() {\n    var token;\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1];\n          break;\n\n        case ';':\n          this.freeSemicolon(token);\n          break;\n\n        case '}':\n          this.end(token);\n          break;\n\n        case 'comment':\n          this.comment(token);\n          break;\n\n        case 'at-word':\n          this.atrule(token);\n          break;\n\n        case '{':\n          this.emptyRule(token);\n          break;\n\n        default:\n          this.other(token);\n          break;\n      }\n    }\n\n    this.endFile();\n  };\n\n  _proto.comment = function comment(token) {\n    var node = new _comment.default();\n    this.init(node, token[2], token[3]);\n    node.source.end = {\n      line: token[4],\n      column: token[5]\n    };\n    var text = token[1].slice(2, -2);\n\n    if (/^\\s*$/.test(text)) {\n      node.text = '';\n      node.raws.left = text;\n      node.raws.right = '';\n    } else {\n      var match = text.match(/^(\\s*)([^]*[^\\s])(\\s*)$/);\n      node.text = match[2];\n      node.raws.left = match[1];\n      node.raws.right = match[3];\n    }\n  };\n\n  _proto.emptyRule = function emptyRule(token) {\n    var node = new _rule.default();\n    this.init(node, token[2], token[3]);\n    node.selector = '';\n    node.raws.between = '';\n    this.current = node;\n  };\n\n  _proto.other = function other(start) {\n    var end = false;\n    var type = null;\n    var colon = false;\n    var bracket = null;\n    var brackets = [];\n    var tokens = [];\n    var token = start;\n\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token;\n        brackets.push(type === '(' ? ')' : ']');\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens);\n            return;\n          } else {\n            break;\n          }\n        } else if (type === '{') {\n          this.rule(tokens);\n          return;\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break;\n        } else if (type === ':') {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n\n      token = this.tokenizer.nextToken();\n    }\n\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n    if (end && colon) {\n      while (tokens.length) {\n        token = tokens[tokens.length - 1][0];\n        if (token !== 'space' && token !== 'comment') break;\n        this.tokenizer.back(tokens.pop());\n      }\n\n      this.decl(tokens);\n    } else {\n      this.unknownWord(tokens);\n    }\n  };\n\n  _proto.rule = function rule(tokens) {\n    tokens.pop();\n    var node = new _rule.default();\n    this.init(node, tokens[0][2], tokens[0][3]);\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node, 'selector', tokens);\n    this.current = node;\n  };\n\n  _proto.decl = function decl(tokens) {\n    var node = new _declaration.default();\n    this.init(node);\n    var last = tokens[tokens.length - 1];\n\n    if (last[0] === ';') {\n      this.semicolon = true;\n      tokens.pop();\n    }\n\n    if (last[4]) {\n      node.source.end = {\n        line: last[4],\n        column: last[5]\n      };\n    } else {\n      node.source.end = {\n        line: last[2],\n        column: last[3]\n      };\n    }\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node.raws.before += tokens.shift()[1];\n    }\n\n    node.source.start = {\n      line: tokens[0][2],\n      column: tokens[0][3]\n    };\n    node.prop = '';\n\n    while (tokens.length) {\n      var type = tokens[0][0];\n\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break;\n      }\n\n      node.prop += tokens.shift()[1];\n    }\n\n    node.raws.between = '';\n    var token;\n\n    while (tokens.length) {\n      token = tokens.shift();\n\n      if (token[0] === ':') {\n        node.raws.between += token[1];\n        break;\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n\n        node.raws.between += token[1];\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0];\n      node.prop = node.prop.slice(1);\n    }\n\n    node.raws.between += this.spacesAndCommentsFromStart(tokens);\n    this.precheckMissedSemicolon(tokens);\n\n    for (var i = tokens.length - 1; i > 0; i--) {\n      token = tokens[i];\n\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true;\n        var string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== ' !important') node.raws.important = string;\n        break;\n      } else if (token[1].toLowerCase() === 'important') {\n        var cache = tokens.slice(0);\n        var str = '';\n\n        for (var j = i; j > 0; j--) {\n          var _type = cache[j][0];\n\n          if (str.trim().indexOf('!') === 0 && _type !== 'space') {\n            break;\n          }\n\n          str = cache.pop()[1] + str;\n        }\n\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true;\n          node.raws.important = str;\n          tokens = cache;\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break;\n      }\n    }\n\n    this.raw(node, 'value', tokens);\n    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);\n  };\n\n  _proto.atrule = function atrule(token) {\n    var node = new _atRule.default();\n    node.name = token[1].slice(1);\n\n    if (node.name === '') {\n      this.unnamedAtrule(node, token);\n    }\n\n    this.init(node, token[2], token[3]);\n    var prev;\n    var shift;\n    var last = false;\n    var open = false;\n    var params = [];\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n\n      if (token[0] === ';') {\n        node.source.end = {\n          line: token[2],\n          column: token[3]\n        };\n        this.semicolon = true;\n        break;\n      } else if (token[0] === '{') {\n        open = true;\n        break;\n      } else if (token[0] === '}') {\n        if (params.length > 0) {\n          shift = params.length - 1;\n          prev = params[shift];\n\n          while (prev && prev[0] === 'space') {\n            prev = params[--shift];\n          }\n\n          if (prev) {\n            node.source.end = {\n              line: prev[4],\n              column: prev[5]\n            };\n          }\n        }\n\n        this.end(token);\n        break;\n      } else {\n        params.push(token);\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break;\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params);\n\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node, 'params', params);\n\n      if (last) {\n        token = params[params.length - 1];\n        node.source.end = {\n          line: token[4],\n          column: token[5]\n        };\n        this.spaces = node.raws.between;\n        node.raws.between = '';\n      }\n    } else {\n      node.raws.afterName = '';\n      node.params = '';\n    }\n\n    if (open) {\n      node.nodes = [];\n      this.current = node;\n    }\n  };\n\n  _proto.end = function end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n\n    this.semicolon = false;\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n    this.spaces = '';\n\n    if (this.current.parent) {\n      this.current.source.end = {\n        line: token[2],\n        column: token[3]\n      };\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  };\n\n  _proto.endFile = function endFile() {\n    if (this.current.parent) this.unclosedBlock();\n\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n  };\n\n  _proto.freeSemicolon = function freeSemicolon(token) {\n    this.spaces += token[1];\n\n    if (this.current.nodes) {\n      var prev = this.current.nodes[this.current.nodes.length - 1];\n\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = '';\n      }\n    }\n  } // Helpers\n  ;\n\n  _proto.init = function init(node, line, column) {\n    this.current.push(node);\n    node.source = {\n      start: {\n        line: line,\n        column: column\n      },\n      input: this.input\n    };\n    node.raws.before = this.spaces;\n    this.spaces = '';\n    if (node.type !== 'comment') this.semicolon = false;\n  };\n\n  _proto.raw = function raw(node, prop, tokens) {\n    var token, type;\n    var length = tokens.length;\n    var value = '';\n    var clean = true;\n    var next, prev;\n    var pattern = /^([.|#])?([\\w])+/i;\n\n    for (var i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n\n      if (type === 'comment' && node.type === 'rule') {\n        prev = tokens[i - 1];\n        next = tokens[i + 1];\n\n        if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {\n          value += token[1];\n        } else {\n          clean = false;\n        }\n\n        continue;\n      }\n\n      if (type === 'comment' || type === 'space' && i === length - 1) {\n        clean = false;\n      } else {\n        value += token[1];\n      }\n    }\n\n    if (!clean) {\n      var raw = tokens.reduce(function (all, i) {\n        return all + i[1];\n      }, '');\n      node.raws[prop] = {\n        value: value,\n        raw: raw\n      };\n    }\n\n    node[prop] = value;\n  };\n\n  _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {\n    var lastTokenType;\n    var spaces = '';\n\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n\n    return spaces;\n  };\n\n  _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {\n    var next;\n    var spaces = '';\n\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== 'space' && next !== 'comment') break;\n      spaces += tokens.shift()[1];\n    }\n\n    return spaces;\n  };\n\n  _proto.spacesFromEnd = function spacesFromEnd(tokens) {\n    var lastTokenType;\n    var spaces = '';\n\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space') break;\n      spaces = tokens.pop()[1] + spaces;\n    }\n\n    return spaces;\n  };\n\n  _proto.stringFrom = function stringFrom(tokens, from) {\n    var result = '';\n\n    for (var i = from; i < tokens.length; i++) {\n      result += tokens[i][1];\n    }\n\n    tokens.splice(from, tokens.length - from);\n    return result;\n  };\n\n  _proto.colon = function colon(tokens) {\n    var brackets = 0;\n    var token, type, prev;\n\n    for (var i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      type = token[0];\n\n      if (type === '(') {\n        brackets += 1;\n      }\n\n      if (type === ')') {\n        brackets -= 1;\n      }\n\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue;\n        } else {\n          return i;\n        }\n      }\n\n      prev = token;\n    }\n\n    return false;\n  } // Errors\n  ;\n\n  _proto.unclosedBracket = function unclosedBracket(bracket) {\n    throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);\n  };\n\n  _proto.unknownWord = function unknownWord(tokens) {\n    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);\n  };\n\n  _proto.unexpectedClose = function unexpectedClose(token) {\n    throw this.input.error('Unexpected }', token[2], token[3]);\n  };\n\n  _proto.unclosedBlock = function unclosedBlock() {\n    var pos = this.current.source.start;\n    throw this.input.error('Unclosed block', pos.line, pos.column);\n  };\n\n  _proto.doubleColon = function doubleColon(token) {\n    throw this.input.error('Double colon', token[2], token[3]);\n  };\n\n  _proto.unnamedAtrule = function unnamedAtrule(node, token) {\n    throw this.input.error('At-rule without name', token[2], token[3]);\n  };\n\n  _proto.precheckMissedSemicolon = function precheckMissedSemicolon()\n  /* tokens */\n  {// Hook for Safe Parser\n  };\n\n  _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens) {\n    var colon = this.colon(tokens);\n    if (colon === false) return;\n    var founded = 0;\n    var token;\n\n    for (var j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n\n      if (token[0] !== 'space') {\n        founded += 1;\n        if (founded === 2) break;\n      }\n    }\n\n    throw this.input.error('Missed semicolon', token[2], token[3]);\n  };\n\n  return Parser;\n}();\n\nexports.default = Parser;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _declaration = _interopRequireDefault(require(\"./declaration\"));\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _atRule = _interopRequireDefault(require(\"./at-rule\"));\n\nvar _vendor = _interopRequireDefault(require(\"./vendor\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _list = _interopRequireDefault(require(\"./list\"));\n\nvar _rule = _interopRequireDefault(require(\"./rule\"));\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create a new {@link Processor} instance that will apply `plugins`\n * as CSS processors.\n *\n * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n *        See {@link Processor#use} for plugin format.\n *\n * @return {Processor} Processor to process multiple CSS.\n *\n * @example\n * import postcss from 'postcss'\n *\n * postcss(plugins).process(css, { from, to }).then(result => {\n *   console.log(result.css)\n * })\n *\n * @namespace postcss\n */\nfunction postcss() {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n\n  return new _processor.default(plugins);\n}\n/**\n * Creates a PostCSS plugin with a standard API.\n *\n * The newly-wrapped function will provide both the name and PostCSS\n * version of the plugin.\n *\n * ```js\n * const processor = postcss([replace])\n * processor.plugins[0].postcssPlugin  //=> 'postcss-replace'\n * processor.plugins[0].postcssVersion //=> '6.0.0'\n * ```\n *\n * The plugin function receives 2 arguments: {@link Root}\n * and {@link Result} instance. The function should mutate the provided\n * `Root` node. Alternatively, you can create a new `Root` node\n * and override the `result.root` property.\n *\n * ```js\n * const cleaner = postcss.plugin('postcss-cleaner', () => {\n *   return (root, result) => {\n *     result.root = postcss.root()\n *   }\n * })\n * ```\n *\n * As a convenience, plugins also expose a `process` method so that you can use\n * them as standalone tools.\n *\n * ```js\n * cleaner.process(css, processOpts, pluginOpts)\n * // This is equivalent to:\n * postcss([ cleaner(pluginOpts) ]).process(css, processOpts)\n * ```\n *\n * Asynchronous plugins should return a `Promise` instance.\n *\n * ```js\n * postcss.plugin('postcss-import', () => {\n *   return (root, result) => {\n *     return new Promise( (resolve, reject) => {\n *       fs.readFile('base.css', (base) => {\n *         root.prepend(base)\n *         resolve()\n *       })\n *     })\n *   }\n * })\n * ```\n *\n * Add warnings using the {@link Node#warn} method.\n * Send data to other plugins using the {@link Result#messages} array.\n *\n * ```js\n * postcss.plugin('postcss-caniuse-test', () => {\n *   return (root, result) => {\n *     root.walkDecls(decl => {\n *       if (!caniuse.support(decl.prop)) {\n *         decl.warn(result, 'Some browsers do not support ' + decl.prop)\n *       }\n *     })\n *   }\n * })\n * ```\n *\n * @param {string} name          PostCSS plugin name. Same as in `name`\n *                               property in `package.json`. It will be saved\n *                               in `plugin.postcssPlugin` property.\n * @param {function} initializer Will receive plugin options\n *                               and should return {@link pluginFunction}\n *\n * @return {Plugin} PostCSS plugin.\n */\n\n\npostcss.plugin = function plugin(name, initializer) {\n  function creator() {\n    var transformer = initializer.apply(void 0, arguments);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new _processor.default().version;\n    return transformer;\n  }\n\n  var cache;\n  Object.defineProperty(creator, 'postcss', {\n    get: function get() {\n      if (!cache) cache = creator();\n      return cache;\n    }\n  });\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts);\n  };\n\n  return creator;\n};\n/**\n * Default function to convert a node tree into a CSS string.\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n *\n * @function\n */\n\n\npostcss.stringify = _stringify.default;\n/**\n * Parses source css and returns a new {@link Root} node,\n * which contains the source CSS nodes.\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST.\n *\n * @example\n * // Simple CSS concatenation with source map support\n * const root1 = postcss.parse(css1, { from: file1 })\n * const root2 = postcss.parse(css2, { from: file2 })\n * root1.append(root2).toResult().css\n *\n * @function\n */\n\npostcss.parse = _parse.default;\n/**\n * Contains the {@link vendor} module.\n *\n * @type {vendor}\n *\n * @example\n * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']\n */\n\npostcss.vendor = _vendor.default;\n/**\n * Contains the {@link list} module.\n *\n * @member {list}\n *\n * @example\n * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']\n */\n\npostcss.list = _list.default;\n/**\n * Creates a new {@link Comment} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Comment} New comment node\n *\n * @example\n * postcss.comment({ text: 'test' })\n */\n\npostcss.comment = function (defaults) {\n  return new _comment.default(defaults);\n};\n/**\n * Creates a new {@link AtRule} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {AtRule} new at-rule node\n *\n * @example\n * postcss.atRule({ name: 'charset' }).toString() //=> \"@charset\"\n */\n\n\npostcss.atRule = function (defaults) {\n  return new _atRule.default(defaults);\n};\n/**\n * Creates a new {@link Declaration} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Declaration} new declaration node\n *\n * @example\n * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> \"color: red\"\n */\n\n\npostcss.decl = function (defaults) {\n  return new _declaration.default(defaults);\n};\n/**\n * Creates a new {@link Rule} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Rule} new rule node\n *\n * @example\n * postcss.rule({ selector: 'a' }).toString() //=> \"a {\\n}\"\n */\n\n\npostcss.rule = function (defaults) {\n  return new _rule.default(defaults);\n};\n/**\n * Creates a new {@link Root} node.\n *\n * @param {object} [defaults] Properties for the new node.\n *\n * @return {Root} new root node.\n *\n * @example\n * postcss.root({ after: '\\n' }).toString() //=> \"\\n\"\n */\n\n\npostcss.root = function (defaults) {\n  return new _root.default(defaults);\n};\n\nvar _default = postcss;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString();\n  } else {\n    return window.atob(str);\n  }\n}\n/**\n * Source map information from input CSS.\n * For example, source map after Sass compiler.\n *\n * This class will automatically find source map in input CSS or in file system\n * near input file (according `from` option).\n *\n * @example\n * const root = postcss.parse(css, { from: 'a.sass.css' })\n * root.input.map //=> PreviousMap\n */\n\n\nvar PreviousMap = /*#__PURE__*/function () {\n  /**\n   * @param {string}         css    Input CSS source.\n   * @param {processOptions} [opts] {@link Processor#process} options.\n   */\n  function PreviousMap(css, opts) {\n    this.loadAnnotation(css);\n    /**\n     * Was source map inlined by data-uri to input CSS.\n     *\n     * @type {boolean}\n     */\n\n    this.inline = this.startWith(this.annotation, 'data:');\n    var prev = opts.map ? opts.map.prev : undefined;\n    var text = this.loadMap(opts.from, prev);\n    if (text) this.text = text;\n  }\n  /**\n   * Create a instance of `SourceMapGenerator` class\n   * from the `source-map` library to work with source map information.\n   *\n   * It is lazy method, so it will create object only on first call\n   * and then it will use cache.\n   *\n   * @return {SourceMapGenerator} Object with source map information.\n   */\n\n\n  var _proto = PreviousMap.prototype;\n\n  _proto.consumer = function consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new _sourceMap.default.SourceMapConsumer(this.text);\n    }\n\n    return this.consumerCache;\n  }\n  /**\n   * Does source map contains `sourcesContent` with input source text.\n   *\n   * @return {boolean} Is `sourcesContent` present.\n   */\n  ;\n\n  _proto.withContent = function withContent() {\n    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n  };\n\n  _proto.startWith = function startWith(string, start) {\n    if (!string) return false;\n    return string.substr(0, start.length) === start;\n  };\n\n  _proto.getAnnotationURL = function getAnnotationURL(sourceMapString) {\n    return sourceMapString.match(/\\/\\*\\s*# sourceMappingURL=(.*)\\s*\\*\\//)[1].trim();\n  };\n\n  _proto.loadAnnotation = function loadAnnotation(css) {\n    var annotations = css.match(/\\/\\*\\s*# sourceMappingURL=(.*)\\s*\\*\\//mg);\n\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      var lastAnnotation = annotations[annotations.length - 1];\n\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation);\n      }\n    }\n  };\n\n  _proto.decodeInline = function decodeInline(text) {\n    var baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    var baseUri = /^data:application\\/json;base64,/;\n    var uri = 'data:application/json,';\n\n    if (this.startWith(text, uri)) {\n      return decodeURIComponent(text.substr(uri.length));\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length));\n    }\n\n    var encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding);\n  };\n\n  _proto.loadMap = function loadMap(file, prev) {\n    if (prev === false) return false;\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev;\n      } else if (typeof prev === 'function') {\n        var prevPath = prev(file);\n\n        if (prevPath && _fs.default.existsSync && _fs.default.existsSync(prevPath)) {\n          return _fs.default.readFileSync(prevPath, 'utf-8').toString().trim();\n        } else {\n          throw new Error('Unable to load previous source map: ' + prevPath.toString());\n        }\n      } else if (prev instanceof _sourceMap.default.SourceMapConsumer) {\n        return _sourceMap.default.SourceMapGenerator.fromSourceMap(prev).toString();\n      } else if (prev instanceof _sourceMap.default.SourceMapGenerator) {\n        return prev.toString();\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev);\n      } else {\n        throw new Error('Unsupported previous source map format: ' + prev.toString());\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation);\n    } else if (this.annotation) {\n      var map = this.annotation;\n      if (file) map = _path.default.join(_path.default.dirname(file), map);\n      this.root = _path.default.dirname(map);\n\n      if (_fs.default.existsSync && _fs.default.existsSync(map)) {\n        return _fs.default.readFileSync(map, 'utf-8').toString().trim();\n      } else {\n        return false;\n      }\n    }\n  };\n\n  _proto.isMap = function isMap(map) {\n    if (typeof map !== 'object') return false;\n    return typeof map.mappings === 'string' || typeof map._mappings === 'string';\n  };\n\n  return PreviousMap;\n}();\n\nvar _default = PreviousMap;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _lazyResult = _interopRequireDefault(require(\"./lazy-result\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Contains plugins to process CSS. Create one `Processor` instance,\n * initialize its plugins, and then use that instance on numerous CSS files.\n *\n * @example\n * const processor = postcss([autoprefixer, precss])\n * processor.process(css1).then(result => console.log(result.css))\n * processor.process(css2).then(result => console.log(result.css))\n */\nvar Processor = /*#__PURE__*/function () {\n  /**\n   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.\n   *        See {@link Processor#use} for plugin format.\n   */\n  function Processor(plugins) {\n    if (plugins === void 0) {\n      plugins = [];\n    }\n\n    /**\n     * Current PostCSS version.\n     *\n     * @type {string}\n     *\n     * @example\n     * if (result.processor.version.split('.')[0] !== '6') {\n     *   throw new Error('This plugin works only with PostCSS 6')\n     * }\n     */\n    this.version = '7.0.34';\n    /**\n     * Plugins added to this processor.\n     *\n     * @type {pluginFunction[]}\n     *\n     * @example\n     * const processor = postcss([autoprefixer, precss])\n     * processor.plugins.length //=> 2\n     */\n\n    this.plugins = this.normalize(plugins);\n  }\n  /**\n   * Adds a plugin to be used as a CSS processor.\n   *\n   * PostCSS plugin can be in 4 formats:\n   * * A plugin created by {@link postcss.plugin} method.\n   * * A function. PostCSS will pass the function a @{link Root}\n   *   as the first argument and current {@link Result} instance\n   *   as the second.\n   * * An object with a `postcss` method. PostCSS will use that method\n   *   as described in #2.\n   * * Another {@link Processor} instance. PostCSS will copy plugins\n   *   from that instance into this one.\n   *\n   * Plugins can also be added by passing them as arguments when creating\n   * a `postcss` instance (see [`postcss(plugins)`]).\n   *\n   * Asynchronous plugins should return a `Promise` instance.\n   *\n   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin\n   *                                                 or {@link Processor}\n   *                                                 with plugins.\n   *\n   * @example\n   * const processor = postcss()\n   *   .use(autoprefixer)\n   *   .use(precss)\n   *\n   * @return {Processes} Current processor to make methods chain.\n   */\n\n\n  var _proto = Processor.prototype;\n\n  _proto.use = function use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this;\n  }\n  /**\n   * Parses source CSS and returns a {@link LazyResult} Promise proxy.\n   * Because some plugins can be asynchronous it doesn’t make\n   * any transformations. Transformations will be applied\n   * in the {@link LazyResult} methods.\n   *\n   * @param {string|toString|Result} css String with input CSS or any object\n   *                                     with a `toString()` method,\n   *                                     like a Buffer. Optionally, send\n   *                                     a {@link Result} instance\n   *                                     and the processor will take\n   *                                     the {@link Root} from it.\n   * @param {processOptions} [opts]      Options.\n   *\n   * @return {LazyResult} Promise proxy.\n   *\n   * @example\n   * processor.process(css, { from: 'a.css', to: 'a.out.css' })\n   *   .then(result => {\n   *      console.log(result.css)\n   *   })\n   */\n  ;\n\n  _proto.process = function (_process) {\n    function process(_x) {\n      return _process.apply(this, arguments);\n    }\n\n    process.toString = function () {\n      return _process.toString();\n    };\n\n    return process;\n  }(function (css, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');\n        }\n      }\n    }\n\n    return new _lazyResult.default(this, css, opts);\n  });\n\n  _proto.normalize = function normalize(plugins) {\n    var normalized = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(plugins), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      if (i.postcss === true) {\n        var plugin = i();\n        throw new Error('PostCSS plugin ' + plugin.postcssPlugin + ' requires PostCSS 8. Update PostCSS or downgrade this plugin.');\n      }\n\n      if (i.postcss) i = i.postcss;\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n        }\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        throw new Error('PostCSS plugin ' + i.postcssPlugin + ' requires PostCSS 8. Update PostCSS or downgrade this plugin.');\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin');\n      }\n    }\n\n    return normalized;\n  };\n\n  return Processor;\n}();\n\nvar _default = Processor;\n/**\n * @callback builder\n * @param {string} part          Part of generated CSS connected to this node.\n * @param {Node}   node          AST node.\n * @param {\"start\"|\"end\"} [type] Node’s part type.\n */\n\n/**\n * @callback parser\n *\n * @param {string|toString} css   String with input CSS or any object\n *                                with toString() method, like a Buffer.\n * @param {processOptions} [opts] Options with only `from` and `map` keys.\n *\n * @return {Root} PostCSS AST\n */\n\n/**\n * @callback stringifier\n *\n * @param {Node} node       Start node for stringifing. Usually {@link Root}.\n * @param {builder} builder Function to concatenate CSS from node’s parts\n *                          or generate string and source map.\n *\n * @return {void}\n */\n\n/**\n * @typedef {object} syntax\n * @property {parser} parse          Function to generate AST by string.\n * @property {stringifier} stringify Function to generate string by AST.\n */\n\n/**\n * @typedef {object} toString\n * @property {function} toString\n */\n\n/**\n * @callback pluginFunction\n * @param {Root} root     Parsed input CSS.\n * @param {Result} result Result to set warnings or check other plugins.\n */\n\n/**\n * @typedef {object} Plugin\n * @property {function} postcss PostCSS plugin function.\n */\n\n/**\n * @typedef {object} processOptions\n * @property {string} from             The path of the CSS source file.\n *                                     You should always set `from`,\n *                                     because it is used in source map\n *                                     generation and syntax error messages.\n * @property {string} to               The path where you’ll put the output\n *                                     CSS file. You should always set `to`\n *                                     to generate correct source maps.\n * @property {parser} parser           Function to generate AST by string.\n * @property {stringifier} stringifier Class to generate string by AST.\n * @property {syntax} syntax           Object with `parse` and `stringify`.\n * @property {object} map              Source map options.\n * @property {boolean} map.inline                    Does source map should\n *                                                   be embedded in the output\n *                                                   CSS as a base64-encoded\n *                                                   comment.\n * @property {string|object|false|function} map.prev Source map content\n *                                                   from a previous\n *                                                   processing step\n *                                                   (for example, Sass).\n *                                                   PostCSS will try to find\n *                                                   previous map automatically,\n *                                                   so you could disable it by\n *                                                   `false` value.\n * @property {boolean} map.sourcesContent            Does PostCSS should set\n *                                                   the origin content to map.\n * @property {string|false} map.annotation           Does PostCSS should set\n *                                                   annotation comment to map.\n * @property {string} map.from                       Override `from` in map’s\n *                                                   sources`.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _warning = _interopRequireDefault(require(\"./warning\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Provides the result of the PostCSS transformations.\n *\n * A Result instance is returned by {@link LazyResult#then}\n * or {@link Root#toResult} methods.\n *\n * @example\n * postcss([autoprefixer]).process(css).then(result => {\n *  console.log(result.css)\n * })\n *\n * @example\n * const result2 = postcss.parse(css).toResult()\n */\nvar Result = /*#__PURE__*/function () {\n  /**\n   * @param {Processor} processor Processor used for this transformation.\n   * @param {Root}      root      Root node after all transformations.\n   * @param {processOptions} opts Options from the {@link Processor#process}\n   *                              or {@link Root#toResult}.\n   */\n  function Result(processor, root, opts) {\n    /**\n     * The Processor instance used for this transformation.\n     *\n     * @type {Processor}\n     *\n     * @example\n     * for (const plugin of result.processor.plugins) {\n     *   if (plugin.postcssPlugin === 'postcss-bad') {\n     *     throw 'postcss-good is incompatible with postcss-bad'\n     *   }\n     * })\n     */\n    this.processor = processor;\n    /**\n     * Contains messages from plugins (e.g., warnings or custom messages).\n     * Each message should have type and plugin properties.\n     *\n     * @type {Message[]}\n     *\n     * @example\n     * postcss.plugin('postcss-min-browser', () => {\n     *   return (root, result) => {\n     *     const browsers = detectMinBrowsersByCanIUse(root)\n     *     result.messages.push({\n     *       type: 'min-browser',\n     *       plugin: 'postcss-min-browser',\n     *       browsers\n     *     })\n     *   }\n     * })\n     */\n\n    this.messages = [];\n    /**\n     * Root node after all transformations.\n     *\n     * @type {Root}\n     *\n     * @example\n     * root.toResult().root === root\n     */\n\n    this.root = root;\n    /**\n     * Options from the {@link Processor#process} or {@link Root#toResult} call\n     * that produced this Result instance.\n     *\n     * @type {processOptions}\n     *\n     * @example\n     * root.toResult(opts).opts === opts\n     */\n\n    this.opts = opts;\n    /**\n     * A CSS string representing of {@link Result#root}.\n     *\n     * @type {string}\n     *\n     * @example\n     * postcss.parse('a{}').toResult().css //=> \"a{}\"\n     */\n\n    this.css = undefined;\n    /**\n     * An instance of `SourceMapGenerator` class from the `source-map` library,\n     * representing changes to the {@link Result#root} instance.\n     *\n     * @type {SourceMapGenerator}\n     *\n     * @example\n     * result.map.toJSON() //=> { version: 3, file: 'a.css', … }\n     *\n     * @example\n     * if (result.map) {\n     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())\n     * }\n     */\n\n    this.map = undefined;\n  }\n  /**\n   * Returns for @{link Result#css} content.\n   *\n   * @example\n   * result + '' === result.css\n   *\n   * @return {string} String representing of {@link Result#root}.\n   */\n\n\n  var _proto = Result.prototype;\n\n  _proto.toString = function toString() {\n    return this.css;\n  }\n  /**\n   * Creates an instance of {@link Warning} and adds it\n   * to {@link Result#messages}.\n   *\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   *\n   * @return {Warning} Created warning.\n   */\n  ;\n\n  _proto.warn = function warn(text, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n\n    var warning = new _warning.default(text, opts);\n    this.messages.push(warning);\n    return warning;\n  }\n  /**\n     * Returns warnings from plugins. Filters {@link Warning} instances\n     * from {@link Result#messages}.\n     *\n     * @example\n     * result.warnings().forEach(warn => {\n     *   console.warn(warn.toString())\n     * })\n     *\n     * @return {Warning[]} Warnings from plugins.\n     */\n  ;\n\n  _proto.warnings = function warnings() {\n    return this.messages.filter(function (i) {\n      return i.type === 'warning';\n    });\n  }\n  /**\n   * An alias for the {@link Result#css} property.\n   * Use it with syntaxes that generate non-CSS output.\n   *\n   * @type {string}\n   *\n   * @example\n   * result.css === result.content\n   */\n  ;\n\n  _createClass(Result, [{\n    key: \"content\",\n    get: function get() {\n      return this.css;\n    }\n  }]);\n\n  return Result;\n}();\n\nvar _default = Result;\n/**\n * @typedef  {object} Message\n * @property {string} type   Message type.\n * @property {string} plugin Source PostCSS plugin name.\n */\n\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a CSS file and contains all its parsed nodes.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('a{color:black} b{z-index:2}')\n * root.type         //=> 'root'\n * root.nodes.length //=> 2\n */\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n\n  function Root(defaults) {\n    var _this;\n\n    _this = _Container.call(this, defaults) || this;\n    _this.type = 'root';\n    if (!_this.nodes) _this.nodes = [];\n    return _this;\n  }\n\n  var _proto = Root.prototype;\n\n  _proto.removeChild = function removeChild(child, ignore) {\n    var index = this.index(child);\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\n    }\n\n    return _Container.prototype.removeChild.call(this, child);\n  };\n\n  _proto.normalize = function normalize(child, sample, type) {\n    var nodes = _Container.prototype.normalize.call(this, child);\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (var _iterator = _createForOfIteratorHelperLoose(nodes), _step; !(_step = _iterator()).done;) {\n          var node = _step.value;\n          node.raws.before = sample.raws.before;\n        }\n      }\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a {@link Result} instance representing the root’s CSS.\n   *\n   * @param {processOptions} [opts] Options with only `to` and `map` keys.\n   *\n   * @return {Result} Result with current root’s CSS.\n   *\n   * @example\n   * const root1 = postcss.parse(css1, { from: 'a.css' })\n   * const root2 = postcss.parse(css2, { from: 'b.css' })\n   * root1.append(root2)\n   * const result = root1.toResult({ to: 'all.css', map: true })\n   */\n  ;\n\n  _proto.toResult = function toResult(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var LazyResult = require('./lazy-result');\n\n    var Processor = require('./processor');\n\n    var lazy = new LazyResult(new Processor(), this, opts);\n    return lazy.stringify();\n  }\n  /**\n   * @memberof Root#\n   * @member {object} raws Information to generate byte-to-byte equal\n   *                       node string as it was in the origin input.\n   *\n   * Every parser saves its own properties,\n   * but the default CSS parser uses:\n   *\n   * * `after`: the space symbols after the last child to the end of file.\n   * * `semicolon`: is the last child has an (optional) semicolon.\n   *\n   * @example\n   * postcss.parse('a {}\\n').raws //=> { after: '\\n' }\n   * postcss.parse('a {}').raws   //=> { after: '' }\n   */\n  ;\n\n  return Root;\n}(_container.default);\n\nvar _default = Root;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvb3QuZXM2Il0sIm5hbWVzIjpbIlJvb3QiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsInJlbW92ZUNoaWxkIiwiY2hpbGQiLCJpZ25vcmUiLCJpbmRleCIsImxlbmd0aCIsInJhd3MiLCJiZWZvcmUiLCJub3JtYWxpemUiLCJzYW1wbGUiLCJmaXJzdCIsIm5vZGUiLCJ0b1Jlc3VsdCIsIm9wdHMiLCJMYXp5UmVzdWx0IiwicmVxdWlyZSIsIlByb2Nlc3NvciIsImxhenkiLCJzdHJpbmdpZnkiLCJDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Ozs7OztBQUVBOzs7Ozs7Ozs7O0lBVU1BLEk7OztBQUNKLGdCQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLGtDQUFNQSxRQUFOO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLE1BQVo7QUFDQSxRQUFJLENBQUMsTUFBS0MsS0FBVixFQUFpQixNQUFLQSxLQUFMLEdBQWEsRUFBYjtBQUhJO0FBSXRCOzs7O1NBRURDLFcsR0FBQSxxQkFBYUMsS0FBYixFQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsUUFBSUMsS0FBSyxHQUFHLEtBQUtBLEtBQUwsQ0FBV0YsS0FBWCxDQUFaOztBQUVBLFFBQUksQ0FBQ0MsTUFBRCxJQUFXQyxLQUFLLEtBQUssQ0FBckIsSUFBMEIsS0FBS0osS0FBTCxDQUFXSyxNQUFYLEdBQW9CLENBQWxELEVBQXFEO0FBQ25ELFdBQUtMLEtBQUwsQ0FBVyxDQUFYLEVBQWNNLElBQWQsQ0FBbUJDLE1BQW5CLEdBQTRCLEtBQUtQLEtBQUwsQ0FBV0ksS0FBWCxFQUFrQkUsSUFBbEIsQ0FBdUJDLE1BQW5EO0FBQ0Q7O0FBRUQsZ0NBQWFOLFdBQWIsWUFBeUJDLEtBQXpCO0FBQ0QsRzs7U0FFRE0sUyxHQUFBLG1CQUFXTixLQUFYLEVBQWtCTyxNQUFsQixFQUEwQlYsSUFBMUIsRUFBZ0M7QUFDOUIsUUFBSUMsS0FBSyx3QkFBU1EsU0FBVCxZQUFtQk4sS0FBbkIsQ0FBVDs7QUFFQSxRQUFJTyxNQUFKLEVBQVk7QUFDVixVQUFJVixJQUFJLEtBQUssU0FBYixFQUF3QjtBQUN0QixZQUFJLEtBQUtDLEtBQUwsQ0FBV0ssTUFBWCxHQUFvQixDQUF4QixFQUEyQjtBQUN6QkksVUFBQUEsTUFBTSxDQUFDSCxJQUFQLENBQVlDLE1BQVosR0FBcUIsS0FBS1AsS0FBTCxDQUFXLENBQVgsRUFBY00sSUFBZCxDQUFtQkMsTUFBeEM7QUFDRCxTQUZELE1BRU87QUFDTCxpQkFBT0UsTUFBTSxDQUFDSCxJQUFQLENBQVlDLE1BQW5CO0FBQ0Q7QUFDRixPQU5ELE1BTU8sSUFBSSxLQUFLRyxLQUFMLEtBQWVELE1BQW5CLEVBQTJCO0FBQ2hDLDZEQUFpQlQsS0FBakIsd0NBQXdCO0FBQUEsY0FBZlcsSUFBZTtBQUN0QkEsVUFBQUEsSUFBSSxDQUFDTCxJQUFMLENBQVVDLE1BQVYsR0FBbUJFLE1BQU0sQ0FBQ0gsSUFBUCxDQUFZQyxNQUEvQjtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxXQUFPUCxLQUFQO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7O1NBYUFZLFEsR0FBQSxrQkFBVUMsSUFBVixFQUFzQjtBQUFBLFFBQVpBLElBQVk7QUFBWkEsTUFBQUEsSUFBWSxHQUFMLEVBQUs7QUFBQTs7QUFDcEIsUUFBSUMsVUFBVSxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUF4Qjs7QUFDQSxRQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQXZCOztBQUVBLFFBQUlFLElBQUksR0FBRyxJQUFJSCxVQUFKLENBQWUsSUFBSUUsU0FBSixFQUFmLEVBQWdDLElBQWhDLEVBQXNDSCxJQUF0QyxDQUFYO0FBQ0EsV0FBT0ksSUFBSSxDQUFDQyxTQUFMLEVBQVA7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7RUExRGlCQyxrQjs7ZUEyRUp0QixJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcidcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ1NTIGZpbGUgYW5kIGNvbnRhaW5zIGFsbCBpdHMgcGFyc2VkIG5vZGVzLlxuICpcbiAqIEBleHRlbmRzIENvbnRhaW5lclxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYXtjb2xvcjpibGFja30gYnt6LWluZGV4OjJ9JylcbiAqIHJvb3QudHlwZSAgICAgICAgIC8vPT4gJ3Jvb3QnXG4gKiByb290Lm5vZGVzLmxlbmd0aCAvLz0+IDJcbiAqL1xuY2xhc3MgUm9vdCBleHRlbmRzIENvbnRhaW5lciB7XG4gIGNvbnN0cnVjdG9yIChkZWZhdWx0cykge1xuICAgIHN1cGVyKGRlZmF1bHRzKVxuICAgIHRoaXMudHlwZSA9ICdyb290J1xuICAgIGlmICghdGhpcy5ub2RlcykgdGhpcy5ub2RlcyA9IFtdXG4gIH1cblxuICByZW1vdmVDaGlsZCAoY2hpbGQsIGlnbm9yZSkge1xuICAgIGxldCBpbmRleCA9IHRoaXMuaW5kZXgoY2hpbGQpXG5cbiAgICBpZiAoIWlnbm9yZSAmJiBpbmRleCA9PT0gMCAmJiB0aGlzLm5vZGVzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMubm9kZXNbMV0ucmF3cy5iZWZvcmUgPSB0aGlzLm5vZGVzW2luZGV4XS5yYXdzLmJlZm9yZVxuICAgIH1cblxuICAgIHJldHVybiBzdXBlci5yZW1vdmVDaGlsZChjaGlsZClcbiAgfVxuXG4gIG5vcm1hbGl6ZSAoY2hpbGQsIHNhbXBsZSwgdHlwZSkge1xuICAgIGxldCBub2RlcyA9IHN1cGVyLm5vcm1hbGl6ZShjaGlsZClcblxuICAgIGlmIChzYW1wbGUpIHtcbiAgICAgIGlmICh0eXBlID09PSAncHJlcGVuZCcpIHtcbiAgICAgICAgaWYgKHRoaXMubm9kZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgIHNhbXBsZS5yYXdzLmJlZm9yZSA9IHRoaXMubm9kZXNbMV0ucmF3cy5iZWZvcmVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgc2FtcGxlLnJhd3MuYmVmb3JlXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5maXJzdCAhPT0gc2FtcGxlKSB7XG4gICAgICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHtcbiAgICAgICAgICBub2RlLnJhd3MuYmVmb3JlID0gc2FtcGxlLnJhd3MuYmVmb3JlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbm9kZXNcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEge0BsaW5rIFJlc3VsdH0gaW5zdGFuY2UgcmVwcmVzZW50aW5nIHRoZSByb2904oCZcyBDU1MuXG4gICAqXG4gICAqIEBwYXJhbSB7cHJvY2Vzc09wdGlvbnN9IFtvcHRzXSBPcHRpb25zIHdpdGggb25seSBgdG9gIGFuZCBgbWFwYCBrZXlzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtSZXN1bHR9IFJlc3VsdCB3aXRoIGN1cnJlbnQgcm9vdOKAmXMgQ1NTLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290MSA9IHBvc3Rjc3MucGFyc2UoY3NzMSwgeyBmcm9tOiAnYS5jc3MnIH0pXG4gICAqIGNvbnN0IHJvb3QyID0gcG9zdGNzcy5wYXJzZShjc3MyLCB7IGZyb206ICdiLmNzcycgfSlcbiAgICogcm9vdDEuYXBwZW5kKHJvb3QyKVxuICAgKiBjb25zdCByZXN1bHQgPSByb290MS50b1Jlc3VsdCh7IHRvOiAnYWxsLmNzcycsIG1hcDogdHJ1ZSB9KVxuICAgKi9cbiAgdG9SZXN1bHQgKG9wdHMgPSB7IH0pIHtcbiAgICBsZXQgTGF6eVJlc3VsdCA9IHJlcXVpcmUoJy4vbGF6eS1yZXN1bHQnKVxuICAgIGxldCBQcm9jZXNzb3IgPSByZXF1aXJlKCcuL3Byb2Nlc3NvcicpXG5cbiAgICBsZXQgbGF6eSA9IG5ldyBMYXp5UmVzdWx0KG5ldyBQcm9jZXNzb3IoKSwgdGhpcywgb3B0cylcbiAgICByZXR1cm4gbGF6eS5zdHJpbmdpZnkoKVxuICB9XG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBSb290I1xuICAgKiBAbWVtYmVyIHtvYmplY3R9IHJhd3MgSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICBub2RlIHN0cmluZyBhcyBpdCB3YXMgaW4gdGhlIG9yaWdpbiBpbnB1dC5cbiAgICpcbiAgICogRXZlcnkgcGFyc2VyIHNhdmVzIGl0cyBvd24gcHJvcGVydGllcyxcbiAgICogYnV0IHRoZSBkZWZhdWx0IENTUyBwYXJzZXIgdXNlczpcbiAgICpcbiAgICogKiBgYWZ0ZXJgOiB0aGUgc3BhY2Ugc3ltYm9scyBhZnRlciB0aGUgbGFzdCBjaGlsZCB0byB0aGUgZW5kIG9mIGZpbGUuXG4gICAqICogYHNlbWljb2xvbmA6IGlzIHRoZSBsYXN0IGNoaWxkIGhhcyBhbiAob3B0aW9uYWwpIHNlbWljb2xvbi5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy5wYXJzZSgnYSB7fVxcbicpLnJhd3MgLy89PiB7IGFmdGVyOiAnXFxuJyB9XG4gICAqIHBvc3Rjc3MucGFyc2UoJ2Ege30nKS5yYXdzICAgLy89PiB7IGFmdGVyOiAnJyB9XG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBSb290XG4iXSwiZmlsZSI6InJvb3QuanMifQ==\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nvar _list = _interopRequireDefault(require(\"./list\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Represents a CSS rule: a selector followed by a declaration block.\n *\n * @extends Container\n *\n * @example\n * const root = postcss.parse('a{}')\n * const rule = root.first\n * rule.type       //=> 'rule'\n * rule.toString() //=> 'a{}'\n */\nvar Rule = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Rule, _Container);\n\n  function Rule(defaults) {\n    var _this;\n\n    _this = _Container.call(this, defaults) || this;\n    _this.type = 'rule';\n    if (!_this.nodes) _this.nodes = [];\n    return _this;\n  }\n  /**\n   * An array containing the rule’s individual selectors.\n   * Groups of selectors are split at commas.\n   *\n   * @type {string[]}\n   *\n   * @example\n   * const root = postcss.parse('a, b { }')\n   * const rule = root.first\n   *\n   * rule.selector  //=> 'a, b'\n   * rule.selectors //=> ['a', 'b']\n   *\n   * rule.selectors = ['a', 'strong']\n   * rule.selector //=> 'a, strong'\n   */\n\n\n  _createClass(Rule, [{\n    key: \"selectors\",\n    get: function get() {\n      return _list.default.comma(this.selector);\n    },\n    set: function set(values) {\n      var match = this.selector ? this.selector.match(/,\\s*/) : null;\n      var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n      this.selector = values.join(sep);\n    }\n    /**\n     * @memberof Rule#\n     * @member {string} selector The rule’s full selector represented\n     *                           as a string.\n     *\n     * @example\n     * const root = postcss.parse('a, b { }')\n     * const rule = root.first\n     * rule.selector //=> 'a, b'\n     */\n\n    /**\n     * @memberof Rule#\n     * @member {object} raws Information to generate byte-to-byte equal\n     *                       node string as it was in the origin input.\n     *\n     * Every parser saves its own properties,\n     * but the default CSS parser uses:\n     *\n     * * `before`: the space symbols before the node. It also stores `*`\n     *   and `_` symbols before the declaration (IE hack).\n     * * `after`: the space symbols after the last child of the node\n     *   to the end of the node.\n     * * `between`: the symbols between the property and value\n     *   for declarations, selector and `{` for rules, or last parameter\n     *   and `{` for at-rules.\n     * * `semicolon`: contains `true` if the last child has\n     *   an (optional) semicolon.\n     * * `ownSemicolon`: contains `true` if there is semicolon after rule.\n     *\n     * PostCSS cleans selectors from comments and extra spaces,\n     * but it stores origin content in raws properties.\n     * As such, if you don’t change a declaration’s value,\n     * PostCSS will use the raw value with comments.\n     *\n     * @example\n     * const root = postcss.parse('a {\\n  color:black\\n}')\n     * root.first.first.raws //=> { before: '', between: ' ', after: '\\n' }\n     */\n\n  }]);\n\n  return Rule;\n}(_container.default);\n\nvar _default = Rule;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGUuZXM2Il0sIm5hbWVzIjpbIlJ1bGUiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsImxpc3QiLCJjb21tYSIsInNlbGVjdG9yIiwidmFsdWVzIiwibWF0Y2giLCJzZXAiLCJyYXciLCJqb2luIiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7O0lBV01BLEk7OztBQUNKLGdCQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLGtDQUFNQSxRQUFOO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLE1BQVo7QUFDQSxRQUFJLENBQUMsTUFBS0MsS0FBVixFQUFpQixNQUFLQSxLQUFMLEdBQWEsRUFBYjtBQUhJO0FBSXRCO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQWdCaUI7QUFDZixhQUFPQyxjQUFLQyxLQUFMLENBQVcsS0FBS0MsUUFBaEIsQ0FBUDtBQUNELEs7c0JBRWNDLE0sRUFBUTtBQUNyQixVQUFJQyxLQUFLLEdBQUcsS0FBS0YsUUFBTCxHQUFnQixLQUFLQSxRQUFMLENBQWNFLEtBQWQsQ0FBb0IsTUFBcEIsQ0FBaEIsR0FBOEMsSUFBMUQ7QUFDQSxVQUFJQyxHQUFHLEdBQUdELEtBQUssR0FBR0EsS0FBSyxDQUFDLENBQUQsQ0FBUixHQUFjLE1BQU0sS0FBS0UsR0FBTCxDQUFTLFNBQVQsRUFBb0IsWUFBcEIsQ0FBbkM7QUFDQSxXQUFLSixRQUFMLEdBQWdCQyxNQUFNLENBQUNJLElBQVAsQ0FBWUYsR0FBWixDQUFoQjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7O0FBV0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBNUNpQkcsa0I7O2VBMEVKWixJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcidcbmltcG9ydCBsaXN0IGZyb20gJy4vbGlzdCdcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ1NTIHJ1bGU6IGEgc2VsZWN0b3IgZm9sbG93ZWQgYnkgYSBkZWNsYXJhdGlvbiBibG9jay5cbiAqXG4gKiBAZXh0ZW5kcyBDb250YWluZXJcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2F7fScpXG4gKiBjb25zdCBydWxlID0gcm9vdC5maXJzdFxuICogcnVsZS50eXBlICAgICAgIC8vPT4gJ3J1bGUnXG4gKiBydWxlLnRvU3RyaW5nKCkgLy89PiAnYXt9J1xuICovXG5jbGFzcyBSdWxlIGV4dGVuZHMgQ29udGFpbmVyIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ3J1bGUnXG4gICAgaWYgKCF0aGlzLm5vZGVzKSB0aGlzLm5vZGVzID0gW11cbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhcnJheSBjb250YWluaW5nIHRoZSBydWxl4oCZcyBpbmRpdmlkdWFsIHNlbGVjdG9ycy5cbiAgICogR3JvdXBzIG9mIHNlbGVjdG9ycyBhcmUgc3BsaXQgYXQgY29tbWFzLlxuICAgKlxuICAgKiBAdHlwZSB7c3RyaW5nW119XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhLCBiIHsgfScpXG4gICAqIGNvbnN0IHJ1bGUgPSByb290LmZpcnN0XG4gICAqXG4gICAqIHJ1bGUuc2VsZWN0b3IgIC8vPT4gJ2EsIGInXG4gICAqIHJ1bGUuc2VsZWN0b3JzIC8vPT4gWydhJywgJ2InXVxuICAgKlxuICAgKiBydWxlLnNlbGVjdG9ycyA9IFsnYScsICdzdHJvbmcnXVxuICAgKiBydWxlLnNlbGVjdG9yIC8vPT4gJ2EsIHN0cm9uZydcbiAgICovXG4gIGdldCBzZWxlY3RvcnMgKCkge1xuICAgIHJldHVybiBsaXN0LmNvbW1hKHRoaXMuc2VsZWN0b3IpXG4gIH1cblxuICBzZXQgc2VsZWN0b3JzICh2YWx1ZXMpIHtcbiAgICBsZXQgbWF0Y2ggPSB0aGlzLnNlbGVjdG9yID8gdGhpcy5zZWxlY3Rvci5tYXRjaCgvLFxccyovKSA6IG51bGxcbiAgICBsZXQgc2VwID0gbWF0Y2ggPyBtYXRjaFswXSA6ICcsJyArIHRoaXMucmF3KCdiZXR3ZWVuJywgJ2JlZm9yZU9wZW4nKVxuICAgIHRoaXMuc2VsZWN0b3IgPSB2YWx1ZXMuam9pbihzZXApXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFJ1bGUjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gc2VsZWN0b3IgVGhlIHJ1bGXigJlzIGZ1bGwgc2VsZWN0b3IgcmVwcmVzZW50ZWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICBhcyBhIHN0cmluZy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EsIGIgeyB9JylcbiAgICogY29uc3QgcnVsZSA9IHJvb3QuZmlyc3RcbiAgICogcnVsZS5zZWxlY3RvciAvLz0+ICdhLCBiJ1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFJ1bGUjXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgKlxuICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgKlxuICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgKiAgIGFuZCBgX2Agc3ltYm9scyBiZWZvcmUgdGhlIGRlY2xhcmF0aW9uIChJRSBoYWNrKS5cbiAgICogKiBgYWZ0ZXJgOiB0aGUgc3BhY2Ugc3ltYm9scyBhZnRlciB0aGUgbGFzdCBjaGlsZCBvZiB0aGUgbm9kZVxuICAgKiAgIHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUuXG4gICAqICogYGJldHdlZW5gOiB0aGUgc3ltYm9scyBiZXR3ZWVuIHRoZSBwcm9wZXJ0eSBhbmQgdmFsdWVcbiAgICogICBmb3IgZGVjbGFyYXRpb25zLCBzZWxlY3RvciBhbmQgYHtgIGZvciBydWxlcywgb3IgbGFzdCBwYXJhbWV0ZXJcbiAgICogICBhbmQgYHtgIGZvciBhdC1ydWxlcy5cbiAgICogKiBgc2VtaWNvbG9uYDogY29udGFpbnMgYHRydWVgIGlmIHRoZSBsYXN0IGNoaWxkIGhhc1xuICAgKiAgIGFuIChvcHRpb25hbCkgc2VtaWNvbG9uLlxuICAgKiAqIGBvd25TZW1pY29sb25gOiBjb250YWlucyBgdHJ1ZWAgaWYgdGhlcmUgaXMgc2VtaWNvbG9uIGFmdGVyIHJ1bGUuXG4gICAqXG4gICAqIFBvc3RDU1MgY2xlYW5zIHNlbGVjdG9ycyBmcm9tIGNvbW1lbnRzIGFuZCBleHRyYSBzcGFjZXMsXG4gICAqIGJ1dCBpdCBzdG9yZXMgb3JpZ2luIGNvbnRlbnQgaW4gcmF3cyBwcm9wZXJ0aWVzLlxuICAgKiBBcyBzdWNoLCBpZiB5b3UgZG9u4oCZdCBjaGFuZ2UgYSBkZWNsYXJhdGlvbuKAmXMgdmFsdWUsXG4gICAqIFBvc3RDU1Mgd2lsbCB1c2UgdGhlIHJhdyB2YWx1ZSB3aXRoIGNvbW1lbnRzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7XFxuICBjb2xvcjpibGFja1xcbn0nKVxuICAgKiByb290LmZpcnN0LmZpcnN0LnJhd3MgLy89PiB7IGJlZm9yZTogJycsIGJldHdlZW46ICcgJywgYWZ0ZXI6ICdcXG4nIH1cbiAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IFJ1bGVcbiJdLCJmaWxlIjoicnVsZS5qcyJ9\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n};\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nvar Stringifier = /*#__PURE__*/function () {\n  function Stringifier(builder) {\n    this.builder = builder;\n  }\n\n  var _proto = Stringifier.prototype;\n\n  _proto.stringify = function stringify(node, semicolon) {\n    this[node.type](node, semicolon);\n  };\n\n  _proto.root = function root(node) {\n    this.body(node);\n    if (node.raws.after) this.builder(node.raws.after);\n  };\n\n  _proto.comment = function comment(node) {\n    var left = this.raw(node, 'left', 'commentLeft');\n    var right = this.raw(node, 'right', 'commentRight');\n    this.builder('/*' + left + node.text + right + '*/', node);\n  };\n\n  _proto.decl = function decl(node, semicolon) {\n    var between = this.raw(node, 'between', 'colon');\n    var string = node.prop + between + this.rawValue(node, 'value');\n\n    if (node.important) {\n      string += node.raws.important || ' !important';\n    }\n\n    if (semicolon) string += ';';\n    this.builder(string, node);\n  };\n\n  _proto.rule = function rule(node) {\n    this.block(node, this.rawValue(node, 'selector'));\n\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end');\n    }\n  };\n\n  _proto.atrule = function atrule(node, semicolon) {\n    var name = '@' + node.name;\n    var params = node.params ? this.rawValue(node, 'params') : '';\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName;\n    } else if (params) {\n      name += ' ';\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params);\n    } else {\n      var end = (node.raws.between || '') + (semicolon ? ';' : '');\n      this.builder(name + params + end, node);\n    }\n  };\n\n  _proto.body = function body(node) {\n    var last = node.nodes.length - 1;\n\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break;\n      last -= 1;\n    }\n\n    var semicolon = this.raw(node, 'semicolon');\n\n    for (var i = 0; i < node.nodes.length; i++) {\n      var child = node.nodes[i];\n      var before = this.raw(child, 'before');\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  };\n\n  _proto.block = function block(node, start) {\n    var between = this.raw(node, 'between', 'beforeOpen');\n    this.builder(start + between + '{', node, 'start');\n    var after;\n\n    if (node.nodes && node.nodes.length) {\n      this.body(node);\n      after = this.raw(node, 'after');\n    } else {\n      after = this.raw(node, 'after', 'emptyBody');\n    }\n\n    if (after) this.builder(after);\n    this.builder('}', node, 'end');\n  };\n\n  _proto.raw = function raw(node, own, detect) {\n    var value;\n    if (!detect) detect = own; // Already had\n\n    if (own) {\n      value = node.raws[own];\n      if (typeof value !== 'undefined') return value;\n    }\n\n    var parent = node.parent; // Hack for first rule in CSS\n\n    if (detect === 'before') {\n      if (!parent || parent.type === 'root' && parent.first === node) {\n        return '';\n      }\n    } // Floating child without parent\n\n\n    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes\n\n    var root = node.root();\n    if (!root.rawCache) root.rawCache = {};\n\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect];\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect);\n    } else {\n      var method = 'raw' + capitalize(detect);\n\n      if (this[method]) {\n        value = this[method](root, node);\n      } else {\n        root.walk(function (i) {\n          value = i.raws[own];\n          if (typeof value !== 'undefined') return false;\n        });\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n    root.rawCache[detect] = value;\n    return value;\n  };\n\n  _proto.rawSemicolon = function rawSemicolon(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawEmptyBody = function rawEmptyBody(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawIndent = function rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent;\n    var value;\n    root.walk(function (i) {\n      var p = i.parent;\n\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          var parts = i.raws.before.split('\\n');\n          value = parts[parts.length - 1];\n          value = value.replace(/[^\\s]/g, '');\n          return false;\n        }\n      }\n    });\n    return value;\n  };\n\n  _proto.rawBeforeComment = function rawBeforeComment(root, node) {\n    var value;\n    root.walkComments(function (i) {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n\n        return false;\n      }\n    });\n\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '');\n    }\n\n    return value;\n  };\n\n  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {\n    var value;\n    root.walkDecls(function (i) {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n\n        return false;\n      }\n    });\n\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule');\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '');\n    }\n\n    return value;\n  };\n\n  _proto.rawBeforeRule = function rawBeforeRule(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/[^\\s]/g, '');\n    return value;\n  };\n\n  _proto.rawBeforeClose = function rawBeforeClose(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after;\n\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/[^\\s]/g, '');\n    return value;\n  };\n\n  _proto.rawBeforeOpen = function rawBeforeOpen(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.type !== 'decl') {\n        value = i.raws.between;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawColon = function rawColon(root) {\n    var value;\n    root.walkDecls(function (i) {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '');\n        return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.beforeAfter = function beforeAfter(node, detect) {\n    var value;\n\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment');\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule');\n    } else {\n      value = this.raw(node, null, 'beforeClose');\n    }\n\n    var buf = node.parent;\n    var depth = 0;\n\n    while (buf && buf.type !== 'root') {\n      depth += 1;\n      buf = buf.parent;\n    }\n\n    if (value.indexOf('\\n') !== -1) {\n      var indent = this.raw(node, null, 'indent');\n\n      if (indent.length) {\n        for (var step = 0; step < depth; step++) {\n          value += indent;\n        }\n      }\n    }\n\n    return value;\n  };\n\n  _proto.rawValue = function rawValue(node, prop) {\n    var value = node[prop];\n    var raw = node.raws[prop];\n\n    if (raw && raw.value === value) {\n      return raw.raw;\n    }\n\n    return value;\n  };\n\n  return Stringifier;\n}();\n\nvar _default = Stringifier;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _stringifier = _interopRequireDefault(require(\"./stringifier\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringify(node, builder) {\n  var str = new _stringifier.default(builder);\n  str.stringify(node);\n}\n\nvar _default = stringify;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmluZ2lmeS5lczYiXSwibmFtZXMiOlsic3RyaW5naWZ5Iiwibm9kZSIsImJ1aWxkZXIiLCJzdHIiLCJTdHJpbmdpZmllciJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUVBLFNBQVNBLFNBQVQsQ0FBb0JDLElBQXBCLEVBQTBCQyxPQUExQixFQUFtQztBQUNqQyxNQUFJQyxHQUFHLEdBQUcsSUFBSUMsb0JBQUosQ0FBZ0JGLE9BQWhCLENBQVY7QUFDQUMsRUFBQUEsR0FBRyxDQUFDSCxTQUFKLENBQWNDLElBQWQ7QUFDRDs7ZUFFY0QsUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJpbmdpZmllciBmcm9tICcuL3N0cmluZ2lmaWVyJ1xuXG5mdW5jdGlvbiBzdHJpbmdpZnkgKG5vZGUsIGJ1aWxkZXIpIHtcbiAgbGV0IHN0ciA9IG5ldyBTdHJpbmdpZmllcihidWlsZGVyKVxuICBzdHIuc3RyaW5naWZ5KG5vZGUpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeVxuIl0sImZpbGUiOiJzdHJpbmdpZnkuanMifQ==\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = tokenizer;\nvar SINGLE_QUOTE = '\\''.charCodeAt(0);\nvar DOUBLE_QUOTE = '\"'.charCodeAt(0);\nvar BACKSLASH = '\\\\'.charCodeAt(0);\nvar SLASH = '/'.charCodeAt(0);\nvar NEWLINE = '\\n'.charCodeAt(0);\nvar SPACE = ' '.charCodeAt(0);\nvar FEED = '\\f'.charCodeAt(0);\nvar TAB = '\\t'.charCodeAt(0);\nvar CR = '\\r'.charCodeAt(0);\nvar OPEN_SQUARE = '['.charCodeAt(0);\nvar CLOSE_SQUARE = ']'.charCodeAt(0);\nvar OPEN_PARENTHESES = '('.charCodeAt(0);\nvar CLOSE_PARENTHESES = ')'.charCodeAt(0);\nvar OPEN_CURLY = '{'.charCodeAt(0);\nvar CLOSE_CURLY = '}'.charCodeAt(0);\nvar SEMICOLON = ';'.charCodeAt(0);\nvar ASTERISK = '*'.charCodeAt(0);\nvar COLON = ':'.charCodeAt(0);\nvar AT = '@'.charCodeAt(0);\nvar RE_AT_END = /[ \\n\\t\\r\\f{}()'\"\\\\;/[\\]#]/g;\nvar RE_WORD_END = /[ \\n\\t\\r\\f(){}:;@!'\"\\\\\\][#]|\\/(?=\\*)/g;\nvar RE_BAD_BRACKET = /.[\\\\/(\"'\\n]/;\nvar RE_HEX_ESCAPE = /[a-f0-9]/i;\n\nfunction tokenizer(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var css = input.css.valueOf();\n  var ignore = options.ignoreErrors;\n  var code, next, quote, lines, last, content, escape;\n  var nextLine, nextOffset, escaped, escapePos, prev, n, currentToken;\n  var length = css.length;\n  var offset = -1;\n  var line = 1;\n  var pos = 0;\n  var buffer = [];\n  var returned = [];\n\n  function position() {\n    return pos;\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, line, pos - offset);\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length;\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop();\n    if (pos >= length) return;\n    var ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n    code = css.charCodeAt(pos);\n\n    if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {\n      offset = pos;\n      line += 1;\n    }\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED:\n        next = pos;\n\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n\n          if (code === NEWLINE) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n\n        currentToken = ['space', css.slice(pos, next)];\n        pos = next - 1;\n        break;\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES:\n        var controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, line, pos - offset];\n        break;\n\n      case OPEN_PARENTHESES:\n        prev = buffer.length ? buffer.pop()[1] : '';\n        n = css.charCodeAt(pos + 1);\n\n        if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n          next = pos;\n\n          do {\n            escaped = false;\n            next = css.indexOf(')', next + 1);\n\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break;\n              } else {\n                unclosed('bracket');\n              }\n            }\n\n            escapePos = next;\n\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped);\n\n          currentToken = ['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n          pos = next;\n        } else {\n          next = css.indexOf(')', pos + 1);\n          content = css.slice(pos, next + 1);\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', line, pos - offset];\n          } else {\n            currentToken = ['brackets', content, line, pos - offset, line, next - offset];\n            pos = next;\n          }\n        }\n\n        break;\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE:\n        quote = code === SINGLE_QUOTE ? '\\'' : '\"';\n        next = pos;\n\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break;\n            } else {\n              unclosed('string');\n            }\n          }\n\n          escapePos = next;\n\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n\n        content = css.slice(pos, next + 1);\n        lines = content.split('\\n');\n        last = lines.length - 1;\n\n        if (last > 0) {\n          nextLine = line + last;\n          nextOffset = next - lines[last].length;\n        } else {\n          nextLine = line;\n          nextOffset = offset;\n        }\n\n        currentToken = ['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset];\n        offset = nextOffset;\n        line = nextLine;\n        pos = next;\n        break;\n\n      case AT:\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n        pos = next;\n        break;\n\n      case BACKSLASH:\n        next = pos;\n        escape = true;\n\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n\n        code = css.charCodeAt(next + 1);\n\n        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n          next += 1;\n\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n        pos = next;\n        break;\n\n      default:\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1;\n\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed('comment');\n            }\n          }\n\n          content = css.slice(pos, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n\n          currentToken = ['comment', content, line, pos - offset, nextLine, next - nextOffset];\n          offset = nextOffset;\n          line = nextLine;\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];\n          buffer.push(currentToken);\n          pos = next;\n        }\n\n        break;\n    }\n\n    pos++;\n    return currentToken;\n  }\n\n  function back(token) {\n    returned.push(token);\n  }\n\n  return {\n    back: back,\n    nextToken: nextToken,\n    endOfFile: endOfFile,\n    position: position\n  };\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor\n *\n * @namespace vendor\n */\nvar vendor = {\n  /**\n   * Returns the vendor prefix extracted from an input string.\n   *\n   * @param {string} prop String with or without vendor prefix.\n   *\n   * @return {string} vendor prefix or empty string\n   *\n   * @example\n   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n   * postcss.vendor.prefix('tab-size')      //=> ''\n   */\n  prefix: function prefix(prop) {\n    var match = prop.match(/^(-\\w+-)/);\n\n    if (match) {\n      return match[0];\n    }\n\n    return '';\n  },\n\n  /**\n     * Returns the input string stripped of its vendor prefix.\n     *\n     * @param {string} prop String with or without vendor prefix.\n     *\n     * @return {string} String name without vendor prefixes.\n     *\n     * @example\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n     */\n  unprefixed: function unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '');\n  }\n};\nvar _default = vendor;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci5lczYiXSwibmFtZXMiOlsidmVuZG9yIiwicHJlZml4IiwicHJvcCIsIm1hdGNoIiwidW5wcmVmaXhlZCIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7O0FBUUEsSUFBSUEsTUFBTSxHQUFHO0FBRVg7Ozs7Ozs7Ozs7O0FBV0FDLEVBQUFBLE1BYlcsa0JBYUhDLElBYkcsRUFhRztBQUNaLFFBQUlDLEtBQUssR0FBR0QsSUFBSSxDQUFDQyxLQUFMLENBQVcsVUFBWCxDQUFaOztBQUNBLFFBQUlBLEtBQUosRUFBVztBQUNULGFBQU9BLEtBQUssQ0FBQyxDQUFELENBQVo7QUFDRDs7QUFFRCxXQUFPLEVBQVA7QUFDRCxHQXBCVTs7QUFzQlg7Ozs7Ozs7Ozs7QUFVQUMsRUFBQUEsVUFoQ1csc0JBZ0NDRixJQWhDRCxFQWdDTztBQUNoQixXQUFPQSxJQUFJLENBQUNHLE9BQUwsQ0FBYSxRQUFiLEVBQXVCLEVBQXZCLENBQVA7QUFDRDtBQWxDVSxDQUFiO2VBc0NlTCxNIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb250YWlucyBoZWxwZXJzIGZvciB3b3JraW5nIHdpdGggdmVuZG9yIHByZWZpeGVzLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCB2ZW5kb3IgPSBwb3N0Y3NzLnZlbmRvclxuICpcbiAqIEBuYW1lc3BhY2UgdmVuZG9yXG4gKi9cbmxldCB2ZW5kb3IgPSB7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHZlbmRvciBwcmVmaXggZXh0cmFjdGVkIGZyb20gYW4gaW5wdXQgc3RyaW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBTdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXguXG4gICAqXG4gICAqIEByZXR1cm4ge3N0cmluZ30gdmVuZG9yIHByZWZpeCBvciBlbXB0eSBzdHJpbmdcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy52ZW5kb3IucHJlZml4KCctbW96LXRhYi1zaXplJykgLy89PiAnLW1vei0nXG4gICAqIHBvc3Rjc3MudmVuZG9yLnByZWZpeCgndGFiLXNpemUnKSAgICAgIC8vPT4gJydcbiAgICovXG4gIHByZWZpeCAocHJvcCkge1xuICAgIGxldCBtYXRjaCA9IHByb3AubWF0Y2goL14oLVxcdystKS8pXG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICByZXR1cm4gbWF0Y2hbMF1cbiAgICB9XG5cbiAgICByZXR1cm4gJydcbiAgfSxcblxuICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBpbnB1dCBzdHJpbmcgc3RyaXBwZWQgb2YgaXRzIHZlbmRvciBwcmVmaXguXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBTdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXguXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFN0cmluZyBuYW1lIHdpdGhvdXQgdmVuZG9yIHByZWZpeGVzLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBwb3N0Y3NzLnZlbmRvci51bnByZWZpeGVkKCctbW96LXRhYi1zaXplJykgLy89PiAndGFiLXNpemUnXG4gICAgICovXG4gIHVucHJlZml4ZWQgKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKC9eLVxcdystLywgJycpXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCB2ZW5kb3JcbiJdLCJmaWxlIjoidmVuZG9yLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = warnOnce;\nvar printed = {};\n\nfunction warnOnce(message) {\n  if (printed[message]) return;\n  printed[message] = true;\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message);\n  }\n}\n\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm4tb25jZS5lczYiXSwibmFtZXMiOlsicHJpbnRlZCIsIndhcm5PbmNlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJ3YXJuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsT0FBTyxHQUFHLEVBQWQ7O0FBRWUsU0FBU0MsUUFBVCxDQUFtQkMsT0FBbkIsRUFBNEI7QUFDekMsTUFBSUYsT0FBTyxDQUFDRSxPQUFELENBQVgsRUFBc0I7QUFDdEJGLEVBQUFBLE9BQU8sQ0FBQ0UsT0FBRCxDQUFQLEdBQW1CLElBQW5COztBQUVBLE1BQUksT0FBT0MsT0FBUCxLQUFtQixXQUFuQixJQUFrQ0EsT0FBTyxDQUFDQyxJQUE5QyxFQUFvRDtBQUNsREQsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWFGLE9BQWI7QUFDRDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHByaW50ZWQgPSB7IH1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2Fybk9uY2UgKG1lc3NhZ2UpIHtcbiAgaWYgKHByaW50ZWRbbWVzc2FnZV0pIHJldHVyblxuICBwcmludGVkW21lc3NhZ2VdID0gdHJ1ZVxuXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuKSB7XG4gICAgY29uc29sZS53YXJuKG1lc3NhZ2UpXG4gIH1cbn1cbiJdLCJmaWxlIjoid2Fybi1vbmNlLmpzIn0=\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Represents a plugin’s warning. It can be created using {@link Node#warn}.\n *\n * @example\n * if (decl.important) {\n *   decl.warn(result, 'Avoid !important', { word: '!important' })\n * }\n */\nvar Warning = /*#__PURE__*/function () {\n  /**\n   * @param {string} text        Warning message.\n   * @param {Object} [opts]      Warning options.\n   * @param {Node}   opts.node   CSS node that caused the warning.\n   * @param {string} opts.word   Word in CSS source that caused the warning.\n   * @param {number} opts.index  Index in CSS node string that caused\n   *                             the warning.\n   * @param {string} opts.plugin Name of the plugin that created\n   *                             this warning. {@link Result#warn} fills\n   *                             this property automatically.\n   */\n  function Warning(text, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    /**\n     * Type to filter warnings from {@link Result#messages}.\n     * Always equal to `\"warning\"`.\n     *\n     * @type {string}\n     *\n     * @example\n     * const nonWarning = result.messages.filter(i => i.type !== 'warning')\n     */\n    this.type = 'warning';\n    /**\n     * The warning message.\n     *\n     * @type {string}\n     *\n     * @example\n     * warning.text //=> 'Try to avoid !important'\n     */\n\n    this.text = text;\n\n    if (opts.node && opts.node.source) {\n      var pos = opts.node.positionBy(opts);\n      /**\n       * Line in the input file with this warning’s source.\n       * @type {number}\n       *\n       * @example\n       * warning.line //=> 5\n       */\n\n      this.line = pos.line;\n      /**\n       * Column in the input file with this warning’s source.\n       *\n       * @type {number}\n       *\n       * @example\n       * warning.column //=> 6\n       */\n\n      this.column = pos.column;\n    }\n\n    for (var opt in opts) {\n      this[opt] = opts[opt];\n    }\n  }\n  /**\n   * Returns a warning position and message.\n   *\n   * @example\n   * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'\n   *\n   * @return {string} Warning position and message.\n   */\n\n\n  var _proto = Warning.prototype;\n\n  _proto.toString = function toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message;\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text;\n    }\n\n    return this.text;\n  }\n  /**\n   * @memberof Warning#\n   * @member {string} plugin The name of the plugin that created\n   *                         it will fill this property automatically.\n   *                         this warning. When you call {@link Node#warn}\n   *\n   * @example\n   * warning.plugin //=> 'postcss-important'\n   */\n\n  /**\n   * @memberof Warning#\n   * @member {Node} node Contains the CSS node that caused the warning.\n   *\n   * @example\n   * warning.node.toString() //=> 'color: white !important'\n   */\n  ;\n\n  return Warning;\n}();\n\nvar _default = Warning;\nexports.default = _default;\nmodule.exports = exports.default;\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm5pbmcuZXM2Il0sIm5hbWVzIjpbIldhcm5pbmciLCJ0ZXh0Iiwib3B0cyIsInR5cGUiLCJub2RlIiwic291cmNlIiwicG9zIiwicG9zaXRpb25CeSIsImxpbmUiLCJjb2x1bW4iLCJvcHQiLCJ0b1N0cmluZyIsImVycm9yIiwicGx1Z2luIiwiaW5kZXgiLCJ3b3JkIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7SUFRTUEsTztBQUNKOzs7Ozs7Ozs7OztBQVdBLG1CQUFhQyxJQUFiLEVBQW1CQyxJQUFuQixFQUErQjtBQUFBLFFBQVpBLElBQVk7QUFBWkEsTUFBQUEsSUFBWSxHQUFMLEVBQUs7QUFBQTs7QUFDN0I7Ozs7Ozs7OztBQVNBLFNBQUtDLElBQUwsR0FBWSxTQUFaO0FBQ0E7Ozs7Ozs7OztBQVFBLFNBQUtGLElBQUwsR0FBWUEsSUFBWjs7QUFFQSxRQUFJQyxJQUFJLENBQUNFLElBQUwsSUFBYUYsSUFBSSxDQUFDRSxJQUFMLENBQVVDLE1BQTNCLEVBQW1DO0FBQ2pDLFVBQUlDLEdBQUcsR0FBR0osSUFBSSxDQUFDRSxJQUFMLENBQVVHLFVBQVYsQ0FBcUJMLElBQXJCLENBQVY7QUFDQTs7Ozs7Ozs7QUFPQSxXQUFLTSxJQUFMLEdBQVlGLEdBQUcsQ0FBQ0UsSUFBaEI7QUFDQTs7Ozs7Ozs7O0FBUUEsV0FBS0MsTUFBTCxHQUFjSCxHQUFHLENBQUNHLE1BQWxCO0FBQ0Q7O0FBRUQsU0FBSyxJQUFJQyxHQUFULElBQWdCUixJQUFoQjtBQUFzQixXQUFLUSxHQUFMLElBQVlSLElBQUksQ0FBQ1EsR0FBRCxDQUFoQjtBQUF0QjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7OztTQVFBQyxRLEdBQUEsb0JBQVk7QUFDVixRQUFJLEtBQUtQLElBQVQsRUFBZTtBQUNiLGFBQU8sS0FBS0EsSUFBTCxDQUFVUSxLQUFWLENBQWdCLEtBQUtYLElBQXJCLEVBQTJCO0FBQ2hDWSxRQUFBQSxNQUFNLEVBQUUsS0FBS0EsTUFEbUI7QUFFaENDLFFBQUFBLEtBQUssRUFBRSxLQUFLQSxLQUZvQjtBQUdoQ0MsUUFBQUEsSUFBSSxFQUFFLEtBQUtBO0FBSHFCLE9BQTNCLEVBSUpDLE9BSkg7QUFLRDs7QUFFRCxRQUFJLEtBQUtILE1BQVQsRUFBaUI7QUFDZixhQUFPLEtBQUtBLE1BQUwsR0FBYyxJQUFkLEdBQXFCLEtBQUtaLElBQWpDO0FBQ0Q7O0FBRUQsV0FBTyxLQUFLQSxJQUFaO0FBQ0Q7QUFFRDs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7ZUFTYUQsTyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwcmVzZW50cyBhIHBsdWdpbuKAmXMgd2FybmluZy4gSXQgY2FuIGJlIGNyZWF0ZWQgdXNpbmcge0BsaW5rIE5vZGUjd2Fybn0uXG4gKlxuICogQGV4YW1wbGVcbiAqIGlmIChkZWNsLmltcG9ydGFudCkge1xuICogICBkZWNsLndhcm4ocmVzdWx0LCAnQXZvaWQgIWltcG9ydGFudCcsIHsgd29yZDogJyFpbXBvcnRhbnQnIH0pXG4gKiB9XG4gKi9cbmNsYXNzIFdhcm5pbmcge1xuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgICAgICAgIFdhcm5pbmcgbWVzc2FnZS5cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRzXSAgICAgIFdhcm5pbmcgb3B0aW9ucy5cbiAgICogQHBhcmFtIHtOb2RlfSAgIG9wdHMubm9kZSAgIENTUyBub2RlIHRoYXQgY2F1c2VkIHRoZSB3YXJuaW5nLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0cy53b3JkICAgV29yZCBpbiBDU1Mgc291cmNlIHRoYXQgY2F1c2VkIHRoZSB3YXJuaW5nLlxuICAgKiBAcGFyYW0ge251bWJlcn0gb3B0cy5pbmRleCAgSW5kZXggaW4gQ1NTIG5vZGUgc3RyaW5nIHRoYXQgY2F1c2VkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGUgd2FybmluZy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG9wdHMucGx1Z2luIE5hbWUgb2YgdGhlIHBsdWdpbiB0aGF0IGNyZWF0ZWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgd2FybmluZy4ge0BsaW5rIFJlc3VsdCN3YXJufSBmaWxsc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyBwcm9wZXJ0eSBhdXRvbWF0aWNhbGx5LlxuICAgKi9cbiAgY29uc3RydWN0b3IgKHRleHQsIG9wdHMgPSB7IH0pIHtcbiAgICAvKipcbiAgICAgKiBUeXBlIHRvIGZpbHRlciB3YXJuaW5ncyBmcm9tIHtAbGluayBSZXN1bHQjbWVzc2FnZXN9LlxuICAgICAqIEFsd2F5cyBlcXVhbCB0byBgXCJ3YXJuaW5nXCJgLlxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgbm9uV2FybmluZyA9IHJlc3VsdC5tZXNzYWdlcy5maWx0ZXIoaSA9PiBpLnR5cGUgIT09ICd3YXJuaW5nJylcbiAgICAgKi9cbiAgICB0aGlzLnR5cGUgPSAnd2FybmluZydcbiAgICAvKipcbiAgICAgKiBUaGUgd2FybmluZyBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogd2FybmluZy50ZXh0IC8vPT4gJ1RyeSB0byBhdm9pZCAhaW1wb3J0YW50J1xuICAgICAqL1xuICAgIHRoaXMudGV4dCA9IHRleHRcblxuICAgIGlmIChvcHRzLm5vZGUgJiYgb3B0cy5ub2RlLnNvdXJjZSkge1xuICAgICAgbGV0IHBvcyA9IG9wdHMubm9kZS5wb3NpdGlvbkJ5KG9wdHMpXG4gICAgICAvKipcbiAgICAgICAqIExpbmUgaW4gdGhlIGlucHV0IGZpbGUgd2l0aCB0aGlzIHdhcm5pbmfigJlzIHNvdXJjZS5cbiAgICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICAgKlxuICAgICAgICogQGV4YW1wbGVcbiAgICAgICAqIHdhcm5pbmcubGluZSAvLz0+IDVcbiAgICAgICAqL1xuICAgICAgdGhpcy5saW5lID0gcG9zLmxpbmVcbiAgICAgIC8qKlxuICAgICAgICogQ29sdW1uIGluIHRoZSBpbnB1dCBmaWxlIHdpdGggdGhpcyB3YXJuaW5n4oCZcyBzb3VyY2UuXG4gICAgICAgKlxuICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAqXG4gICAgICAgKiBAZXhhbXBsZVxuICAgICAgICogd2FybmluZy5jb2x1bW4gLy89PiA2XG4gICAgICAgKi9cbiAgICAgIHRoaXMuY29sdW1uID0gcG9zLmNvbHVtblxuICAgIH1cblxuICAgIGZvciAobGV0IG9wdCBpbiBvcHRzKSB0aGlzW29wdF0gPSBvcHRzW29wdF1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgd2FybmluZyBwb3NpdGlvbiBhbmQgbWVzc2FnZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogd2FybmluZy50b1N0cmluZygpIC8vPT4gJ3Bvc3Rjc3MtbGludDphLmNzczoxMDoxNDogQXZvaWQgIWltcG9ydGFudCdcbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nfSBXYXJuaW5nIHBvc2l0aW9uIGFuZCBtZXNzYWdlLlxuICAgKi9cbiAgdG9TdHJpbmcgKCkge1xuICAgIGlmICh0aGlzLm5vZGUpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vZGUuZXJyb3IodGhpcy50ZXh0LCB7XG4gICAgICAgIHBsdWdpbjogdGhpcy5wbHVnaW4sXG4gICAgICAgIGluZGV4OiB0aGlzLmluZGV4LFxuICAgICAgICB3b3JkOiB0aGlzLndvcmRcbiAgICAgIH0pLm1lc3NhZ2VcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wbHVnaW4pIHtcbiAgICAgIHJldHVybiB0aGlzLnBsdWdpbiArICc6ICcgKyB0aGlzLnRleHRcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy50ZXh0XG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFdhcm5pbmcjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gcGx1Z2luIFRoZSBuYW1lIG9mIHRoZSBwbHVnaW4gdGhhdCBjcmVhdGVkXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgIGl0IHdpbGwgZmlsbCB0aGlzIHByb3BlcnR5IGF1dG9tYXRpY2FsbHkuXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgd2FybmluZy4gV2hlbiB5b3UgY2FsbCB7QGxpbmsgTm9kZSN3YXJufVxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiB3YXJuaW5nLnBsdWdpbiAvLz0+ICdwb3N0Y3NzLWltcG9ydGFudCdcbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBXYXJuaW5nI1xuICAgKiBAbWVtYmVyIHtOb2RlfSBub2RlIENvbnRhaW5zIHRoZSBDU1Mgbm9kZSB0aGF0IGNhdXNlZCB0aGUgd2FybmluZy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogd2FybmluZy5ub2RlLnRvU3RyaW5nKCkgLy89PiAnY29sb3I6IHdoaXRlICFpbXBvcnRhbnQnXG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBXYXJuaW5nXG4iXSwiZmlsZSI6Indhcm5pbmcuanMifQ==\n","var fs = require('fs');\r\nvar path = require('path');\r\nvar pify = require('pify');\r\n\r\nvar stat = pify(fs.stat);\r\nvar readFile = pify(fs.readFile);\r\nvar resolve = path.resolve;\r\n\r\nvar cache = Object.create(null);\r\n\r\nfunction convert(content, encoding) {\r\n\tif (Buffer.isEncoding(encoding)) {\r\n\t\treturn content.toString(encoding);\r\n\t}\r\n\treturn content;\r\n}\r\n\r\nmodule.exports = function (path, encoding) {\r\n\tpath = resolve(path);\r\n\r\n\treturn stat(path).then(function (stats) {\r\n\t\tvar item = cache[path];\r\n\r\n\t\tif (item && item.mtime.getTime() === stats.mtime.getTime()) {\r\n\t\t\treturn convert(item.content, encoding);\r\n\t\t}\r\n\r\n\t\treturn readFile(path).then(function (data) {\r\n\t\t\tcache[path] = {\r\n\t\t\t\tmtime: stats.mtime,\r\n\t\t\t\tcontent: data\r\n\t\t\t};\r\n\r\n\t\t\treturn convert(data, encoding);\r\n\t\t});\r\n\t}).catch(function (err) {\r\n\t\tcache[path] = null;\r\n\t\treturn Promise.reject(err);\r\n\t});\r\n};\r\n\r\nmodule.exports.sync = function (path, encoding) {\r\n\tpath = resolve(path);\r\n\r\n\ttry {\r\n\t\tvar stats = fs.statSync(path);\r\n\t\tvar item = cache[path];\r\n\r\n\t\tif (item && item.mtime.getTime() === stats.mtime.getTime()) {\r\n\t\t\treturn convert(item.content, encoding);\r\n\t\t}\r\n\r\n\t\tvar data = fs.readFileSync(path);\r\n\r\n\t\tcache[path] = {\r\n\t\t\tmtime: stats.mtime,\r\n\t\t\tcontent: data\r\n\t\t};\r\n\r\n\t\treturn convert(data, encoding);\r\n\t} catch (err) {\r\n\t\tcache[path] = null;\r\n\t\tthrow err;\r\n\t}\r\n\r\n};\r\n\r\nmodule.exports.get = function (path, encoding) {\r\n\tpath = resolve(path);\r\n\tif (cache[path]) {\r\n\t\treturn convert(cache[path].content, encoding);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nmodule.exports.clear = function () {\r\n\tcache = Object.create(null);\r\n};\r\n","var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n","var fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller.js');\nvar nodeModulesPaths = require('./node-modules-paths.js');\nvar normalizeOptions = require('./normalize-options.js');\nvar isCore = require('./is-core');\n\nvar realpathFS = fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readFile(pkgfile, function (err, body) {\n                    if (err) cb(err);\n                    try { var pkg = JSON.parse(body); } catch (jsonErr) {}\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readFile(pkgfile, function (err, body) {\n                    if (err) return cb(err);\n                    try {\n                        var pkg = JSON.parse(body);\n                    } catch (jsonErr) {}\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n","module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n","var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = Number(current[i] || 0);\n        var ver = Number(versionParts[i] || 0);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        } else {\n            return false;\n        }\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n","var core = require('./core');\n\nmodule.exports = function isCore(x) {\n    return Object.prototype.hasOwnProperty.call(core, x);\n};\n","var path = require('path');\nvar parse = path.parse || require('path-parse');\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n","module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n","var isCore = require('./is-core');\nvar fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller.js');\nvar nodeModulesPaths = require('./node-modules-paths.js');\nvar normalizeOptions = require('./normalize-options.js');\n\nvar realpathFS = fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var body = readFileSync(pkgfile);\n\n        try {\n            var pkg = JSON.parse(body);\n        } catch (jsonErr) {}\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var body = readFileSync(pkgfile, 'UTF8');\n                var pkg = JSON.parse(body);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { isAbsolute, resolve } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, relative, resolve, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation)\n    } else if (opts.word) {\n      stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation)\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      }\n\n    if (opts.word) {\n      let stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation)\n        end = this.positionInside(index + opts.word.length, stringRepresentation)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.31'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n"],"sourceRoot":""}