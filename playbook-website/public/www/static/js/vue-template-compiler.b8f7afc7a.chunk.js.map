{"version":3,"sources":["webpack:///./src/sandbox/eval/transpilers/vue/v2/template-compiler/modules/transform-require.ts","webpack:///./src/sandbox/eval/transpilers/vue/v2/template-compiler/modules/transform-srcset.ts","webpack:///./src/sandbox/eval/transpilers/vue/v2/template-compiler/loader.ts"],"names":["defaultOptions","img","image","userOptions","addDependency","options","_objectSpread","postTransformNode","node","tag","attrs","attributes","some","attr","rewrite","Array","isArray","forEach","item","transform","name","value","charAt","length","firstChar","slice","concat","JSON","parse","indexOf","escapedSpaceCharacters","imageCandidates","substr","split","map","s","_s$replace$trim$split","replace","trim","_s$replace$trim$split2","_slicedToArray","url","descriptor","require","urlToRequire","code","o","i","a","secondChar","hotReloadAPIPath","_x","_x2","_ref","apply","arguments","_asyncToGenerator","html","loaderContext","emitModule","vueHotReloadAPIRaw","vueOptions","depPromises","defaultModules","transformRequire","p","push","transformSrcset","userModules","compilerModules","compilerOptions","preserveWhitespace","modules","directives","compilerDirectives","comments","hasComment","scopeId","hasScoped","id","compiled","compiler","tips","tip","emitWarning","message","fileName","_module","module","parent","path","lineNumber","columnNumber","source","errors","emitError","Error","pad","e","join","bubleOptions","buble","stripWith","transforms","stripWithFunctional","staticRenderFns","fn","toFunction","transpile","render","exportsName","esModule","Promise","all","line"],"mappings":"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","file":"static/js/vue-template-compiler.b8f7afc7a.chunk.js","sourcesContent":["/* eslint-disable */\nimport type { ModuleOptions } from 'vue-template-compiler';\n\n// vue compiler module for transforming `<tag>:<attribute>` to `require`\nvar defaultOptions = {\n  img: 'src',\n  image: 'xlink:href',\n};\n\nexport default (userOptions, addDependency): ModuleOptions => {\n  var options = userOptions\n    ? { ...defaultOptions, userOptions }\n    : defaultOptions;\n\n  return {\n    postTransformNode: node => transform(node, options, addDependency),\n  } as ModuleOptions;\n};\n\nfunction transform(node, options, addDependency) {\n  for (var tag in options) {\n    if (node.tag === tag && node.attrs) {\n      var attributes = options[tag];\n      if (typeof attributes === 'string') {\n        node.attrs.some(attr => rewrite(attr, attributes, addDependency));\n      } else if (Array.isArray(attributes)) {\n        attributes.forEach(item =>\n          node.attrs.some(attr => rewrite(attr, item, addDependency))\n        );\n      }\n    }\n  }\n}\n\nfunction rewrite(attr, name, addDependency) {\n  if (attr.name === name) {\n    var value = attr.value;\n    var isStatic =\n      value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"';\n    if (!isStatic) {\n      return;\n    }\n    var firstChar = value.charAt(1);\n    if (firstChar === '.' || firstChar === '~') {\n      if (firstChar === '~') {\n        value = '\"' + value.slice(2);\n      }\n      // get dependency the quotes\n      attr.value = `require(${value})`;\n\n      addDependency(JSON.parse(value));\n    }\n    return true;\n  }\n}\n","/* eslint-disable */\nimport type { ModuleOptions } from 'vue-template-compiler';\n\n// vue compiler module for transforming `img:srcset` to a number of `require`s\nexport default function (): ModuleOptions {\n  return {\n    postTransformNode: node => transform(node),\n  } as ModuleOptions;\n}\n\nfunction transform(node): void {\n  const tags = ['img', 'source'];\n\n  if (tags.indexOf(node.tag) !== -1 && node.attrs) {\n    node.attrs.forEach(attr => {\n      if (attr.name === 'srcset') {\n        // same logic as in transform-require.js\n        var value = attr.value;\n        var isStatic =\n          value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"';\n        if (!isStatic) {\n          return;\n        }\n\n        // http://w3c.github.io/html/semantics-embedded-content.html#ref-for-image-candidate-string-5\n        const escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\n\n        const imageCandidates = value\n          .substr(1, value.length - 2)\n          .split(',')\n          .map(s => {\n            // The attribute value arrives here with all whitespace, except normal spaces, represented by escape sequences\n            const [url, descriptor] = s\n              .replace(escapedSpaceCharacters, ' ')\n              .trim()\n              .split(' ', 2);\n            return { require: urlToRequire(url), descriptor: descriptor };\n          });\n\n        let code = '';\n        imageCandidates.forEach((o, i, a) => {\n          code +=\n            o.require +\n            ' + \" ' +\n            o.descriptor +\n            (i < a.length - 1 ? ', \" + ' : '\"');\n        });\n\n        attr.value = code;\n      }\n    });\n  }\n}\n\nfunction urlToRequire(url) {\n  // same logic as in transform-require.js\n  var firstChar = url.charAt(0);\n  if (firstChar === '.' || firstChar === '~') {\n    if (firstChar === '~') {\n      var secondChar = url.charAt(1);\n      url = '\"' + url.slice(secondChar === '/' ? 2 : 1);\n    }\n    return `require(\"${url}\")`;\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport transpile from 'vue-template-es2015-compiler';\nimport * as compiler from 'vue-template-compiler';\n// @ts-ignore\nimport { LoaderContext } from 'sandpack-core';\n// @ts-ignore\nimport vueHotReloadAPIRaw from '!raw-loader!vue-hot-reload-api';\n\n// eslint-disable-next-line\nimport transformRequire from './modules/transform-require';\nimport transformSrcset from './modules/transform-srcset';\n\nconst hotReloadAPIPath = '!noop-loader!/node_modules/vue-hot-reload-api.js';\nexport default async function (\n  html: string,\n  loaderContext: LoaderContext\n): Promise<string> {\n  loaderContext.emitModule(\n    hotReloadAPIPath,\n    vueHotReloadAPIRaw,\n    '/',\n    false,\n    false\n  );\n\n  const { options } = loaderContext;\n  const vueOptions = options.vueOptions || {};\n  const needsHotReload = true;\n\n  const depPromises = [];\n  const addDependency = (p: string) => {\n    depPromises.push(loaderContext.addDependency(p));\n  };\n\n  const defaultModules = [\n    transformRequire(options.transformRequire, addDependency),\n    transformSrcset(),\n  ];\n  const userModules = vueOptions.compilerModules || options.compilerModules;\n\n  const compilerOptions: compiler.CompilerOptionsWithSourceRange = {\n    preserveWhitespace: options.preserveWhitespace,\n    modules: defaultModules.concat(userModules || []),\n    directives:\n      vueOptions.compilerDirectives || options.compilerDirectives || {},\n    // @ts-ignore\n    comments: options.hasComment,\n    // @ts-ignore\n    scopeId: options.hasScoped ? options.id : null,\n  };\n\n  const compiled = compiler.compile(html, compilerOptions);\n\n  // tips\n  if (compiled.tips && compiled.tips.length) {\n    compiled.tips.forEach(tip => {\n      loaderContext.emitWarning({\n        name: 'vue-warning',\n        message: typeof tip === 'string' ? tip : '',\n        fileName: loaderContext._module.module.parent\n          ? loaderContext._module.module.parent.path\n          : loaderContext.path,\n        lineNumber: 1,\n        columnNumber: 1,\n        source: 'vue-template-compiler',\n      });\n    });\n  }\n\n  let code;\n  if (compiled.errors && compiled.errors.length) {\n    loaderContext.emitError(\n      new Error(\n        `\\n  Error compiling template:\\n${pad(html)}\\n` +\n          compiled.errors.map(e => `  - ${e}`).join('\\n') +\n          '\\n'\n      )\n    );\n    code = 'module.exports={render:function(){},staticRenderFns:[]}';\n  } else {\n    const bubleOptions = options.buble;\n    const stripWith = bubleOptions.transforms.stripWith !== false;\n    const { stripWithFunctional } = bubleOptions.transforms;\n\n    const staticRenderFns = compiled.staticRenderFns.map(fn =>\n      toFunction(fn, stripWithFunctional)\n    );\n\n    code =\n      transpile(\n        'var render = ' +\n          toFunction(compiled.render, stripWithFunctional) +\n          '\\n' +\n          'var staticRenderFns = [' +\n          staticRenderFns.join(',') +\n          ']',\n        bubleOptions\n      ) + '\\n';\n    // mark with stripped (this enables Vue to use correct runtime proxy detection)\n    if (stripWith) {\n      code += `render._withStripped = true\\n`;\n    }\n\n    const exports = `{ render: render, staticRenderFns: staticRenderFns }`;\n    code += `module.exports = ${exports}`;\n  }\n\n  // hot-reload\n  if (needsHotReload) {\n    const exportsName = vueOptions.esModule ? 'esExports' : 'module.exports';\n    code +=\n      '\\nif (module.hot) {\\n' +\n      '  module.hot.accept()\\n' +\n      '  if (module.hot.data) {\\n' +\n      '    require(\"' +\n      hotReloadAPIPath +\n      '\")' +\n      '      .rerender(\"' +\n      options.id +\n      '\", ' +\n      exportsName +\n      ')\\n' +\n      '  }\\n' +\n      '}';\n  }\n\n  await Promise.all(depPromises);\n\n  return code;\n}\n\nfunction toFunction(code, stripWithFunctional) {\n  return (\n    'function (' + (stripWithFunctional ? '_h,_vm' : '') + ') {' + code + '}'\n  );\n}\n\nfunction pad(html) {\n  return html\n    .split(/\\r?\\n/)\n    .map(line => `  ${line}`)\n    .join('\\n');\n}\n"],"sourceRoot":""}