{"version":3,"file":"js/app~application-9125501b9e948173b13b.chunk.js","sources":["webpack:///./app/javascript/components/Website/index.tsx","webpack:///./app/javascript/components/Website/src/components/CategoryTitle/index.tsx","webpack:///./app/javascript/components/Website/src/components/CategoryTitle/styles.scss?5d70","webpack:///./app/javascript/components/Website/src/components/DarkModeToggle.jsx","webpack:///./app/javascript/components/Website/src/components/Hero/index.tsx","webpack:///./app/javascript/components/Website/src/components/Hero/styles.scss?6ae4","webpack:///./app/javascript/components/Website/src/components/KitCard/index.tsx","webpack:///./app/javascript/components/Website/src/components/KitCard/styles.scss?2283","webpack:///./app/javascript/components/Website/src/components/KitFilter/ReactSVG.tsx","webpack:///./app/javascript/components/Website/src/components/KitFilter/index.tsx","webpack:///./app/javascript/components/Website/src/components/KitFilter/styles.scss?f85f","webpack:///./app/javascript/components/Website/src/components/KitGrid/index.tsx","webpack:///./app/javascript/components/Website/src/components/KitGrid/styles.scss?d429","webpack:///./app/javascript/components/Website/src/components/PageContainer/index.tsx","webpack:///./app/javascript/components/Website/src/hooks/loaders.ts","webpack:///./app/javascript/components/Website/src/layouts/LayoutRight.tsx","webpack:///./app/javascript/components/Website/src/pages/CategoryShow/index.tsx","webpack:///./app/javascript/components/Website/src/pages/CategoryShow/styles.scss?b908","webpack:///./app/javascript/components/Website/src/pages/ComponentList.tsx","webpack:///./app/javascript/components/Website/src/pages/ComponentShow.tsx","webpack:///./app/javascript/images/pb-hero-desktop.svg","webpack:///./app/javascript/images/pb-hero-mobile.svg","webpack:///./app/javascript/packs/app.js","webpack:///./app/javascript/utilities/website_sidebar_helper.ts"],"sourcesContent":["import React from \"react\"\nimport LayoutRight from \"./src/layouts/LayoutRight\"\nimport { useLoaderData } from \"react-router-dom\"\n\n\nfunction App() {\n  const { kits, dark } = useLoaderData()\n\n  return (\n    <>{kits.length > 0 && <LayoutRight dark={dark} />}</>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport { Flex, Icon, Title } from \"playbook-ui\";\n\nimport { linkFormat } from \"../../../../../utilities/website_sidebar_helper\";\n\nimport \"./styles.scss\";\n\ntype CategoryTitleProps = {\n  name: string;\n};\n\nexport const CategoryTitle = ({ name }: CategoryTitleProps): React.ReactElement => {\n  return (\n    <Flex align=\"center\" className=\"category-title\" gap=\"xs\" marginBottom=\"md\">\n      <Title size={{ xs: 3, sm: 2, md: 2, lg: 2, xl: 2 }} tag=\"h1\" text={linkFormat(name)} />\n      <Icon className=\"icon mobile\" icon=\"circle-arrow-right\" size=\"sm\" />\n      <Icon className=\"icon desktop\" icon=\"circle-arrow-right\" size=\"xl\" />\n    </Flex>\n  );\n};\n","// extracted by mini-css-extract-plugin","/* @flow */\n\nimport React from 'react'\nimport { useState } from 'react'\nimport { Body, Flex, FlexItem, Icon, Toggle } from 'playbook-ui'\n\ntype ToggleProps = {\n  initMode: String,\n}\nconst DarkModeToggle = ({ initMode }: ToggleProps) => {\n  const [darkMode, toggleDarkMode] = useState(initMode ? JSON.parse(initMode) : false)\n  const [loading, toggleLoading] = useState(false)\n\n  const toggleHook = () => {\n    toggleLoading(true)\n    toggleDarkMode(!darkMode)\n    window.location = !darkMode ? '/enable_dark_mode' : '/disable_dark_mode'\n  }\n\n  const iconClickHandler = () => {\n    toggleHook()\n  }\n\n  return (\n    <Flex\n        spacing=\"between\"\n        vertical=\"center\"\n    >\n      <If condition={loading}>\n        <FlexItem>\n          <Body\n              color={darkMode ? 'lighter' : ''}\n              dark={!darkMode}\n          >\n            <Icon\n                className=\"toggle-icon\"\n                dark\n                fixedWidth\n                icon=\"spinner\"\n                marginRight=\"xs\"\n                pulse\n            />\n          </Body>\n        </FlexItem>\n      </If>\n      <If condition={!loading}>\n        <a\n            onClick={iconClickHandler}\n            style={{ cursor: 'pointer' }}\n        >\n          <FlexItem>\n            <Body\n                color={darkMode ? '' : 'lighter'}\n                dark={darkMode}\n            >\n              <Icon\n                  className=\"toggle-icon\"\n                  dark\n                  fixedWidth\n                  icon=\"moon\"\n                  marginRight=\"xs\"\n              />\n            </Body>\n          </FlexItem>\n        </a>\n      </If>\n      <FlexItem>\n        <Toggle>\n          <input\n              checked={darkMode}\n              onChange={toggleHook}\n              type=\"checkbox\"\n          />\n        </Toggle>\n      </FlexItem>\n    </Flex>\n  )\n}\n\nexport default DarkModeToggle\n","import React from \"react\";\nimport { Background, Title, Body } from \"playbook-ui\";\n\nimport HeaderMobile from \"../../../../../images/pb-hero-mobile.svg\";\nimport HeaderDesktop from \"../../../../../images/pb-hero-desktop.svg\";\n\nimport \"./styles.scss\";\n\ntype HeroProps = {\n  title: string;\n  description: string;\n};\n\nexport function Hero({ title, description }: HeroProps) {\n  return (\n    <Background\n      alt=\"background with blue colors fading to darker blue\"\n      className=\"hero\"\n      marginBottom=\"lg\"\n      marginX={{ lg: \"sm\", xl: \"sm\" }}\n      padding=\"xl\"\n      paddingTop={{ xs: \"lg\" }}\n      paddingBottom={{ xs: \"sm\" }}\n      backgroundSize={{\n        xs: \"contain\",\n        sm: \"1320px 245px\",\n      }}\n      backgroundPosition={{\n        default: \"right bottom\",\n        xs: \"center top\",\n        sm: \"right bottom\",\n        md: \"right bottom\",\n      }}\n      backgroundColor=\"dark\"\n      backgroundRepeat=\"no-repeat\"\n      imageUrl={{\n        default: HeaderDesktop,\n        xs: HeaderMobile,\n        sm: HeaderDesktop,\n        md: HeaderDesktop,\n      }}\n    >\n      <Title\n        size={{ xs: 3, sm: 3, md: 2, lg: 2, xl: 2 }}\n        paddingTop={{ xs: \"none\", sm: \"xl\", md: \"none\" }}\n        paddingBottom={{ xs: \"none\", default: \"sm\" }}\n        text={title}\n        marginBottom={{ xs: \"none\", md: \"xs\" }}\n        dark\n      />\n      <Body\n        className=\"hero-description\"\n        maxWidth=\"sm\"\n        lineHeight=\"loose\"\n        dark\n        text={description}\n        truncate=\"4\"\n      />\n    </Background>\n  );\n}\n","// extracted by mini-css-extract-plugin","import React from \"react\";\nimport { Body, Card, Flex, Icon, Title } from \"playbook-ui\";\n\nimport { linkFormat } from \"../../../../../utilities/website_sidebar_helper\";\n\nimport \"./styles.scss\";\n\ntype KitCardProps = {\n  description: string,\n  name: string,\n  platform: string,\n};\n\nexport const KitCard = ({ description, name, platform }: KitCardProps) => {\n  return (\n    <Card\n      className=\"kit-card\"\n      paddingX={{\n        xs: \"sm\",\n        sm: \"md\",\n        md: \"md\",\n        lg: \"md\",\n        xl: \"md\",\n      }}\n      paddingTop={{ xs: \"xxs\", default: \"md\" }}\n      paddingBottom={{ xs: \"xxs\", default: \"md\" }}\n      borderRadius=\"lg\"\n    >\n      <a href={`/kits/${name}/${platform}`}>\n        <Flex align=\"center\" className=\"kit-card-header\" justify=\"between\">\n          <Title\n            text={linkFormat(name)}\n            size={4}\n            truncate=\"1\"\n          />\n          <Icon\n            className=\"icon mobile\"\n            fixedWidth\n            icon=\"angle-right\"\n            size=\"sm\"\n          />\n          <Icon\n            className=\"icon desktop\"\n            fixedWidth\n            icon=\"angle-right\"\n            size=\"2x\"\n          />\n        </Flex>\n        <Body\n          className=\"kit-card-description\"\n          color=\"light\"\n          truncate=\"2\"\n          text={description}\n        />\n      </a>\n    </Card>\n  );\n};\n","// extracted by mini-css-extract-plugin","import React from 'react';\n\ntype ReactSVGProps = {\n  active: boolean,\n}\n\nexport const ReactSVG = ({ active }: ReactSVGProps) => {\n\treturn (\n\t\t<svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.76504 16H9.72023C9.72023 16 7.95577 11.9925 8.40428 8.31407C8.85295 4.63563 11.7538 2.96072 13.3987 2.78131C15.0434 2.60175 15.9407 3.6187 15.9407 3.6187L16.2997 3.08033C16.2997 3.08033 13.937 0.687786 10.9463 0.957048C7.95561 1.22616 5.89214 3.19993 4.60624 5.59247C3.32019 7.98516 2.57252 9.65977 2.0642 12.1719C1.55588 14.6841 1.76504 16 1.76504 16Z\" fill=\"#0056CF\" />\n      <path d=\"M0.179405 11.9924L1.73456 12.112L1.4653 13.667L0 13.4876L0.179405 11.9924Z\" fill=\"#0056CF\" />\n      <path d=\"M2.63231 8.70271L3.05108 7.53642L1.67532 6.99805L1.22681 8.25404L2.63231 8.70271Z\" fill=\"#0056CF\" />\n      <path d=\"M4.57561 4.69519L5.38309 3.73835L4.3364 3.05048L3.49902 3.97741L4.57561 4.69519Z\" fill=\"#0056CF\" />\n      <path d=\"M6.69922 0.986926L7.417 1.85421L8.40388 1.28593L7.68611 0.478455L6.69922 0.986926Z\" fill=\"#0056CF\" />\n      <path d=\"M10.198 0L10.3774 0.867436L11.6036 0.837532L11.4839 0.0599554L10.198 0Z\" fill=\"#0056CF\" />\n      <path d=\"M14.3546 0.927002L14.3247 1.46522L15.1621 1.91373L15.3415 1.64463L14.3546 0.927002Z\" fill=\"#0056CF\" />\n      <path d=\"M14.1753 3.22998V3.6785L14.9828 3.7682V3.40923L14.1753 3.22998Z\" fill=\"#0056CF\" />\n      <path d=\"M11.6028 3.6184L11.9915 4.33602L12.5598 3.88751L12.4402 3.40894L11.6028 3.6184Z\" fill=\"#0056CF\" />\n      <path d=\"M10.3764 4.5459L10.9745 5.44308L10.6156 6.071L9.74829 5.11417L10.3764 4.5459Z\" fill=\"#0056CF\" />\n      <path d=\"M9.18061 7.02789L8.79175 7.80547L9.80853 8.67291L10.0477 7.68587L9.18061 7.02789Z\" fill=\"#0056CF\" />\n      <path d=\"M8.76268 9.74921L8.70288 10.7959L9.95888 11.3343L9.89908 10.3472L8.76268 9.74921Z\" fill=\"#0056CF\" />\n      <path d=\"M9.12085 13.4579L9.42002 14.5346L11.0049 14.6243L10.4366 13.4579H9.12085Z\" fill=\"#0056CF\" />\n    </svg>\n\t)\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Body, Flex, Icon, Nav, NavItem, TextInput } from \"playbook-ui\"\nimport { ReactSVG } from \"./ReactSVG\";\n\nimport \"./styles.scss\"\n\ntype KitFilterProps = {\n  kits: any,\n  setFilteredKits: any,\n  setPlatform: any,\n}\n\nconst icons = {\n  rails: (\n    <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.76504 16H9.72023C9.72023 16 7.95577 11.9925 8.40428 8.31407C8.85295 4.63563 11.7538 2.96072 13.3987 2.78131C15.0434 2.60175 15.9407 3.6187 15.9407 3.6187L16.2997 3.08033C16.2997 3.08033 13.937 0.687786 10.9463 0.957048C7.95561 1.22616 5.89214 3.19993 4.60624 5.59247C3.32019 7.98516 2.57252 9.65977 2.0642 12.1719C1.55588 14.6841 1.76504 16 1.76504 16Z\" fill=\"#0056CF\" />\n      <path d=\"M0.179405 11.9924L1.73456 12.112L1.4653 13.667L0 13.4876L0.179405 11.9924Z\" fill=\"#0056CF\" />\n      <path d=\"M2.63231 8.70271L3.05108 7.53642L1.67532 6.99805L1.22681 8.25404L2.63231 8.70271Z\" fill=\"#0056CF\" />\n      <path d=\"M4.57561 4.69519L5.38309 3.73835L4.3364 3.05048L3.49902 3.97741L4.57561 4.69519Z\" fill=\"#0056CF\" />\n      <path d=\"M6.69922 0.986926L7.417 1.85421L8.40388 1.28593L7.68611 0.478455L6.69922 0.986926Z\" fill=\"#0056CF\" />\n      <path d=\"M10.198 0L10.3774 0.867436L11.6036 0.837532L11.4839 0.0599554L10.198 0Z\" fill=\"#0056CF\" />\n      <path d=\"M14.3546 0.927002L14.3247 1.46522L15.1621 1.91373L15.3415 1.64463L14.3546 0.927002Z\" fill=\"#0056CF\" />\n      <path d=\"M14.1753 3.22998V3.6785L14.9828 3.7682V3.40923L14.1753 3.22998Z\" fill=\"#0056CF\" />\n      <path d=\"M11.6028 3.6184L11.9915 4.33602L12.5598 3.88751L12.4402 3.40894L11.6028 3.6184Z\" fill=\"#0056CF\" />\n      <path d=\"M10.3764 4.5459L10.9745 5.44308L10.6156 6.071L9.74829 5.11417L10.3764 4.5459Z\" fill=\"#0056CF\" />\n      <path d=\"M9.18061 7.02789L8.79175 7.80547L9.80853 8.67291L10.0477 7.68587L9.18061 7.02789Z\" fill=\"#0056CF\" />\n      <path d=\"M8.76268 9.74921L8.70288 10.7959L9.95888 11.3343L9.89908 10.3472L8.76268 9.74921Z\" fill=\"#0056CF\" />\n      <path d=\"M9.12085 13.4579L9.42002 14.5346L11.0049 14.6243L10.4366 13.4579H9.12085Z\" fill=\"#0056CF\" />\n    </svg>\n  ),\n  react: (\n    <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.76504 16H9.72023C9.72023 16 7.95577 11.9925 8.40428 8.31407C8.85295 4.63563 11.7538 2.96072 13.3987 2.78131C15.0434 2.60175 15.9407 3.6187 15.9407 3.6187L16.2997 3.08033C16.2997 3.08033 13.937 0.687786 10.9463 0.957048C7.95561 1.22616 5.89214 3.19993 4.60624 5.59247C3.32019 7.98516 2.57252 9.65977 2.0642 12.1719C1.55588 14.6841 1.76504 16 1.76504 16Z\" fill=\"#0056CF\" />\n      <path d=\"M0.179405 11.9924L1.73456 12.112L1.4653 13.667L0 13.4876L0.179405 11.9924Z\" fill=\"#0056CF\" />\n      <path d=\"M2.63231 8.70271L3.05108 7.53642L1.67532 6.99805L1.22681 8.25404L2.63231 8.70271Z\" fill=\"#0056CF\" />\n      <path d=\"M4.57561 4.69519L5.38309 3.73835L4.3364 3.05048L3.49902 3.97741L4.57561 4.69519Z\" fill=\"#0056CF\" />\n      <path d=\"M6.69922 0.986926L7.417 1.85421L8.40388 1.28593L7.68611 0.478455L6.69922 0.986926Z\" fill=\"#0056CF\" />\n      <path d=\"M10.198 0L10.3774 0.867436L11.6036 0.837532L11.4839 0.0599554L10.198 0Z\" fill=\"#0056CF\" />\n      <path d=\"M14.3546 0.927002L14.3247 1.46522L15.1621 1.91373L15.3415 1.64463L14.3546 0.927002Z\" fill=\"#0056CF\" />\n      <path d=\"M14.1753 3.22998V3.6785L14.9828 3.7682V3.40923L14.1753 3.22998Z\" fill=\"#0056CF\" />\n      <path d=\"M11.6028 3.6184L11.9915 4.33602L12.5598 3.88751L12.4402 3.40894L11.6028 3.6184Z\" fill=\"#0056CF\" />\n      <path d=\"M10.3764 4.5459L10.9745 5.44308L10.6156 6.071L9.74829 5.11417L10.3764 4.5459Z\" fill=\"#0056CF\" />\n      <path d=\"M9.18061 7.02789L8.79175 7.80547L9.80853 8.67291L10.0477 7.68587L9.18061 7.02789Z\" fill=\"#0056CF\" />\n      <path d=\"M8.76268 9.74921L8.70288 10.7959L9.95888 11.3343L9.89908 10.3472L8.76268 9.74921Z\" fill=\"#0056CF\" />\n      <path d=\"M9.12085 13.4579L9.42002 14.5346L11.0049 14.6243L10.4366 13.4579H9.12085Z\" fill=\"#0056CF\" />\n    </svg>\n  ),\n  swift: (\n    <svg width=\"18\" height=\"16\" viewBox=\"0 0 18 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clip-path=\"url(#clip0_3811_47487)\">\n        <path d=\"M16.4652 11.2567C16.5072 11.1727 16.5072 11.0887 16.5492 11.0053C17.5572 7.05667 15.1626 2.43667 11.0466 0.000671387C12.3479 1.63134 13.1346 3.722 13.1346 5.99734C13.1346 6.68534 13.0626 7.356 12.9259 8.00334L12.9372 7.94C12.8792 8.2 12.8072 8.42534 12.7172 8.64134L12.7272 8.614C12.5939 8.54 12.4839 8.47067 12.3779 8.396L12.3906 8.404C9.21924 6.30467 6.45657 4.02067 3.95657 1.478L3.94924 1.47067C5.57457 3.872 7.25924 5.97067 9.09724 7.92267L9.07324 7.89667C6.3259 6.13667 3.93857 4.31134 1.7139 2.30934L1.76457 2.354C2.08057 2.87667 2.41257 3.32934 2.78057 3.74934L2.77124 3.738C4.97124 6.68667 7.43124 9.25267 10.1706 11.4887L10.2486 11.55C8.10657 12.8533 5.1239 12.9367 2.09924 11.55C1.29724 11.17 0.608572 10.75 -0.0307617 10.268L-9.50545e-05 10.29C1.3479 12.388 3.25324 14.024 5.50724 15.0093L5.58724 15.0407C6.7159 15.6 8.04524 15.928 9.45124 15.928C10.8572 15.928 12.1866 15.6007 13.3672 15.018L13.3152 15.0413H13.3579C13.4552 14.998 13.5386 14.9413 13.6099 14.8733H13.6092C14.6172 14.3693 16.5919 13.8247 17.6839 15.922C17.9772 16.51 18.5232 13.78 16.4659 11.2593L16.4652 11.2567Z\" fill=\"#C1CDD6\" />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3811_47487\">\n          <rect width=\"18\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  ),\n}\n\nexport const KitFilter = ({ kits, setFilteredKits, setPlatform }: KitFilterProps) => {\n  console.log('kits', kits)\n  const [search, setSearch] = useState('')\n  const [platform, setSelectedPlatform] = useState('react')\n\n  const handleOnChange = ({ target }) => {\n    const { value } = target\n    setSearch(value)\n  }\n\n  const selectPlatform = (platform) => {\n    setPlatform(platform)\n    setSelectedPlatform(platform)\n    const filteredKits = searchKit(kits, search, platform)\n    console.log('platform', filteredKits)\n    setFilteredKits(filteredKits)\n  }\n\n  const searchKit = (kitList, search, platform) => {\n    const kits = JSON.parse(JSON.stringify(kitList))\n\n    return kits.filter(kit => {\n      if (kit.components) {\n        kit.components = kit.components.filter(component => {\n          return component.platforms.includes(platform) &&\n            component.name &&\n            component.name.toLowerCase().includes(search.toLowerCase())\n        })\n\n        return kit.components.length > 0\n      } else if (!kit.components && kit.name) {\n        return kit.platforms.includes(platform) &&\n          kit.name &&\n          kit.name.toLowerCase().includes(search.toLowerCase())\n      }\n\n      return false\n    })\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const filteredKits = searchKit(kits, search, platform)\n      console.log('useEffect', filteredKits)\n      setFilteredKits(filteredKits)\n    }, 200)\n\n    return () => clearTimeout(timer)\n  }, [search])\n\n  return (\n    <>\n      <Nav\n        link=\"#\"\n        orientation=\"horizontal\"\n        paddingBottom=\"lg\"\n        variant=\"subtle\"\n      >\n        <NavItem\n          active={platform === 'react'}\n          link=\"#\"\n          onClick={() => selectPlatform('react')}\n        >\n          <Flex align=\"center\">\n            <Body color=\"link\">\n              <Icon\n                customIcon={<ReactSVG active={platform === 'react'}/>}\n                paddingRight=\"xs\"\n                size=\"lg\"\n              />\n            </Body>\n            <span className=\"pb_nav_list_item_text\">React</span>\n          </Flex>\n        </NavItem>\n        <NavItem\n          active={platform === 'rails'}\n          iconLeft=\"rails\"\n          link=\"#\"\n          onClick={() => selectPlatform('rails')}\n          text=\"Rails\"\n        />\n        <NavItem\n          active={platform === 'swift'}\n          iconLeft=\"swift\"\n          link=\"#\"\n          onClick={() => selectPlatform('swift')}\n          text=\"Swift\"\n        />\n      </Nav>\n\n      <TextInput\n        addOn={{ icon: 'search', alignment: 'left', border: false }}\n        className=\"kit-filter\"\n        name=\"search\"\n        maxWidth=\"sm\"\n        onChange={handleOnChange}\n        placeholder=\"Filter Components by Name\"\n        value={search}\n      />\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin","import React, { ReactElement } from \"react\";\nimport { Layout } from \"playbook-ui\";\n\nimport \"./styles.scss\";\n\ntype KitGridProps = {\n  children: ReactElement | ReactElement[];\n};\n\nexport const KitGrid = ({ children }: KitGridProps) => {\n  return (\n    <Layout layout=\"collection\">\n      <Layout.Body className=\"kit-container\">{children}</Layout.Body>\n    </Layout>\n  );\n};\n","// extracted by mini-css-extract-plugin","import React, { ReactElement } from \"react\";\nimport { Flex } from \"playbook-ui\";\n\ntype PageContainerProps = {\n  children: ReactElement | ReactElement[];\n};\nexport const PageContainer = ({ children }: PageContainerProps) => {\n  return (\n    <Flex\n      align=\"stretch\"\n      gap=\"lg\"\n      maxWidth=\"xxl\"\n      marginX=\"auto\"\n      orientation=\"column\"\n      paddingX=\"sm\"\n    >\n      {children}\n    </Flex>\n  );\n};\n","import { LoaderFunctionArgs } from \"react-router-dom\";\n\ninterface ComponentTypes {\n  name: string;\n  platforms: string[];\n  description: string;\n}\n\ninterface CategpryTypes {\n  name: string;\n  description: string;\n  components: ComponentTypes[];\n}\n\nconst sortByName = (a: ComponentTypes, b: ComponentTypes) =>\n  a.name.localeCompare(b.name);\n\nexport const ComponentsLoader: () => Promise<CategpryTypes[]> = async () => {\n  const response = await fetch(\"/beta/kits.json\");\n  const data = await response.json();\n\n  const sortComponentsByName = (kitCategory: CategpryTypes) => {\n    kitCategory.components.sort(sortByName);\n  };\n\n  data.kits.sort(sortByName).forEach(sortComponentsByName);\n\n  return data;\n};\n\nexport const CategoryLoader: (\n  props: LoaderFunctionArgs\n) => Promise<ComponentTypes> = async ({ params }) => {\n  const response = await fetch(\"/beta/kits.json\");\n  const { kits } = await response.json();\n\n  const filteredData = kits.filter(\n    (kit: ComponentTypes) => kit.name === params.name\n  )[0];\n\n  filteredData.components.sort(sortByName);\n\n  return filteredData;\n};\n","import React from \"react\"\nimport { Outlet } from \"react-router-dom\"\nimport DarkModeToggle from \"../components/DarkModeToggle.jsx\"\n\nimport { Background, Button, FlexItem, Flex } from \"playbook-ui\"\n\nexport default function LayoutRight({ dark }) {\n  return (\n    <Background backgroundColor={dark ? \"dark\" : \"white\"} className=\"pb--page--content--main\">\n      <Flex\n        spacing='between'\n        vertical='center'\n        display={{ xs: \"none\", sm: \"none\", md: \"none\", default: \"none\", lg: \"flex\" }}\n      >\n        <Button\n          text='Back to Legacy View'\n          variant='link'\n          icon='circle-left'\n          tag='h1'\n          marginY='xs'\n          paddingLeft='none'\n          marginBottom='none'\n          paddingBottom='none'\n          link='/kits'\n          marginLeft='md'\n        />\n        <FlexItem\n          marginRight='md'\n          className='pb--page--dark-mode-toggle-desktop'\n        >\n          <DarkModeToggle initMode={dark} />\n        </FlexItem>\n      </Flex>\n      <Outlet />\n    </Background>\n  )\n}\n","import React, { useState } from \"react\"\nimport { NavLink, useLoaderData } from \"react-router-dom\"\nimport { Body, Flex, Icon } from \"playbook-ui\"\n\nimport { KitCard } from \"../../components/KitCard\"\nimport { KitFilter } from \"../../components/KitFilter\"\nimport { KitGrid } from \"../../components/KitGrid\"\nimport { Hero } from \"../../components/Hero\"\nimport { PageContainer } from \"../../components/PageContainer\"\nimport { linkFormat } from \"../../../../../utilities/website_sidebar_helper\"\n\nimport \"./styles.scss\"\n\nexport default function CategoryShow() {\n  const { components, name, description } = useLoaderData()\n  const [kitsToShow, setKitsToShow] = useState(components)\n  const [platform, setPlatform] = useState('react')\n\n  return (\n    <>\n      <Hero description={description} title={linkFormat(name)} />\n\n      <Flex\n        align=\"center\"\n        orientation=\"column\"\n        paddingBottom=\"lg\"\n      >\n        <KitFilter\n          kits={components}\n          setFilteredKits={setKitsToShow}\n          setPlatform={setPlatform}\n        />\n      </Flex>\n\n      <PageContainer>\n        <Flex align=\"center\" className=\"category-breadcrumb\">\n          <NavLink to=\"/beta/kits\">\n            <Body className=\"previous-route\" color=\"light\">Components</Body>\n          </NavLink>\n          <Icon className=\"category-breadcrumb-icon\" icon=\"angle-right\" />\n          <Body text={linkFormat(name)} />\n        </Flex>\n        <KitGrid>\n          {!kitsToShow.length && (\n            <Body\n              text=\"No Results, Try Again\"\n            />\n          )}\n          {kitsToShow.map(({ description, name }, index) => (\n            <KitCard\n              description={description}\n              name={name}\n              key={`category-${name}-${index}`}\n              platform={platform}\n            />\n          ))}\n        </KitGrid>\n      </PageContainer>\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin","import React, { useState } from \"react\"\nimport { NavLink, Outlet, useLoaderData, useOutlet } from \"react-router-dom\"\nimport { Body, Flex } from 'playbook-ui'\n\nimport { KitCard } from \"../components/KitCard\"\nimport { KitFilter } from \"../components/KitFilter\"\nimport { Hero } from \"../components/Hero\"\nimport { KitGrid } from \"../components/KitGrid\"\nimport { PageContainer } from \"../components/PageContainer\"\nimport { CategoryTitle } from \"../components/CategoryTitle\"\n\nconst description =\n  \"Components are the reusable building blocks of our design system. Each component meets a specific interaction or UI need, and has been specifically created to work together to create patterns and intuitive user experiences.\"\n\nexport default function ComponentList() {\n  const outlet = useOutlet()\n  const { kits } = useLoaderData()\n  const [kitsToShow, setKitsToShow] = useState(kits)\n  const [platform, setPlatform] = useState('react')\n\n  return (\n    <>\n      {!outlet && (\n        <>\n          <Hero description={description} title=\"Components\" />\n\n          <Flex\n            align=\"center\"\n            orientation=\"column\"\n            paddingBottom=\"lg\"\n          >\n            <KitFilter\n              kits={kits}\n              setFilteredKits={setKitsToShow}\n              setPlatform={setPlatform}\n            />\n          </Flex>\n\n          <PageContainer>\n            {!kitsToShow.length && (\n              <Body\n                text=\"No Results, Try Again\"\n              />\n            )}\n            {kitsToShow.map(({ name, components }, index) => (\n              <section\n                className=\"category mb_xl\"\n                key={`${name}-${index}`}\n                id={name}\n              >\n                <NavLink to={`/beta/kit_category/${name}`}>\n                  <CategoryTitle name={name} />\n                </NavLink>\n                <KitGrid>\n                  {components.map(({ name, description }, index) => (\n                    <KitCard\n                      description={description}\n                      name={name}\n                      key={`${name}-${index}`}\n                      platform={platform}\n                    />\n                  ))}\n                </KitGrid>\n              </section>\n            ))}\n          </PageContainer>\n        </>\n      )}\n\n      <Outlet />\n    </>\n  )\n}\n","import React from \"react\"\nimport { Title } from \"playbook-ui\"\n\nexport default function ComponentShow() {\n  return (\n    <Title\n      paddingTop={{ xs: \"md\", sm: \"md\", md: \"md\", default: \"none\" }}\n      text={\"Component Show Page\"}\n      size='2'\n    />\n  )\n}\n","module.exports = __webpack_public_path__ + \"media/images/pb-hero-desktop-5a9fcb37de0c0aa2cb3bbacecf418224.svg\";","module.exports = __webpack_public_path__ + \"media/images/pb-hero-mobile-f103a685af562beac0b85fb8a208b7c7.svg\";","import React from 'react'\nimport {\n  createBrowserRouter,\n  createRoutesFromElements,\n  Navigate,\n  Route,\n  RouterProvider,\n} from 'react-router-dom'\n\nimport App from '../components/Website'\nimport ComponentList from '../components/Website/src/pages/ComponentList'\nimport ComponentShow from '../components/Website/src/pages/ComponentShow'\nimport CategoryShow from '../components/Website/src/pages/CategoryShow'\nimport { CategoryLoader, ComponentsLoader } from '../components/Website/src/hooks/loaders'\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route\n        element={<App />}\n        loader={ComponentsLoader}\n        path=\"/beta\"\n    >\n      <Route\n          element={<ComponentList />}\n          loader={ComponentsLoader}\n          path=\"kits\"\n      >\n        <Route\n            element={<ComponentShow />}\n            path=\":name\"\n        />\n        <Route\n            element={<Navigate to=\"react\" />}\n            path=\":name\"\n        />\n      </Route>\n      <Route\n          element={<CategoryShow />}\n          loader={CategoryLoader}\n          path=\"kit_category/:name\"\n      />\n      \n    </Route>\n  )\n)\n\nexport const Website = () => <RouterProvider router={router} />\n","export const linkFormat = (item: string) => {\n  const linkTitle = Array.isArray(item) ? item[0] : item;\n  \n  const formattedTitle = linkTitle\n    .replace(/_/g, ' ') // replaces underscore\n    .replace(/\\b(?:and)\\b/g, '&') // replaces \"and\" with \"&\"\n    .replace(/\\b\\w/g, (match: string) => match.toUpperCase());\n\n  return formattedTitle;\n};"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AAEA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;ACnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;AC5DA;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;ACzDA;;;;;;;;;;;;;;;;;;ACAA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxlKA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;ACfA;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;AAaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;AC5DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC9CA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;;A","sourceRoot":""}